// Code generated by ent, DO NOT EDIT.

package thirdpartyauth

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"tribemedia.io/m/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLTE(FieldID, id))
}

// OidcIssuerURL applies equality check predicate on the "oidc_issuer_url" field. It's identical to OidcIssuerURLEQ.
func OidcIssuerURL(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldOidcIssuerURL, v))
}

// JwksURL applies equality check predicate on the "jwks_url" field. It's identical to JwksURLEQ.
func JwksURL(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldJwksURL, v))
}

// OidcIssuerURLEQ applies the EQ predicate on the "oidc_issuer_url" field.
func OidcIssuerURLEQ(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldOidcIssuerURL, v))
}

// OidcIssuerURLNEQ applies the NEQ predicate on the "oidc_issuer_url" field.
func OidcIssuerURLNEQ(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNEQ(FieldOidcIssuerURL, v))
}

// OidcIssuerURLIn applies the In predicate on the "oidc_issuer_url" field.
func OidcIssuerURLIn(vs ...string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIn(FieldOidcIssuerURL, vs...))
}

// OidcIssuerURLNotIn applies the NotIn predicate on the "oidc_issuer_url" field.
func OidcIssuerURLNotIn(vs ...string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotIn(FieldOidcIssuerURL, vs...))
}

// OidcIssuerURLGT applies the GT predicate on the "oidc_issuer_url" field.
func OidcIssuerURLGT(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGT(FieldOidcIssuerURL, v))
}

// OidcIssuerURLGTE applies the GTE predicate on the "oidc_issuer_url" field.
func OidcIssuerURLGTE(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGTE(FieldOidcIssuerURL, v))
}

// OidcIssuerURLLT applies the LT predicate on the "oidc_issuer_url" field.
func OidcIssuerURLLT(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLT(FieldOidcIssuerURL, v))
}

// OidcIssuerURLLTE applies the LTE predicate on the "oidc_issuer_url" field.
func OidcIssuerURLLTE(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLTE(FieldOidcIssuerURL, v))
}

// OidcIssuerURLContains applies the Contains predicate on the "oidc_issuer_url" field.
func OidcIssuerURLContains(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldContains(FieldOidcIssuerURL, v))
}

// OidcIssuerURLHasPrefix applies the HasPrefix predicate on the "oidc_issuer_url" field.
func OidcIssuerURLHasPrefix(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldHasPrefix(FieldOidcIssuerURL, v))
}

// OidcIssuerURLHasSuffix applies the HasSuffix predicate on the "oidc_issuer_url" field.
func OidcIssuerURLHasSuffix(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldHasSuffix(FieldOidcIssuerURL, v))
}

// OidcIssuerURLIsNil applies the IsNil predicate on the "oidc_issuer_url" field.
func OidcIssuerURLIsNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIsNull(FieldOidcIssuerURL))
}

// OidcIssuerURLNotNil applies the NotNil predicate on the "oidc_issuer_url" field.
func OidcIssuerURLNotNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotNull(FieldOidcIssuerURL))
}

// OidcIssuerURLEqualFold applies the EqualFold predicate on the "oidc_issuer_url" field.
func OidcIssuerURLEqualFold(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEqualFold(FieldOidcIssuerURL, v))
}

// OidcIssuerURLContainsFold applies the ContainsFold predicate on the "oidc_issuer_url" field.
func OidcIssuerURLContainsFold(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldContainsFold(FieldOidcIssuerURL, v))
}

// JwksURLEQ applies the EQ predicate on the "jwks_url" field.
func JwksURLEQ(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEQ(FieldJwksURL, v))
}

// JwksURLNEQ applies the NEQ predicate on the "jwks_url" field.
func JwksURLNEQ(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNEQ(FieldJwksURL, v))
}

// JwksURLIn applies the In predicate on the "jwks_url" field.
func JwksURLIn(vs ...string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIn(FieldJwksURL, vs...))
}

// JwksURLNotIn applies the NotIn predicate on the "jwks_url" field.
func JwksURLNotIn(vs ...string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotIn(FieldJwksURL, vs...))
}

// JwksURLGT applies the GT predicate on the "jwks_url" field.
func JwksURLGT(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGT(FieldJwksURL, v))
}

// JwksURLGTE applies the GTE predicate on the "jwks_url" field.
func JwksURLGTE(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldGTE(FieldJwksURL, v))
}

// JwksURLLT applies the LT predicate on the "jwks_url" field.
func JwksURLLT(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLT(FieldJwksURL, v))
}

// JwksURLLTE applies the LTE predicate on the "jwks_url" field.
func JwksURLLTE(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldLTE(FieldJwksURL, v))
}

// JwksURLContains applies the Contains predicate on the "jwks_url" field.
func JwksURLContains(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldContains(FieldJwksURL, v))
}

// JwksURLHasPrefix applies the HasPrefix predicate on the "jwks_url" field.
func JwksURLHasPrefix(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldHasPrefix(FieldJwksURL, v))
}

// JwksURLHasSuffix applies the HasSuffix predicate on the "jwks_url" field.
func JwksURLHasSuffix(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldHasSuffix(FieldJwksURL, v))
}

// JwksURLIsNil applies the IsNil predicate on the "jwks_url" field.
func JwksURLIsNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIsNull(FieldJwksURL))
}

// JwksURLNotNil applies the NotNil predicate on the "jwks_url" field.
func JwksURLNotNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotNull(FieldJwksURL))
}

// JwksURLEqualFold applies the EqualFold predicate on the "jwks_url" field.
func JwksURLEqualFold(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldEqualFold(FieldJwksURL, v))
}

// JwksURLContainsFold applies the ContainsFold predicate on the "jwks_url" field.
func JwksURLContainsFold(v string) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldContainsFold(FieldJwksURL, v))
}

// CustomJwksIsNil applies the IsNil predicate on the "custom_jwks" field.
func CustomJwksIsNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldIsNull(FieldCustomJwks))
}

// CustomJwksNotNil applies the NotNil predicate on the "custom_jwks" field.
func CustomJwksNotNil() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.FieldNotNull(FieldCustomJwks))
}

// HasOrganization applies the HasEdge predicate on the "organization" edge.
func HasOrganization() predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OrganizationTable, OrganizationColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrganizationWith applies the HasEdge predicate on the "organization" edge with a given conditions (other predicates).
func HasOrganizationWith(preds ...predicate.Organization) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(func(s *sql.Selector) {
		step := newOrganizationStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ThirdPartyAuth) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ThirdPartyAuth) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ThirdPartyAuth) predicate.ThirdPartyAuth {
	return predicate.ThirdPartyAuth(sql.NotPredicates(p))
}
