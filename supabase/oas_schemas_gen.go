// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"
)

// ActivateForbidden is response for Activate operation.
type ActivateForbidden struct{}

func (*ActivateForbidden) activateRes() {}

// ActivateInternalServerError is response for Activate operation.
type ActivateInternalServerError struct{}

func (*ActivateInternalServerError) activateRes() {}

// ActivateVanitySubdomainPleaseForbidden is response for ActivateVanitySubdomainPlease operation.
type ActivateVanitySubdomainPleaseForbidden struct{}

func (*ActivateVanitySubdomainPleaseForbidden) activateVanitySubdomainPleaseRes() {}

// ActivateVanitySubdomainPleaseInternalServerError is response for ActivateVanitySubdomainPlease operation.
type ActivateVanitySubdomainPleaseInternalServerError struct{}

func (*ActivateVanitySubdomainPleaseInternalServerError) activateVanitySubdomainPleaseRes() {}

// Ref: #/components/schemas/ActivateVanitySubdomainResponse
type ActivateVanitySubdomainResponse struct {
	CustomDomain string `json:"custom_domain"`
}

// GetCustomDomain returns the value of CustomDomain.
func (s *ActivateVanitySubdomainResponse) GetCustomDomain() string {
	return s.CustomDomain
}

// SetCustomDomain sets the value of CustomDomain.
func (s *ActivateVanitySubdomainResponse) SetCustomDomain(val string) {
	s.CustomDomain = val
}

func (*ActivateVanitySubdomainResponse) activateVanitySubdomainPleaseRes() {}

// Ref: #/components/schemas/ApiKeyResponse
type ApiKeyResponse struct {
	Name   string `json:"name"`
	APIKey string `json:"api_key"`
}

// GetName returns the value of Name.
func (s *ApiKeyResponse) GetName() string {
	return s.Name
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKeyResponse) GetAPIKey() string {
	return s.APIKey
}

// SetName sets the value of Name.
func (s *ApiKeyResponse) SetName(val string) {
	s.Name = val
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKeyResponse) SetAPIKey(val string) {
	s.APIKey = val
}

// ApplyNetworkRestrictionsForbidden is response for ApplyNetworkRestrictions operation.
type ApplyNetworkRestrictionsForbidden struct{}

func (*ApplyNetworkRestrictionsForbidden) applyNetworkRestrictionsRes() {}

// ApplyNetworkRestrictionsInternalServerError is response for ApplyNetworkRestrictions operation.
type ApplyNetworkRestrictionsInternalServerError struct{}

func (*ApplyNetworkRestrictionsInternalServerError) applyNetworkRestrictionsRes() {}

// Ref: #/components/schemas/AttributeMapping
type AttributeMapping struct {
	Keys AttributeMappingKeys `json:"keys"`
}

// GetKeys returns the value of Keys.
func (s *AttributeMapping) GetKeys() AttributeMappingKeys {
	return s.Keys
}

// SetKeys sets the value of Keys.
func (s *AttributeMapping) SetKeys(val AttributeMappingKeys) {
	s.Keys = val
}

type AttributeMappingKeys map[string]AttributeValue

func (s *AttributeMappingKeys) init() AttributeMappingKeys {
	m := *s
	if m == nil {
		m = map[string]AttributeValue{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/AttributeValue
type AttributeValue struct {
	Default OptAttributeValueDefault `json:"default"`
	Name    OptString                `json:"name"`
	Names   []string                 `json:"names"`
}

// GetDefault returns the value of Default.
func (s *AttributeValue) GetDefault() OptAttributeValueDefault {
	return s.Default
}

// GetName returns the value of Name.
func (s *AttributeValue) GetName() OptString {
	return s.Name
}

// GetNames returns the value of Names.
func (s *AttributeValue) GetNames() []string {
	return s.Names
}

// SetDefault sets the value of Default.
func (s *AttributeValue) SetDefault(val OptAttributeValueDefault) {
	s.Default = val
}

// SetName sets the value of Name.
func (s *AttributeValue) SetName(val OptString) {
	s.Name = val
}

// SetNames sets the value of Names.
func (s *AttributeValue) SetNames(val []string) {
	s.Names = val
}

// AttributeValueDefault represents sum type.
type AttributeValueDefault struct {
	Type                   AttributeValueDefaultType // switch on this field
	AttributeValueDefault0 AttributeValueDefault0
	Float64                float64
	String                 string
	Bool                   bool
}

// AttributeValueDefaultType is oneOf type of AttributeValueDefault.
type AttributeValueDefaultType string

// Possible values for AttributeValueDefaultType.
const (
	AttributeValueDefault0AttributeValueDefault AttributeValueDefaultType = "AttributeValueDefault0"
	Float64AttributeValueDefault                AttributeValueDefaultType = "float64"
	StringAttributeValueDefault                 AttributeValueDefaultType = "string"
	BoolAttributeValueDefault                   AttributeValueDefaultType = "bool"
)

// IsAttributeValueDefault0 reports whether AttributeValueDefault is AttributeValueDefault0.
func (s AttributeValueDefault) IsAttributeValueDefault0() bool {
	return s.Type == AttributeValueDefault0AttributeValueDefault
}

// IsFloat64 reports whether AttributeValueDefault is float64.
func (s AttributeValueDefault) IsFloat64() bool { return s.Type == Float64AttributeValueDefault }

// IsString reports whether AttributeValueDefault is string.
func (s AttributeValueDefault) IsString() bool { return s.Type == StringAttributeValueDefault }

// IsBool reports whether AttributeValueDefault is bool.
func (s AttributeValueDefault) IsBool() bool { return s.Type == BoolAttributeValueDefault }

// SetAttributeValueDefault0 sets AttributeValueDefault to AttributeValueDefault0.
func (s *AttributeValueDefault) SetAttributeValueDefault0(v AttributeValueDefault0) {
	s.Type = AttributeValueDefault0AttributeValueDefault
	s.AttributeValueDefault0 = v
}

// GetAttributeValueDefault0 returns AttributeValueDefault0 and true boolean if AttributeValueDefault is AttributeValueDefault0.
func (s AttributeValueDefault) GetAttributeValueDefault0() (v AttributeValueDefault0, ok bool) {
	if !s.IsAttributeValueDefault0() {
		return v, false
	}
	return s.AttributeValueDefault0, true
}

// NewAttributeValueDefault0AttributeValueDefault returns new AttributeValueDefault from AttributeValueDefault0.
func NewAttributeValueDefault0AttributeValueDefault(v AttributeValueDefault0) AttributeValueDefault {
	var s AttributeValueDefault
	s.SetAttributeValueDefault0(v)
	return s
}

// SetFloat64 sets AttributeValueDefault to float64.
func (s *AttributeValueDefault) SetFloat64(v float64) {
	s.Type = Float64AttributeValueDefault
	s.Float64 = v
}

// GetFloat64 returns float64 and true boolean if AttributeValueDefault is float64.
func (s AttributeValueDefault) GetFloat64() (v float64, ok bool) {
	if !s.IsFloat64() {
		return v, false
	}
	return s.Float64, true
}

// NewFloat64AttributeValueDefault returns new AttributeValueDefault from float64.
func NewFloat64AttributeValueDefault(v float64) AttributeValueDefault {
	var s AttributeValueDefault
	s.SetFloat64(v)
	return s
}

// SetString sets AttributeValueDefault to string.
func (s *AttributeValueDefault) SetString(v string) {
	s.Type = StringAttributeValueDefault
	s.String = v
}

// GetString returns string and true boolean if AttributeValueDefault is string.
func (s AttributeValueDefault) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringAttributeValueDefault returns new AttributeValueDefault from string.
func NewStringAttributeValueDefault(v string) AttributeValueDefault {
	var s AttributeValueDefault
	s.SetString(v)
	return s
}

// SetBool sets AttributeValueDefault to bool.
func (s *AttributeValueDefault) SetBool(v bool) {
	s.Type = BoolAttributeValueDefault
	s.Bool = v
}

// GetBool returns bool and true boolean if AttributeValueDefault is bool.
func (s AttributeValueDefault) GetBool() (v bool, ok bool) {
	if !s.IsBool() {
		return v, false
	}
	return s.Bool, true
}

// NewBoolAttributeValueDefault returns new AttributeValueDefault from bool.
func NewBoolAttributeValueDefault(v bool) AttributeValueDefault {
	var s AttributeValueDefault
	s.SetBool(v)
	return s
}

type AttributeValueDefault0 struct{}

// Ref: #/components/schemas/AuthConfigResponse
type AuthConfigResponse struct {
	DisableSignup                                 NilBool    `json:"disable_signup"`
	ExternalAnonymousUsersEnabled                 NilBool    `json:"external_anonymous_users_enabled"`
	ExternalAppleAdditionalClientIds              NilString  `json:"external_apple_additional_client_ids"`
	ExternalAppleClientID                         NilString  `json:"external_apple_client_id"`
	ExternalAppleEnabled                          NilBool    `json:"external_apple_enabled"`
	ExternalAppleSecret                           NilString  `json:"external_apple_secret"`
	ExternalAzureClientID                         NilString  `json:"external_azure_client_id"`
	ExternalAzureEnabled                          NilBool    `json:"external_azure_enabled"`
	ExternalAzureSecret                           NilString  `json:"external_azure_secret"`
	ExternalAzureURL                              NilString  `json:"external_azure_url"`
	ExternalBitbucketClientID                     NilString  `json:"external_bitbucket_client_id"`
	ExternalBitbucketEnabled                      NilBool    `json:"external_bitbucket_enabled"`
	ExternalBitbucketSecret                       NilString  `json:"external_bitbucket_secret"`
	ExternalDiscordClientID                       NilString  `json:"external_discord_client_id"`
	ExternalDiscordEnabled                        NilBool    `json:"external_discord_enabled"`
	ExternalDiscordSecret                         NilString  `json:"external_discord_secret"`
	ExternalEmailEnabled                          NilBool    `json:"external_email_enabled"`
	ExternalFacebookClientID                      NilString  `json:"external_facebook_client_id"`
	ExternalFacebookEnabled                       NilBool    `json:"external_facebook_enabled"`
	ExternalFacebookSecret                        NilString  `json:"external_facebook_secret"`
	ExternalFigmaClientID                         NilString  `json:"external_figma_client_id"`
	ExternalFigmaEnabled                          NilBool    `json:"external_figma_enabled"`
	ExternalFigmaSecret                           NilString  `json:"external_figma_secret"`
	ExternalGithubClientID                        NilString  `json:"external_github_client_id"`
	ExternalGithubEnabled                         NilBool    `json:"external_github_enabled"`
	ExternalGithubSecret                          NilString  `json:"external_github_secret"`
	ExternalGitlabClientID                        NilString  `json:"external_gitlab_client_id"`
	ExternalGitlabEnabled                         NilBool    `json:"external_gitlab_enabled"`
	ExternalGitlabSecret                          NilString  `json:"external_gitlab_secret"`
	ExternalGitlabURL                             NilString  `json:"external_gitlab_url"`
	ExternalGoogleAdditionalClientIds             NilString  `json:"external_google_additional_client_ids"`
	ExternalGoogleClientID                        NilString  `json:"external_google_client_id"`
	ExternalGoogleEnabled                         NilBool    `json:"external_google_enabled"`
	ExternalGoogleSecret                          NilString  `json:"external_google_secret"`
	ExternalGoogleSkipNonceCheck                  NilBool    `json:"external_google_skip_nonce_check"`
	ExternalKakaoClientID                         NilString  `json:"external_kakao_client_id"`
	ExternalKakaoEnabled                          NilBool    `json:"external_kakao_enabled"`
	ExternalKakaoSecret                           NilString  `json:"external_kakao_secret"`
	ExternalKeycloakClientID                      NilString  `json:"external_keycloak_client_id"`
	ExternalKeycloakEnabled                       NilBool    `json:"external_keycloak_enabled"`
	ExternalKeycloakSecret                        NilString  `json:"external_keycloak_secret"`
	ExternalKeycloakURL                           NilString  `json:"external_keycloak_url"`
	ExternalLinkedinOidcClientID                  NilString  `json:"external_linkedin_oidc_client_id"`
	ExternalLinkedinOidcEnabled                   NilBool    `json:"external_linkedin_oidc_enabled"`
	ExternalLinkedinOidcSecret                    NilString  `json:"external_linkedin_oidc_secret"`
	ExternalNotionClientID                        NilString  `json:"external_notion_client_id"`
	ExternalNotionEnabled                         NilBool    `json:"external_notion_enabled"`
	ExternalNotionSecret                          NilString  `json:"external_notion_secret"`
	ExternalPhoneEnabled                          NilBool    `json:"external_phone_enabled"`
	ExternalSlackClientID                         NilString  `json:"external_slack_client_id"`
	ExternalSlackEnabled                          NilBool    `json:"external_slack_enabled"`
	ExternalSlackSecret                           NilString  `json:"external_slack_secret"`
	ExternalSpotifyClientID                       NilString  `json:"external_spotify_client_id"`
	ExternalSpotifyEnabled                        NilBool    `json:"external_spotify_enabled"`
	ExternalSpotifySecret                         NilString  `json:"external_spotify_secret"`
	ExternalTwitchClientID                        NilString  `json:"external_twitch_client_id"`
	ExternalTwitchEnabled                         NilBool    `json:"external_twitch_enabled"`
	ExternalTwitchSecret                          NilString  `json:"external_twitch_secret"`
	ExternalTwitterClientID                       NilString  `json:"external_twitter_client_id"`
	ExternalTwitterEnabled                        NilBool    `json:"external_twitter_enabled"`
	ExternalTwitterSecret                         NilString  `json:"external_twitter_secret"`
	ExternalWorkosClientID                        NilString  `json:"external_workos_client_id"`
	ExternalWorkosEnabled                         NilBool    `json:"external_workos_enabled"`
	ExternalWorkosSecret                          NilString  `json:"external_workos_secret"`
	ExternalWorkosURL                             NilString  `json:"external_workos_url"`
	ExternalZoomClientID                          NilString  `json:"external_zoom_client_id"`
	ExternalZoomEnabled                           NilBool    `json:"external_zoom_enabled"`
	ExternalZoomSecret                            NilString  `json:"external_zoom_secret"`
	HookCustomAccessTokenEnabled                  NilBool    `json:"hook_custom_access_token_enabled"`
	HookCustomAccessTokenURI                      NilString  `json:"hook_custom_access_token_uri"`
	HookMfaVerificationAttemptEnabled             NilBool    `json:"hook_mfa_verification_attempt_enabled"`
	HookMfaVerificationAttemptURI                 NilString  `json:"hook_mfa_verification_attempt_uri"`
	HookPasswordVerificationAttemptEnabled        NilBool    `json:"hook_password_verification_attempt_enabled"`
	HookPasswordVerificationAttemptURI            NilString  `json:"hook_password_verification_attempt_uri"`
	JwtExp                                        NilFloat64 `json:"jwt_exp"`
	MailerAllowUnverifiedEmailSignIns             NilBool    `json:"mailer_allow_unverified_email_sign_ins"`
	MailerAutoconfirm                             NilBool    `json:"mailer_autoconfirm"`
	MailerOtpExp                                  NilFloat64 `json:"mailer_otp_exp"`
	MailerSecureEmailChangeEnabled                NilBool    `json:"mailer_secure_email_change_enabled"`
	MailerSubjectsConfirmation                    NilString  `json:"mailer_subjects_confirmation"`
	MailerSubjectsEmailChange                     NilString  `json:"mailer_subjects_email_change"`
	MailerSubjectsInvite                          NilString  `json:"mailer_subjects_invite"`
	MailerSubjectsMagicLink                       NilString  `json:"mailer_subjects_magic_link"`
	MailerSubjectsRecovery                        NilString  `json:"mailer_subjects_recovery"`
	MailerSubjectsReauthentication                NilString  `json:"mailer_subjects_reauthentication"`
	MailerTemplatesConfirmationContent            NilString  `json:"mailer_templates_confirmation_content"`
	MailerTemplatesEmailChangeContent             NilString  `json:"mailer_templates_email_change_content"`
	MailerTemplatesInviteContent                  NilString  `json:"mailer_templates_invite_content"`
	MailerTemplatesMagicLinkContent               NilString  `json:"mailer_templates_magic_link_content"`
	MailerTemplatesRecoveryContent                NilString  `json:"mailer_templates_recovery_content"`
	MailerTemplatesReauthenticationContent        NilString  `json:"mailer_templates_reauthentication_content"`
	MfaMaxEnrolledFactors                         NilFloat64 `json:"mfa_max_enrolled_factors"`
	PasswordHibpEnabled                           NilBool    `json:"password_hibp_enabled"`
	PasswordMinLength                             NilFloat64 `json:"password_min_length"`
	PasswordRequiredCharacters                    NilString  `json:"password_required_characters"`
	RateLimitAnonymousUsers                       NilFloat64 `json:"rate_limit_anonymous_users"`
	RateLimitEmailSent                            NilFloat64 `json:"rate_limit_email_sent"`
	RateLimitSMSSent                              NilFloat64 `json:"rate_limit_sms_sent"`
	RateLimitTokenRefresh                         NilFloat64 `json:"rate_limit_token_refresh"`
	RateLimitVerify                               NilFloat64 `json:"rate_limit_verify"`
	RefreshTokenRotationEnabled                   NilBool    `json:"refresh_token_rotation_enabled"`
	SamlEnabled                                   NilBool    `json:"saml_enabled"`
	SecurityCaptchaEnabled                        NilBool    `json:"security_captcha_enabled"`
	SecurityCaptchaProvider                       NilString  `json:"security_captcha_provider"`
	SecurityCaptchaSecret                         NilString  `json:"security_captcha_secret"`
	SecurityManualLinkingEnabled                  NilBool    `json:"security_manual_linking_enabled"`
	SecurityRefreshTokenReuseInterval             NilFloat64 `json:"security_refresh_token_reuse_interval"`
	SecurityUpdatePasswordRequireReauthentication NilBool    `json:"security_update_password_require_reauthentication"`
	SessionsInactivityTimeout                     NilFloat64 `json:"sessions_inactivity_timeout"`
	SessionsSinglePerUser                         NilBool    `json:"sessions_single_per_user"`
	SessionsTags                                  NilString  `json:"sessions_tags"`
	SessionsTimebox                               NilFloat64 `json:"sessions_timebox"`
	SiteURL                                       NilString  `json:"site_url"`
	SMSAutoconfirm                                NilBool    `json:"sms_autoconfirm"`
	SMSMaxFrequency                               NilFloat64 `json:"sms_max_frequency"`
	SMSMessagebirdAccessKey                       NilString  `json:"sms_messagebird_access_key"`
	SMSMessagebirdOriginator                      NilString  `json:"sms_messagebird_originator"`
	SMSOtpExp                                     NilFloat64 `json:"sms_otp_exp"`
	SMSOtpLength                                  NilFloat64 `json:"sms_otp_length"`
	SMSProvider                                   NilString  `json:"sms_provider"`
	SMSTemplate                                   NilString  `json:"sms_template"`
	SMSTestOtp                                    NilString  `json:"sms_test_otp"`
	SMSTestOtpValidUntil                          NilString  `json:"sms_test_otp_valid_until"`
	SMSTextlocalAPIKey                            NilString  `json:"sms_textlocal_api_key"`
	SMSTextlocalSender                            NilString  `json:"sms_textlocal_sender"`
	SMSTwilioAccountSid                           NilString  `json:"sms_twilio_account_sid"`
	SMSTwilioAuthToken                            NilString  `json:"sms_twilio_auth_token"`
	SMSTwilioContentSid                           NilString  `json:"sms_twilio_content_sid"`
	SMSTwilioMessageServiceSid                    NilString  `json:"sms_twilio_message_service_sid"`
	SMSTwilioVerifyAccountSid                     NilString  `json:"sms_twilio_verify_account_sid"`
	SMSTwilioVerifyAuthToken                      NilString  `json:"sms_twilio_verify_auth_token"`
	SMSTwilioVerifyMessageServiceSid              NilString  `json:"sms_twilio_verify_message_service_sid"`
	SMSVonageAPIKey                               NilString  `json:"sms_vonage_api_key"`
	SMSVonageAPISecret                            NilString  `json:"sms_vonage_api_secret"`
	SMSVonageFrom                                 NilString  `json:"sms_vonage_from"`
	SMTPAdminEmail                                NilString  `json:"smtp_admin_email"`
	SMTPHost                                      NilString  `json:"smtp_host"`
	SMTPMaxFrequency                              NilFloat64 `json:"smtp_max_frequency"`
	SMTPPass                                      NilString  `json:"smtp_pass"`
	SMTPPort                                      NilString  `json:"smtp_port"`
	SMTPSenderName                                NilString  `json:"smtp_sender_name"`
	SMTPUser                                      NilString  `json:"smtp_user"`
	URIAllowList                                  NilString  `json:"uri_allow_list"`
}

// GetDisableSignup returns the value of DisableSignup.
func (s *AuthConfigResponse) GetDisableSignup() NilBool {
	return s.DisableSignup
}

// GetExternalAnonymousUsersEnabled returns the value of ExternalAnonymousUsersEnabled.
func (s *AuthConfigResponse) GetExternalAnonymousUsersEnabled() NilBool {
	return s.ExternalAnonymousUsersEnabled
}

// GetExternalAppleAdditionalClientIds returns the value of ExternalAppleAdditionalClientIds.
func (s *AuthConfigResponse) GetExternalAppleAdditionalClientIds() NilString {
	return s.ExternalAppleAdditionalClientIds
}

// GetExternalAppleClientID returns the value of ExternalAppleClientID.
func (s *AuthConfigResponse) GetExternalAppleClientID() NilString {
	return s.ExternalAppleClientID
}

// GetExternalAppleEnabled returns the value of ExternalAppleEnabled.
func (s *AuthConfigResponse) GetExternalAppleEnabled() NilBool {
	return s.ExternalAppleEnabled
}

// GetExternalAppleSecret returns the value of ExternalAppleSecret.
func (s *AuthConfigResponse) GetExternalAppleSecret() NilString {
	return s.ExternalAppleSecret
}

// GetExternalAzureClientID returns the value of ExternalAzureClientID.
func (s *AuthConfigResponse) GetExternalAzureClientID() NilString {
	return s.ExternalAzureClientID
}

// GetExternalAzureEnabled returns the value of ExternalAzureEnabled.
func (s *AuthConfigResponse) GetExternalAzureEnabled() NilBool {
	return s.ExternalAzureEnabled
}

// GetExternalAzureSecret returns the value of ExternalAzureSecret.
func (s *AuthConfigResponse) GetExternalAzureSecret() NilString {
	return s.ExternalAzureSecret
}

// GetExternalAzureURL returns the value of ExternalAzureURL.
func (s *AuthConfigResponse) GetExternalAzureURL() NilString {
	return s.ExternalAzureURL
}

// GetExternalBitbucketClientID returns the value of ExternalBitbucketClientID.
func (s *AuthConfigResponse) GetExternalBitbucketClientID() NilString {
	return s.ExternalBitbucketClientID
}

// GetExternalBitbucketEnabled returns the value of ExternalBitbucketEnabled.
func (s *AuthConfigResponse) GetExternalBitbucketEnabled() NilBool {
	return s.ExternalBitbucketEnabled
}

// GetExternalBitbucketSecret returns the value of ExternalBitbucketSecret.
func (s *AuthConfigResponse) GetExternalBitbucketSecret() NilString {
	return s.ExternalBitbucketSecret
}

// GetExternalDiscordClientID returns the value of ExternalDiscordClientID.
func (s *AuthConfigResponse) GetExternalDiscordClientID() NilString {
	return s.ExternalDiscordClientID
}

// GetExternalDiscordEnabled returns the value of ExternalDiscordEnabled.
func (s *AuthConfigResponse) GetExternalDiscordEnabled() NilBool {
	return s.ExternalDiscordEnabled
}

// GetExternalDiscordSecret returns the value of ExternalDiscordSecret.
func (s *AuthConfigResponse) GetExternalDiscordSecret() NilString {
	return s.ExternalDiscordSecret
}

// GetExternalEmailEnabled returns the value of ExternalEmailEnabled.
func (s *AuthConfigResponse) GetExternalEmailEnabled() NilBool {
	return s.ExternalEmailEnabled
}

// GetExternalFacebookClientID returns the value of ExternalFacebookClientID.
func (s *AuthConfigResponse) GetExternalFacebookClientID() NilString {
	return s.ExternalFacebookClientID
}

// GetExternalFacebookEnabled returns the value of ExternalFacebookEnabled.
func (s *AuthConfigResponse) GetExternalFacebookEnabled() NilBool {
	return s.ExternalFacebookEnabled
}

// GetExternalFacebookSecret returns the value of ExternalFacebookSecret.
func (s *AuthConfigResponse) GetExternalFacebookSecret() NilString {
	return s.ExternalFacebookSecret
}

// GetExternalFigmaClientID returns the value of ExternalFigmaClientID.
func (s *AuthConfigResponse) GetExternalFigmaClientID() NilString {
	return s.ExternalFigmaClientID
}

// GetExternalFigmaEnabled returns the value of ExternalFigmaEnabled.
func (s *AuthConfigResponse) GetExternalFigmaEnabled() NilBool {
	return s.ExternalFigmaEnabled
}

// GetExternalFigmaSecret returns the value of ExternalFigmaSecret.
func (s *AuthConfigResponse) GetExternalFigmaSecret() NilString {
	return s.ExternalFigmaSecret
}

// GetExternalGithubClientID returns the value of ExternalGithubClientID.
func (s *AuthConfigResponse) GetExternalGithubClientID() NilString {
	return s.ExternalGithubClientID
}

// GetExternalGithubEnabled returns the value of ExternalGithubEnabled.
func (s *AuthConfigResponse) GetExternalGithubEnabled() NilBool {
	return s.ExternalGithubEnabled
}

// GetExternalGithubSecret returns the value of ExternalGithubSecret.
func (s *AuthConfigResponse) GetExternalGithubSecret() NilString {
	return s.ExternalGithubSecret
}

// GetExternalGitlabClientID returns the value of ExternalGitlabClientID.
func (s *AuthConfigResponse) GetExternalGitlabClientID() NilString {
	return s.ExternalGitlabClientID
}

// GetExternalGitlabEnabled returns the value of ExternalGitlabEnabled.
func (s *AuthConfigResponse) GetExternalGitlabEnabled() NilBool {
	return s.ExternalGitlabEnabled
}

// GetExternalGitlabSecret returns the value of ExternalGitlabSecret.
func (s *AuthConfigResponse) GetExternalGitlabSecret() NilString {
	return s.ExternalGitlabSecret
}

// GetExternalGitlabURL returns the value of ExternalGitlabURL.
func (s *AuthConfigResponse) GetExternalGitlabURL() NilString {
	return s.ExternalGitlabURL
}

// GetExternalGoogleAdditionalClientIds returns the value of ExternalGoogleAdditionalClientIds.
func (s *AuthConfigResponse) GetExternalGoogleAdditionalClientIds() NilString {
	return s.ExternalGoogleAdditionalClientIds
}

// GetExternalGoogleClientID returns the value of ExternalGoogleClientID.
func (s *AuthConfigResponse) GetExternalGoogleClientID() NilString {
	return s.ExternalGoogleClientID
}

// GetExternalGoogleEnabled returns the value of ExternalGoogleEnabled.
func (s *AuthConfigResponse) GetExternalGoogleEnabled() NilBool {
	return s.ExternalGoogleEnabled
}

// GetExternalGoogleSecret returns the value of ExternalGoogleSecret.
func (s *AuthConfigResponse) GetExternalGoogleSecret() NilString {
	return s.ExternalGoogleSecret
}

// GetExternalGoogleSkipNonceCheck returns the value of ExternalGoogleSkipNonceCheck.
func (s *AuthConfigResponse) GetExternalGoogleSkipNonceCheck() NilBool {
	return s.ExternalGoogleSkipNonceCheck
}

// GetExternalKakaoClientID returns the value of ExternalKakaoClientID.
func (s *AuthConfigResponse) GetExternalKakaoClientID() NilString {
	return s.ExternalKakaoClientID
}

// GetExternalKakaoEnabled returns the value of ExternalKakaoEnabled.
func (s *AuthConfigResponse) GetExternalKakaoEnabled() NilBool {
	return s.ExternalKakaoEnabled
}

// GetExternalKakaoSecret returns the value of ExternalKakaoSecret.
func (s *AuthConfigResponse) GetExternalKakaoSecret() NilString {
	return s.ExternalKakaoSecret
}

// GetExternalKeycloakClientID returns the value of ExternalKeycloakClientID.
func (s *AuthConfigResponse) GetExternalKeycloakClientID() NilString {
	return s.ExternalKeycloakClientID
}

// GetExternalKeycloakEnabled returns the value of ExternalKeycloakEnabled.
func (s *AuthConfigResponse) GetExternalKeycloakEnabled() NilBool {
	return s.ExternalKeycloakEnabled
}

// GetExternalKeycloakSecret returns the value of ExternalKeycloakSecret.
func (s *AuthConfigResponse) GetExternalKeycloakSecret() NilString {
	return s.ExternalKeycloakSecret
}

// GetExternalKeycloakURL returns the value of ExternalKeycloakURL.
func (s *AuthConfigResponse) GetExternalKeycloakURL() NilString {
	return s.ExternalKeycloakURL
}

// GetExternalLinkedinOidcClientID returns the value of ExternalLinkedinOidcClientID.
func (s *AuthConfigResponse) GetExternalLinkedinOidcClientID() NilString {
	return s.ExternalLinkedinOidcClientID
}

// GetExternalLinkedinOidcEnabled returns the value of ExternalLinkedinOidcEnabled.
func (s *AuthConfigResponse) GetExternalLinkedinOidcEnabled() NilBool {
	return s.ExternalLinkedinOidcEnabled
}

// GetExternalLinkedinOidcSecret returns the value of ExternalLinkedinOidcSecret.
func (s *AuthConfigResponse) GetExternalLinkedinOidcSecret() NilString {
	return s.ExternalLinkedinOidcSecret
}

// GetExternalNotionClientID returns the value of ExternalNotionClientID.
func (s *AuthConfigResponse) GetExternalNotionClientID() NilString {
	return s.ExternalNotionClientID
}

// GetExternalNotionEnabled returns the value of ExternalNotionEnabled.
func (s *AuthConfigResponse) GetExternalNotionEnabled() NilBool {
	return s.ExternalNotionEnabled
}

// GetExternalNotionSecret returns the value of ExternalNotionSecret.
func (s *AuthConfigResponse) GetExternalNotionSecret() NilString {
	return s.ExternalNotionSecret
}

// GetExternalPhoneEnabled returns the value of ExternalPhoneEnabled.
func (s *AuthConfigResponse) GetExternalPhoneEnabled() NilBool {
	return s.ExternalPhoneEnabled
}

// GetExternalSlackClientID returns the value of ExternalSlackClientID.
func (s *AuthConfigResponse) GetExternalSlackClientID() NilString {
	return s.ExternalSlackClientID
}

// GetExternalSlackEnabled returns the value of ExternalSlackEnabled.
func (s *AuthConfigResponse) GetExternalSlackEnabled() NilBool {
	return s.ExternalSlackEnabled
}

// GetExternalSlackSecret returns the value of ExternalSlackSecret.
func (s *AuthConfigResponse) GetExternalSlackSecret() NilString {
	return s.ExternalSlackSecret
}

// GetExternalSpotifyClientID returns the value of ExternalSpotifyClientID.
func (s *AuthConfigResponse) GetExternalSpotifyClientID() NilString {
	return s.ExternalSpotifyClientID
}

// GetExternalSpotifyEnabled returns the value of ExternalSpotifyEnabled.
func (s *AuthConfigResponse) GetExternalSpotifyEnabled() NilBool {
	return s.ExternalSpotifyEnabled
}

// GetExternalSpotifySecret returns the value of ExternalSpotifySecret.
func (s *AuthConfigResponse) GetExternalSpotifySecret() NilString {
	return s.ExternalSpotifySecret
}

// GetExternalTwitchClientID returns the value of ExternalTwitchClientID.
func (s *AuthConfigResponse) GetExternalTwitchClientID() NilString {
	return s.ExternalTwitchClientID
}

// GetExternalTwitchEnabled returns the value of ExternalTwitchEnabled.
func (s *AuthConfigResponse) GetExternalTwitchEnabled() NilBool {
	return s.ExternalTwitchEnabled
}

// GetExternalTwitchSecret returns the value of ExternalTwitchSecret.
func (s *AuthConfigResponse) GetExternalTwitchSecret() NilString {
	return s.ExternalTwitchSecret
}

// GetExternalTwitterClientID returns the value of ExternalTwitterClientID.
func (s *AuthConfigResponse) GetExternalTwitterClientID() NilString {
	return s.ExternalTwitterClientID
}

// GetExternalTwitterEnabled returns the value of ExternalTwitterEnabled.
func (s *AuthConfigResponse) GetExternalTwitterEnabled() NilBool {
	return s.ExternalTwitterEnabled
}

// GetExternalTwitterSecret returns the value of ExternalTwitterSecret.
func (s *AuthConfigResponse) GetExternalTwitterSecret() NilString {
	return s.ExternalTwitterSecret
}

// GetExternalWorkosClientID returns the value of ExternalWorkosClientID.
func (s *AuthConfigResponse) GetExternalWorkosClientID() NilString {
	return s.ExternalWorkosClientID
}

// GetExternalWorkosEnabled returns the value of ExternalWorkosEnabled.
func (s *AuthConfigResponse) GetExternalWorkosEnabled() NilBool {
	return s.ExternalWorkosEnabled
}

// GetExternalWorkosSecret returns the value of ExternalWorkosSecret.
func (s *AuthConfigResponse) GetExternalWorkosSecret() NilString {
	return s.ExternalWorkosSecret
}

// GetExternalWorkosURL returns the value of ExternalWorkosURL.
func (s *AuthConfigResponse) GetExternalWorkosURL() NilString {
	return s.ExternalWorkosURL
}

// GetExternalZoomClientID returns the value of ExternalZoomClientID.
func (s *AuthConfigResponse) GetExternalZoomClientID() NilString {
	return s.ExternalZoomClientID
}

// GetExternalZoomEnabled returns the value of ExternalZoomEnabled.
func (s *AuthConfigResponse) GetExternalZoomEnabled() NilBool {
	return s.ExternalZoomEnabled
}

// GetExternalZoomSecret returns the value of ExternalZoomSecret.
func (s *AuthConfigResponse) GetExternalZoomSecret() NilString {
	return s.ExternalZoomSecret
}

// GetHookCustomAccessTokenEnabled returns the value of HookCustomAccessTokenEnabled.
func (s *AuthConfigResponse) GetHookCustomAccessTokenEnabled() NilBool {
	return s.HookCustomAccessTokenEnabled
}

// GetHookCustomAccessTokenURI returns the value of HookCustomAccessTokenURI.
func (s *AuthConfigResponse) GetHookCustomAccessTokenURI() NilString {
	return s.HookCustomAccessTokenURI
}

// GetHookMfaVerificationAttemptEnabled returns the value of HookMfaVerificationAttemptEnabled.
func (s *AuthConfigResponse) GetHookMfaVerificationAttemptEnabled() NilBool {
	return s.HookMfaVerificationAttemptEnabled
}

// GetHookMfaVerificationAttemptURI returns the value of HookMfaVerificationAttemptURI.
func (s *AuthConfigResponse) GetHookMfaVerificationAttemptURI() NilString {
	return s.HookMfaVerificationAttemptURI
}

// GetHookPasswordVerificationAttemptEnabled returns the value of HookPasswordVerificationAttemptEnabled.
func (s *AuthConfigResponse) GetHookPasswordVerificationAttemptEnabled() NilBool {
	return s.HookPasswordVerificationAttemptEnabled
}

// GetHookPasswordVerificationAttemptURI returns the value of HookPasswordVerificationAttemptURI.
func (s *AuthConfigResponse) GetHookPasswordVerificationAttemptURI() NilString {
	return s.HookPasswordVerificationAttemptURI
}

// GetJwtExp returns the value of JwtExp.
func (s *AuthConfigResponse) GetJwtExp() NilFloat64 {
	return s.JwtExp
}

// GetMailerAllowUnverifiedEmailSignIns returns the value of MailerAllowUnverifiedEmailSignIns.
func (s *AuthConfigResponse) GetMailerAllowUnverifiedEmailSignIns() NilBool {
	return s.MailerAllowUnverifiedEmailSignIns
}

// GetMailerAutoconfirm returns the value of MailerAutoconfirm.
func (s *AuthConfigResponse) GetMailerAutoconfirm() NilBool {
	return s.MailerAutoconfirm
}

// GetMailerOtpExp returns the value of MailerOtpExp.
func (s *AuthConfigResponse) GetMailerOtpExp() NilFloat64 {
	return s.MailerOtpExp
}

// GetMailerSecureEmailChangeEnabled returns the value of MailerSecureEmailChangeEnabled.
func (s *AuthConfigResponse) GetMailerSecureEmailChangeEnabled() NilBool {
	return s.MailerSecureEmailChangeEnabled
}

// GetMailerSubjectsConfirmation returns the value of MailerSubjectsConfirmation.
func (s *AuthConfigResponse) GetMailerSubjectsConfirmation() NilString {
	return s.MailerSubjectsConfirmation
}

// GetMailerSubjectsEmailChange returns the value of MailerSubjectsEmailChange.
func (s *AuthConfigResponse) GetMailerSubjectsEmailChange() NilString {
	return s.MailerSubjectsEmailChange
}

// GetMailerSubjectsInvite returns the value of MailerSubjectsInvite.
func (s *AuthConfigResponse) GetMailerSubjectsInvite() NilString {
	return s.MailerSubjectsInvite
}

// GetMailerSubjectsMagicLink returns the value of MailerSubjectsMagicLink.
func (s *AuthConfigResponse) GetMailerSubjectsMagicLink() NilString {
	return s.MailerSubjectsMagicLink
}

// GetMailerSubjectsRecovery returns the value of MailerSubjectsRecovery.
func (s *AuthConfigResponse) GetMailerSubjectsRecovery() NilString {
	return s.MailerSubjectsRecovery
}

// GetMailerSubjectsReauthentication returns the value of MailerSubjectsReauthentication.
func (s *AuthConfigResponse) GetMailerSubjectsReauthentication() NilString {
	return s.MailerSubjectsReauthentication
}

// GetMailerTemplatesConfirmationContent returns the value of MailerTemplatesConfirmationContent.
func (s *AuthConfigResponse) GetMailerTemplatesConfirmationContent() NilString {
	return s.MailerTemplatesConfirmationContent
}

// GetMailerTemplatesEmailChangeContent returns the value of MailerTemplatesEmailChangeContent.
func (s *AuthConfigResponse) GetMailerTemplatesEmailChangeContent() NilString {
	return s.MailerTemplatesEmailChangeContent
}

// GetMailerTemplatesInviteContent returns the value of MailerTemplatesInviteContent.
func (s *AuthConfigResponse) GetMailerTemplatesInviteContent() NilString {
	return s.MailerTemplatesInviteContent
}

// GetMailerTemplatesMagicLinkContent returns the value of MailerTemplatesMagicLinkContent.
func (s *AuthConfigResponse) GetMailerTemplatesMagicLinkContent() NilString {
	return s.MailerTemplatesMagicLinkContent
}

// GetMailerTemplatesRecoveryContent returns the value of MailerTemplatesRecoveryContent.
func (s *AuthConfigResponse) GetMailerTemplatesRecoveryContent() NilString {
	return s.MailerTemplatesRecoveryContent
}

// GetMailerTemplatesReauthenticationContent returns the value of MailerTemplatesReauthenticationContent.
func (s *AuthConfigResponse) GetMailerTemplatesReauthenticationContent() NilString {
	return s.MailerTemplatesReauthenticationContent
}

// GetMfaMaxEnrolledFactors returns the value of MfaMaxEnrolledFactors.
func (s *AuthConfigResponse) GetMfaMaxEnrolledFactors() NilFloat64 {
	return s.MfaMaxEnrolledFactors
}

// GetPasswordHibpEnabled returns the value of PasswordHibpEnabled.
func (s *AuthConfigResponse) GetPasswordHibpEnabled() NilBool {
	return s.PasswordHibpEnabled
}

// GetPasswordMinLength returns the value of PasswordMinLength.
func (s *AuthConfigResponse) GetPasswordMinLength() NilFloat64 {
	return s.PasswordMinLength
}

// GetPasswordRequiredCharacters returns the value of PasswordRequiredCharacters.
func (s *AuthConfigResponse) GetPasswordRequiredCharacters() NilString {
	return s.PasswordRequiredCharacters
}

// GetRateLimitAnonymousUsers returns the value of RateLimitAnonymousUsers.
func (s *AuthConfigResponse) GetRateLimitAnonymousUsers() NilFloat64 {
	return s.RateLimitAnonymousUsers
}

// GetRateLimitEmailSent returns the value of RateLimitEmailSent.
func (s *AuthConfigResponse) GetRateLimitEmailSent() NilFloat64 {
	return s.RateLimitEmailSent
}

// GetRateLimitSMSSent returns the value of RateLimitSMSSent.
func (s *AuthConfigResponse) GetRateLimitSMSSent() NilFloat64 {
	return s.RateLimitSMSSent
}

// GetRateLimitTokenRefresh returns the value of RateLimitTokenRefresh.
func (s *AuthConfigResponse) GetRateLimitTokenRefresh() NilFloat64 {
	return s.RateLimitTokenRefresh
}

// GetRateLimitVerify returns the value of RateLimitVerify.
func (s *AuthConfigResponse) GetRateLimitVerify() NilFloat64 {
	return s.RateLimitVerify
}

// GetRefreshTokenRotationEnabled returns the value of RefreshTokenRotationEnabled.
func (s *AuthConfigResponse) GetRefreshTokenRotationEnabled() NilBool {
	return s.RefreshTokenRotationEnabled
}

// GetSamlEnabled returns the value of SamlEnabled.
func (s *AuthConfigResponse) GetSamlEnabled() NilBool {
	return s.SamlEnabled
}

// GetSecurityCaptchaEnabled returns the value of SecurityCaptchaEnabled.
func (s *AuthConfigResponse) GetSecurityCaptchaEnabled() NilBool {
	return s.SecurityCaptchaEnabled
}

// GetSecurityCaptchaProvider returns the value of SecurityCaptchaProvider.
func (s *AuthConfigResponse) GetSecurityCaptchaProvider() NilString {
	return s.SecurityCaptchaProvider
}

// GetSecurityCaptchaSecret returns the value of SecurityCaptchaSecret.
func (s *AuthConfigResponse) GetSecurityCaptchaSecret() NilString {
	return s.SecurityCaptchaSecret
}

// GetSecurityManualLinkingEnabled returns the value of SecurityManualLinkingEnabled.
func (s *AuthConfigResponse) GetSecurityManualLinkingEnabled() NilBool {
	return s.SecurityManualLinkingEnabled
}

// GetSecurityRefreshTokenReuseInterval returns the value of SecurityRefreshTokenReuseInterval.
func (s *AuthConfigResponse) GetSecurityRefreshTokenReuseInterval() NilFloat64 {
	return s.SecurityRefreshTokenReuseInterval
}

// GetSecurityUpdatePasswordRequireReauthentication returns the value of SecurityUpdatePasswordRequireReauthentication.
func (s *AuthConfigResponse) GetSecurityUpdatePasswordRequireReauthentication() NilBool {
	return s.SecurityUpdatePasswordRequireReauthentication
}

// GetSessionsInactivityTimeout returns the value of SessionsInactivityTimeout.
func (s *AuthConfigResponse) GetSessionsInactivityTimeout() NilFloat64 {
	return s.SessionsInactivityTimeout
}

// GetSessionsSinglePerUser returns the value of SessionsSinglePerUser.
func (s *AuthConfigResponse) GetSessionsSinglePerUser() NilBool {
	return s.SessionsSinglePerUser
}

// GetSessionsTags returns the value of SessionsTags.
func (s *AuthConfigResponse) GetSessionsTags() NilString {
	return s.SessionsTags
}

// GetSessionsTimebox returns the value of SessionsTimebox.
func (s *AuthConfigResponse) GetSessionsTimebox() NilFloat64 {
	return s.SessionsTimebox
}

// GetSiteURL returns the value of SiteURL.
func (s *AuthConfigResponse) GetSiteURL() NilString {
	return s.SiteURL
}

// GetSMSAutoconfirm returns the value of SMSAutoconfirm.
func (s *AuthConfigResponse) GetSMSAutoconfirm() NilBool {
	return s.SMSAutoconfirm
}

// GetSMSMaxFrequency returns the value of SMSMaxFrequency.
func (s *AuthConfigResponse) GetSMSMaxFrequency() NilFloat64 {
	return s.SMSMaxFrequency
}

// GetSMSMessagebirdAccessKey returns the value of SMSMessagebirdAccessKey.
func (s *AuthConfigResponse) GetSMSMessagebirdAccessKey() NilString {
	return s.SMSMessagebirdAccessKey
}

// GetSMSMessagebirdOriginator returns the value of SMSMessagebirdOriginator.
func (s *AuthConfigResponse) GetSMSMessagebirdOriginator() NilString {
	return s.SMSMessagebirdOriginator
}

// GetSMSOtpExp returns the value of SMSOtpExp.
func (s *AuthConfigResponse) GetSMSOtpExp() NilFloat64 {
	return s.SMSOtpExp
}

// GetSMSOtpLength returns the value of SMSOtpLength.
func (s *AuthConfigResponse) GetSMSOtpLength() NilFloat64 {
	return s.SMSOtpLength
}

// GetSMSProvider returns the value of SMSProvider.
func (s *AuthConfigResponse) GetSMSProvider() NilString {
	return s.SMSProvider
}

// GetSMSTemplate returns the value of SMSTemplate.
func (s *AuthConfigResponse) GetSMSTemplate() NilString {
	return s.SMSTemplate
}

// GetSMSTestOtp returns the value of SMSTestOtp.
func (s *AuthConfigResponse) GetSMSTestOtp() NilString {
	return s.SMSTestOtp
}

// GetSMSTestOtpValidUntil returns the value of SMSTestOtpValidUntil.
func (s *AuthConfigResponse) GetSMSTestOtpValidUntil() NilString {
	return s.SMSTestOtpValidUntil
}

// GetSMSTextlocalAPIKey returns the value of SMSTextlocalAPIKey.
func (s *AuthConfigResponse) GetSMSTextlocalAPIKey() NilString {
	return s.SMSTextlocalAPIKey
}

// GetSMSTextlocalSender returns the value of SMSTextlocalSender.
func (s *AuthConfigResponse) GetSMSTextlocalSender() NilString {
	return s.SMSTextlocalSender
}

// GetSMSTwilioAccountSid returns the value of SMSTwilioAccountSid.
func (s *AuthConfigResponse) GetSMSTwilioAccountSid() NilString {
	return s.SMSTwilioAccountSid
}

// GetSMSTwilioAuthToken returns the value of SMSTwilioAuthToken.
func (s *AuthConfigResponse) GetSMSTwilioAuthToken() NilString {
	return s.SMSTwilioAuthToken
}

// GetSMSTwilioContentSid returns the value of SMSTwilioContentSid.
func (s *AuthConfigResponse) GetSMSTwilioContentSid() NilString {
	return s.SMSTwilioContentSid
}

// GetSMSTwilioMessageServiceSid returns the value of SMSTwilioMessageServiceSid.
func (s *AuthConfigResponse) GetSMSTwilioMessageServiceSid() NilString {
	return s.SMSTwilioMessageServiceSid
}

// GetSMSTwilioVerifyAccountSid returns the value of SMSTwilioVerifyAccountSid.
func (s *AuthConfigResponse) GetSMSTwilioVerifyAccountSid() NilString {
	return s.SMSTwilioVerifyAccountSid
}

// GetSMSTwilioVerifyAuthToken returns the value of SMSTwilioVerifyAuthToken.
func (s *AuthConfigResponse) GetSMSTwilioVerifyAuthToken() NilString {
	return s.SMSTwilioVerifyAuthToken
}

// GetSMSTwilioVerifyMessageServiceSid returns the value of SMSTwilioVerifyMessageServiceSid.
func (s *AuthConfigResponse) GetSMSTwilioVerifyMessageServiceSid() NilString {
	return s.SMSTwilioVerifyMessageServiceSid
}

// GetSMSVonageAPIKey returns the value of SMSVonageAPIKey.
func (s *AuthConfigResponse) GetSMSVonageAPIKey() NilString {
	return s.SMSVonageAPIKey
}

// GetSMSVonageAPISecret returns the value of SMSVonageAPISecret.
func (s *AuthConfigResponse) GetSMSVonageAPISecret() NilString {
	return s.SMSVonageAPISecret
}

// GetSMSVonageFrom returns the value of SMSVonageFrom.
func (s *AuthConfigResponse) GetSMSVonageFrom() NilString {
	return s.SMSVonageFrom
}

// GetSMTPAdminEmail returns the value of SMTPAdminEmail.
func (s *AuthConfigResponse) GetSMTPAdminEmail() NilString {
	return s.SMTPAdminEmail
}

// GetSMTPHost returns the value of SMTPHost.
func (s *AuthConfigResponse) GetSMTPHost() NilString {
	return s.SMTPHost
}

// GetSMTPMaxFrequency returns the value of SMTPMaxFrequency.
func (s *AuthConfigResponse) GetSMTPMaxFrequency() NilFloat64 {
	return s.SMTPMaxFrequency
}

// GetSMTPPass returns the value of SMTPPass.
func (s *AuthConfigResponse) GetSMTPPass() NilString {
	return s.SMTPPass
}

// GetSMTPPort returns the value of SMTPPort.
func (s *AuthConfigResponse) GetSMTPPort() NilString {
	return s.SMTPPort
}

// GetSMTPSenderName returns the value of SMTPSenderName.
func (s *AuthConfigResponse) GetSMTPSenderName() NilString {
	return s.SMTPSenderName
}

// GetSMTPUser returns the value of SMTPUser.
func (s *AuthConfigResponse) GetSMTPUser() NilString {
	return s.SMTPUser
}

// GetURIAllowList returns the value of URIAllowList.
func (s *AuthConfigResponse) GetURIAllowList() NilString {
	return s.URIAllowList
}

// SetDisableSignup sets the value of DisableSignup.
func (s *AuthConfigResponse) SetDisableSignup(val NilBool) {
	s.DisableSignup = val
}

// SetExternalAnonymousUsersEnabled sets the value of ExternalAnonymousUsersEnabled.
func (s *AuthConfigResponse) SetExternalAnonymousUsersEnabled(val NilBool) {
	s.ExternalAnonymousUsersEnabled = val
}

// SetExternalAppleAdditionalClientIds sets the value of ExternalAppleAdditionalClientIds.
func (s *AuthConfigResponse) SetExternalAppleAdditionalClientIds(val NilString) {
	s.ExternalAppleAdditionalClientIds = val
}

// SetExternalAppleClientID sets the value of ExternalAppleClientID.
func (s *AuthConfigResponse) SetExternalAppleClientID(val NilString) {
	s.ExternalAppleClientID = val
}

// SetExternalAppleEnabled sets the value of ExternalAppleEnabled.
func (s *AuthConfigResponse) SetExternalAppleEnabled(val NilBool) {
	s.ExternalAppleEnabled = val
}

// SetExternalAppleSecret sets the value of ExternalAppleSecret.
func (s *AuthConfigResponse) SetExternalAppleSecret(val NilString) {
	s.ExternalAppleSecret = val
}

// SetExternalAzureClientID sets the value of ExternalAzureClientID.
func (s *AuthConfigResponse) SetExternalAzureClientID(val NilString) {
	s.ExternalAzureClientID = val
}

// SetExternalAzureEnabled sets the value of ExternalAzureEnabled.
func (s *AuthConfigResponse) SetExternalAzureEnabled(val NilBool) {
	s.ExternalAzureEnabled = val
}

// SetExternalAzureSecret sets the value of ExternalAzureSecret.
func (s *AuthConfigResponse) SetExternalAzureSecret(val NilString) {
	s.ExternalAzureSecret = val
}

// SetExternalAzureURL sets the value of ExternalAzureURL.
func (s *AuthConfigResponse) SetExternalAzureURL(val NilString) {
	s.ExternalAzureURL = val
}

// SetExternalBitbucketClientID sets the value of ExternalBitbucketClientID.
func (s *AuthConfigResponse) SetExternalBitbucketClientID(val NilString) {
	s.ExternalBitbucketClientID = val
}

// SetExternalBitbucketEnabled sets the value of ExternalBitbucketEnabled.
func (s *AuthConfigResponse) SetExternalBitbucketEnabled(val NilBool) {
	s.ExternalBitbucketEnabled = val
}

// SetExternalBitbucketSecret sets the value of ExternalBitbucketSecret.
func (s *AuthConfigResponse) SetExternalBitbucketSecret(val NilString) {
	s.ExternalBitbucketSecret = val
}

// SetExternalDiscordClientID sets the value of ExternalDiscordClientID.
func (s *AuthConfigResponse) SetExternalDiscordClientID(val NilString) {
	s.ExternalDiscordClientID = val
}

// SetExternalDiscordEnabled sets the value of ExternalDiscordEnabled.
func (s *AuthConfigResponse) SetExternalDiscordEnabled(val NilBool) {
	s.ExternalDiscordEnabled = val
}

// SetExternalDiscordSecret sets the value of ExternalDiscordSecret.
func (s *AuthConfigResponse) SetExternalDiscordSecret(val NilString) {
	s.ExternalDiscordSecret = val
}

// SetExternalEmailEnabled sets the value of ExternalEmailEnabled.
func (s *AuthConfigResponse) SetExternalEmailEnabled(val NilBool) {
	s.ExternalEmailEnabled = val
}

// SetExternalFacebookClientID sets the value of ExternalFacebookClientID.
func (s *AuthConfigResponse) SetExternalFacebookClientID(val NilString) {
	s.ExternalFacebookClientID = val
}

// SetExternalFacebookEnabled sets the value of ExternalFacebookEnabled.
func (s *AuthConfigResponse) SetExternalFacebookEnabled(val NilBool) {
	s.ExternalFacebookEnabled = val
}

// SetExternalFacebookSecret sets the value of ExternalFacebookSecret.
func (s *AuthConfigResponse) SetExternalFacebookSecret(val NilString) {
	s.ExternalFacebookSecret = val
}

// SetExternalFigmaClientID sets the value of ExternalFigmaClientID.
func (s *AuthConfigResponse) SetExternalFigmaClientID(val NilString) {
	s.ExternalFigmaClientID = val
}

// SetExternalFigmaEnabled sets the value of ExternalFigmaEnabled.
func (s *AuthConfigResponse) SetExternalFigmaEnabled(val NilBool) {
	s.ExternalFigmaEnabled = val
}

// SetExternalFigmaSecret sets the value of ExternalFigmaSecret.
func (s *AuthConfigResponse) SetExternalFigmaSecret(val NilString) {
	s.ExternalFigmaSecret = val
}

// SetExternalGithubClientID sets the value of ExternalGithubClientID.
func (s *AuthConfigResponse) SetExternalGithubClientID(val NilString) {
	s.ExternalGithubClientID = val
}

// SetExternalGithubEnabled sets the value of ExternalGithubEnabled.
func (s *AuthConfigResponse) SetExternalGithubEnabled(val NilBool) {
	s.ExternalGithubEnabled = val
}

// SetExternalGithubSecret sets the value of ExternalGithubSecret.
func (s *AuthConfigResponse) SetExternalGithubSecret(val NilString) {
	s.ExternalGithubSecret = val
}

// SetExternalGitlabClientID sets the value of ExternalGitlabClientID.
func (s *AuthConfigResponse) SetExternalGitlabClientID(val NilString) {
	s.ExternalGitlabClientID = val
}

// SetExternalGitlabEnabled sets the value of ExternalGitlabEnabled.
func (s *AuthConfigResponse) SetExternalGitlabEnabled(val NilBool) {
	s.ExternalGitlabEnabled = val
}

// SetExternalGitlabSecret sets the value of ExternalGitlabSecret.
func (s *AuthConfigResponse) SetExternalGitlabSecret(val NilString) {
	s.ExternalGitlabSecret = val
}

// SetExternalGitlabURL sets the value of ExternalGitlabURL.
func (s *AuthConfigResponse) SetExternalGitlabURL(val NilString) {
	s.ExternalGitlabURL = val
}

// SetExternalGoogleAdditionalClientIds sets the value of ExternalGoogleAdditionalClientIds.
func (s *AuthConfigResponse) SetExternalGoogleAdditionalClientIds(val NilString) {
	s.ExternalGoogleAdditionalClientIds = val
}

// SetExternalGoogleClientID sets the value of ExternalGoogleClientID.
func (s *AuthConfigResponse) SetExternalGoogleClientID(val NilString) {
	s.ExternalGoogleClientID = val
}

// SetExternalGoogleEnabled sets the value of ExternalGoogleEnabled.
func (s *AuthConfigResponse) SetExternalGoogleEnabled(val NilBool) {
	s.ExternalGoogleEnabled = val
}

// SetExternalGoogleSecret sets the value of ExternalGoogleSecret.
func (s *AuthConfigResponse) SetExternalGoogleSecret(val NilString) {
	s.ExternalGoogleSecret = val
}

// SetExternalGoogleSkipNonceCheck sets the value of ExternalGoogleSkipNonceCheck.
func (s *AuthConfigResponse) SetExternalGoogleSkipNonceCheck(val NilBool) {
	s.ExternalGoogleSkipNonceCheck = val
}

// SetExternalKakaoClientID sets the value of ExternalKakaoClientID.
func (s *AuthConfigResponse) SetExternalKakaoClientID(val NilString) {
	s.ExternalKakaoClientID = val
}

// SetExternalKakaoEnabled sets the value of ExternalKakaoEnabled.
func (s *AuthConfigResponse) SetExternalKakaoEnabled(val NilBool) {
	s.ExternalKakaoEnabled = val
}

// SetExternalKakaoSecret sets the value of ExternalKakaoSecret.
func (s *AuthConfigResponse) SetExternalKakaoSecret(val NilString) {
	s.ExternalKakaoSecret = val
}

// SetExternalKeycloakClientID sets the value of ExternalKeycloakClientID.
func (s *AuthConfigResponse) SetExternalKeycloakClientID(val NilString) {
	s.ExternalKeycloakClientID = val
}

// SetExternalKeycloakEnabled sets the value of ExternalKeycloakEnabled.
func (s *AuthConfigResponse) SetExternalKeycloakEnabled(val NilBool) {
	s.ExternalKeycloakEnabled = val
}

// SetExternalKeycloakSecret sets the value of ExternalKeycloakSecret.
func (s *AuthConfigResponse) SetExternalKeycloakSecret(val NilString) {
	s.ExternalKeycloakSecret = val
}

// SetExternalKeycloakURL sets the value of ExternalKeycloakURL.
func (s *AuthConfigResponse) SetExternalKeycloakURL(val NilString) {
	s.ExternalKeycloakURL = val
}

// SetExternalLinkedinOidcClientID sets the value of ExternalLinkedinOidcClientID.
func (s *AuthConfigResponse) SetExternalLinkedinOidcClientID(val NilString) {
	s.ExternalLinkedinOidcClientID = val
}

// SetExternalLinkedinOidcEnabled sets the value of ExternalLinkedinOidcEnabled.
func (s *AuthConfigResponse) SetExternalLinkedinOidcEnabled(val NilBool) {
	s.ExternalLinkedinOidcEnabled = val
}

// SetExternalLinkedinOidcSecret sets the value of ExternalLinkedinOidcSecret.
func (s *AuthConfigResponse) SetExternalLinkedinOidcSecret(val NilString) {
	s.ExternalLinkedinOidcSecret = val
}

// SetExternalNotionClientID sets the value of ExternalNotionClientID.
func (s *AuthConfigResponse) SetExternalNotionClientID(val NilString) {
	s.ExternalNotionClientID = val
}

// SetExternalNotionEnabled sets the value of ExternalNotionEnabled.
func (s *AuthConfigResponse) SetExternalNotionEnabled(val NilBool) {
	s.ExternalNotionEnabled = val
}

// SetExternalNotionSecret sets the value of ExternalNotionSecret.
func (s *AuthConfigResponse) SetExternalNotionSecret(val NilString) {
	s.ExternalNotionSecret = val
}

// SetExternalPhoneEnabled sets the value of ExternalPhoneEnabled.
func (s *AuthConfigResponse) SetExternalPhoneEnabled(val NilBool) {
	s.ExternalPhoneEnabled = val
}

// SetExternalSlackClientID sets the value of ExternalSlackClientID.
func (s *AuthConfigResponse) SetExternalSlackClientID(val NilString) {
	s.ExternalSlackClientID = val
}

// SetExternalSlackEnabled sets the value of ExternalSlackEnabled.
func (s *AuthConfigResponse) SetExternalSlackEnabled(val NilBool) {
	s.ExternalSlackEnabled = val
}

// SetExternalSlackSecret sets the value of ExternalSlackSecret.
func (s *AuthConfigResponse) SetExternalSlackSecret(val NilString) {
	s.ExternalSlackSecret = val
}

// SetExternalSpotifyClientID sets the value of ExternalSpotifyClientID.
func (s *AuthConfigResponse) SetExternalSpotifyClientID(val NilString) {
	s.ExternalSpotifyClientID = val
}

// SetExternalSpotifyEnabled sets the value of ExternalSpotifyEnabled.
func (s *AuthConfigResponse) SetExternalSpotifyEnabled(val NilBool) {
	s.ExternalSpotifyEnabled = val
}

// SetExternalSpotifySecret sets the value of ExternalSpotifySecret.
func (s *AuthConfigResponse) SetExternalSpotifySecret(val NilString) {
	s.ExternalSpotifySecret = val
}

// SetExternalTwitchClientID sets the value of ExternalTwitchClientID.
func (s *AuthConfigResponse) SetExternalTwitchClientID(val NilString) {
	s.ExternalTwitchClientID = val
}

// SetExternalTwitchEnabled sets the value of ExternalTwitchEnabled.
func (s *AuthConfigResponse) SetExternalTwitchEnabled(val NilBool) {
	s.ExternalTwitchEnabled = val
}

// SetExternalTwitchSecret sets the value of ExternalTwitchSecret.
func (s *AuthConfigResponse) SetExternalTwitchSecret(val NilString) {
	s.ExternalTwitchSecret = val
}

// SetExternalTwitterClientID sets the value of ExternalTwitterClientID.
func (s *AuthConfigResponse) SetExternalTwitterClientID(val NilString) {
	s.ExternalTwitterClientID = val
}

// SetExternalTwitterEnabled sets the value of ExternalTwitterEnabled.
func (s *AuthConfigResponse) SetExternalTwitterEnabled(val NilBool) {
	s.ExternalTwitterEnabled = val
}

// SetExternalTwitterSecret sets the value of ExternalTwitterSecret.
func (s *AuthConfigResponse) SetExternalTwitterSecret(val NilString) {
	s.ExternalTwitterSecret = val
}

// SetExternalWorkosClientID sets the value of ExternalWorkosClientID.
func (s *AuthConfigResponse) SetExternalWorkosClientID(val NilString) {
	s.ExternalWorkosClientID = val
}

// SetExternalWorkosEnabled sets the value of ExternalWorkosEnabled.
func (s *AuthConfigResponse) SetExternalWorkosEnabled(val NilBool) {
	s.ExternalWorkosEnabled = val
}

// SetExternalWorkosSecret sets the value of ExternalWorkosSecret.
func (s *AuthConfigResponse) SetExternalWorkosSecret(val NilString) {
	s.ExternalWorkosSecret = val
}

// SetExternalWorkosURL sets the value of ExternalWorkosURL.
func (s *AuthConfigResponse) SetExternalWorkosURL(val NilString) {
	s.ExternalWorkosURL = val
}

// SetExternalZoomClientID sets the value of ExternalZoomClientID.
func (s *AuthConfigResponse) SetExternalZoomClientID(val NilString) {
	s.ExternalZoomClientID = val
}

// SetExternalZoomEnabled sets the value of ExternalZoomEnabled.
func (s *AuthConfigResponse) SetExternalZoomEnabled(val NilBool) {
	s.ExternalZoomEnabled = val
}

// SetExternalZoomSecret sets the value of ExternalZoomSecret.
func (s *AuthConfigResponse) SetExternalZoomSecret(val NilString) {
	s.ExternalZoomSecret = val
}

// SetHookCustomAccessTokenEnabled sets the value of HookCustomAccessTokenEnabled.
func (s *AuthConfigResponse) SetHookCustomAccessTokenEnabled(val NilBool) {
	s.HookCustomAccessTokenEnabled = val
}

// SetHookCustomAccessTokenURI sets the value of HookCustomAccessTokenURI.
func (s *AuthConfigResponse) SetHookCustomAccessTokenURI(val NilString) {
	s.HookCustomAccessTokenURI = val
}

// SetHookMfaVerificationAttemptEnabled sets the value of HookMfaVerificationAttemptEnabled.
func (s *AuthConfigResponse) SetHookMfaVerificationAttemptEnabled(val NilBool) {
	s.HookMfaVerificationAttemptEnabled = val
}

// SetHookMfaVerificationAttemptURI sets the value of HookMfaVerificationAttemptURI.
func (s *AuthConfigResponse) SetHookMfaVerificationAttemptURI(val NilString) {
	s.HookMfaVerificationAttemptURI = val
}

// SetHookPasswordVerificationAttemptEnabled sets the value of HookPasswordVerificationAttemptEnabled.
func (s *AuthConfigResponse) SetHookPasswordVerificationAttemptEnabled(val NilBool) {
	s.HookPasswordVerificationAttemptEnabled = val
}

// SetHookPasswordVerificationAttemptURI sets the value of HookPasswordVerificationAttemptURI.
func (s *AuthConfigResponse) SetHookPasswordVerificationAttemptURI(val NilString) {
	s.HookPasswordVerificationAttemptURI = val
}

// SetJwtExp sets the value of JwtExp.
func (s *AuthConfigResponse) SetJwtExp(val NilFloat64) {
	s.JwtExp = val
}

// SetMailerAllowUnverifiedEmailSignIns sets the value of MailerAllowUnverifiedEmailSignIns.
func (s *AuthConfigResponse) SetMailerAllowUnverifiedEmailSignIns(val NilBool) {
	s.MailerAllowUnverifiedEmailSignIns = val
}

// SetMailerAutoconfirm sets the value of MailerAutoconfirm.
func (s *AuthConfigResponse) SetMailerAutoconfirm(val NilBool) {
	s.MailerAutoconfirm = val
}

// SetMailerOtpExp sets the value of MailerOtpExp.
func (s *AuthConfigResponse) SetMailerOtpExp(val NilFloat64) {
	s.MailerOtpExp = val
}

// SetMailerSecureEmailChangeEnabled sets the value of MailerSecureEmailChangeEnabled.
func (s *AuthConfigResponse) SetMailerSecureEmailChangeEnabled(val NilBool) {
	s.MailerSecureEmailChangeEnabled = val
}

// SetMailerSubjectsConfirmation sets the value of MailerSubjectsConfirmation.
func (s *AuthConfigResponse) SetMailerSubjectsConfirmation(val NilString) {
	s.MailerSubjectsConfirmation = val
}

// SetMailerSubjectsEmailChange sets the value of MailerSubjectsEmailChange.
func (s *AuthConfigResponse) SetMailerSubjectsEmailChange(val NilString) {
	s.MailerSubjectsEmailChange = val
}

// SetMailerSubjectsInvite sets the value of MailerSubjectsInvite.
func (s *AuthConfigResponse) SetMailerSubjectsInvite(val NilString) {
	s.MailerSubjectsInvite = val
}

// SetMailerSubjectsMagicLink sets the value of MailerSubjectsMagicLink.
func (s *AuthConfigResponse) SetMailerSubjectsMagicLink(val NilString) {
	s.MailerSubjectsMagicLink = val
}

// SetMailerSubjectsRecovery sets the value of MailerSubjectsRecovery.
func (s *AuthConfigResponse) SetMailerSubjectsRecovery(val NilString) {
	s.MailerSubjectsRecovery = val
}

// SetMailerSubjectsReauthentication sets the value of MailerSubjectsReauthentication.
func (s *AuthConfigResponse) SetMailerSubjectsReauthentication(val NilString) {
	s.MailerSubjectsReauthentication = val
}

// SetMailerTemplatesConfirmationContent sets the value of MailerTemplatesConfirmationContent.
func (s *AuthConfigResponse) SetMailerTemplatesConfirmationContent(val NilString) {
	s.MailerTemplatesConfirmationContent = val
}

// SetMailerTemplatesEmailChangeContent sets the value of MailerTemplatesEmailChangeContent.
func (s *AuthConfigResponse) SetMailerTemplatesEmailChangeContent(val NilString) {
	s.MailerTemplatesEmailChangeContent = val
}

// SetMailerTemplatesInviteContent sets the value of MailerTemplatesInviteContent.
func (s *AuthConfigResponse) SetMailerTemplatesInviteContent(val NilString) {
	s.MailerTemplatesInviteContent = val
}

// SetMailerTemplatesMagicLinkContent sets the value of MailerTemplatesMagicLinkContent.
func (s *AuthConfigResponse) SetMailerTemplatesMagicLinkContent(val NilString) {
	s.MailerTemplatesMagicLinkContent = val
}

// SetMailerTemplatesRecoveryContent sets the value of MailerTemplatesRecoveryContent.
func (s *AuthConfigResponse) SetMailerTemplatesRecoveryContent(val NilString) {
	s.MailerTemplatesRecoveryContent = val
}

// SetMailerTemplatesReauthenticationContent sets the value of MailerTemplatesReauthenticationContent.
func (s *AuthConfigResponse) SetMailerTemplatesReauthenticationContent(val NilString) {
	s.MailerTemplatesReauthenticationContent = val
}

// SetMfaMaxEnrolledFactors sets the value of MfaMaxEnrolledFactors.
func (s *AuthConfigResponse) SetMfaMaxEnrolledFactors(val NilFloat64) {
	s.MfaMaxEnrolledFactors = val
}

// SetPasswordHibpEnabled sets the value of PasswordHibpEnabled.
func (s *AuthConfigResponse) SetPasswordHibpEnabled(val NilBool) {
	s.PasswordHibpEnabled = val
}

// SetPasswordMinLength sets the value of PasswordMinLength.
func (s *AuthConfigResponse) SetPasswordMinLength(val NilFloat64) {
	s.PasswordMinLength = val
}

// SetPasswordRequiredCharacters sets the value of PasswordRequiredCharacters.
func (s *AuthConfigResponse) SetPasswordRequiredCharacters(val NilString) {
	s.PasswordRequiredCharacters = val
}

// SetRateLimitAnonymousUsers sets the value of RateLimitAnonymousUsers.
func (s *AuthConfigResponse) SetRateLimitAnonymousUsers(val NilFloat64) {
	s.RateLimitAnonymousUsers = val
}

// SetRateLimitEmailSent sets the value of RateLimitEmailSent.
func (s *AuthConfigResponse) SetRateLimitEmailSent(val NilFloat64) {
	s.RateLimitEmailSent = val
}

// SetRateLimitSMSSent sets the value of RateLimitSMSSent.
func (s *AuthConfigResponse) SetRateLimitSMSSent(val NilFloat64) {
	s.RateLimitSMSSent = val
}

// SetRateLimitTokenRefresh sets the value of RateLimitTokenRefresh.
func (s *AuthConfigResponse) SetRateLimitTokenRefresh(val NilFloat64) {
	s.RateLimitTokenRefresh = val
}

// SetRateLimitVerify sets the value of RateLimitVerify.
func (s *AuthConfigResponse) SetRateLimitVerify(val NilFloat64) {
	s.RateLimitVerify = val
}

// SetRefreshTokenRotationEnabled sets the value of RefreshTokenRotationEnabled.
func (s *AuthConfigResponse) SetRefreshTokenRotationEnabled(val NilBool) {
	s.RefreshTokenRotationEnabled = val
}

// SetSamlEnabled sets the value of SamlEnabled.
func (s *AuthConfigResponse) SetSamlEnabled(val NilBool) {
	s.SamlEnabled = val
}

// SetSecurityCaptchaEnabled sets the value of SecurityCaptchaEnabled.
func (s *AuthConfigResponse) SetSecurityCaptchaEnabled(val NilBool) {
	s.SecurityCaptchaEnabled = val
}

// SetSecurityCaptchaProvider sets the value of SecurityCaptchaProvider.
func (s *AuthConfigResponse) SetSecurityCaptchaProvider(val NilString) {
	s.SecurityCaptchaProvider = val
}

// SetSecurityCaptchaSecret sets the value of SecurityCaptchaSecret.
func (s *AuthConfigResponse) SetSecurityCaptchaSecret(val NilString) {
	s.SecurityCaptchaSecret = val
}

// SetSecurityManualLinkingEnabled sets the value of SecurityManualLinkingEnabled.
func (s *AuthConfigResponse) SetSecurityManualLinkingEnabled(val NilBool) {
	s.SecurityManualLinkingEnabled = val
}

// SetSecurityRefreshTokenReuseInterval sets the value of SecurityRefreshTokenReuseInterval.
func (s *AuthConfigResponse) SetSecurityRefreshTokenReuseInterval(val NilFloat64) {
	s.SecurityRefreshTokenReuseInterval = val
}

// SetSecurityUpdatePasswordRequireReauthentication sets the value of SecurityUpdatePasswordRequireReauthentication.
func (s *AuthConfigResponse) SetSecurityUpdatePasswordRequireReauthentication(val NilBool) {
	s.SecurityUpdatePasswordRequireReauthentication = val
}

// SetSessionsInactivityTimeout sets the value of SessionsInactivityTimeout.
func (s *AuthConfigResponse) SetSessionsInactivityTimeout(val NilFloat64) {
	s.SessionsInactivityTimeout = val
}

// SetSessionsSinglePerUser sets the value of SessionsSinglePerUser.
func (s *AuthConfigResponse) SetSessionsSinglePerUser(val NilBool) {
	s.SessionsSinglePerUser = val
}

// SetSessionsTags sets the value of SessionsTags.
func (s *AuthConfigResponse) SetSessionsTags(val NilString) {
	s.SessionsTags = val
}

// SetSessionsTimebox sets the value of SessionsTimebox.
func (s *AuthConfigResponse) SetSessionsTimebox(val NilFloat64) {
	s.SessionsTimebox = val
}

// SetSiteURL sets the value of SiteURL.
func (s *AuthConfigResponse) SetSiteURL(val NilString) {
	s.SiteURL = val
}

// SetSMSAutoconfirm sets the value of SMSAutoconfirm.
func (s *AuthConfigResponse) SetSMSAutoconfirm(val NilBool) {
	s.SMSAutoconfirm = val
}

// SetSMSMaxFrequency sets the value of SMSMaxFrequency.
func (s *AuthConfigResponse) SetSMSMaxFrequency(val NilFloat64) {
	s.SMSMaxFrequency = val
}

// SetSMSMessagebirdAccessKey sets the value of SMSMessagebirdAccessKey.
func (s *AuthConfigResponse) SetSMSMessagebirdAccessKey(val NilString) {
	s.SMSMessagebirdAccessKey = val
}

// SetSMSMessagebirdOriginator sets the value of SMSMessagebirdOriginator.
func (s *AuthConfigResponse) SetSMSMessagebirdOriginator(val NilString) {
	s.SMSMessagebirdOriginator = val
}

// SetSMSOtpExp sets the value of SMSOtpExp.
func (s *AuthConfigResponse) SetSMSOtpExp(val NilFloat64) {
	s.SMSOtpExp = val
}

// SetSMSOtpLength sets the value of SMSOtpLength.
func (s *AuthConfigResponse) SetSMSOtpLength(val NilFloat64) {
	s.SMSOtpLength = val
}

// SetSMSProvider sets the value of SMSProvider.
func (s *AuthConfigResponse) SetSMSProvider(val NilString) {
	s.SMSProvider = val
}

// SetSMSTemplate sets the value of SMSTemplate.
func (s *AuthConfigResponse) SetSMSTemplate(val NilString) {
	s.SMSTemplate = val
}

// SetSMSTestOtp sets the value of SMSTestOtp.
func (s *AuthConfigResponse) SetSMSTestOtp(val NilString) {
	s.SMSTestOtp = val
}

// SetSMSTestOtpValidUntil sets the value of SMSTestOtpValidUntil.
func (s *AuthConfigResponse) SetSMSTestOtpValidUntil(val NilString) {
	s.SMSTestOtpValidUntil = val
}

// SetSMSTextlocalAPIKey sets the value of SMSTextlocalAPIKey.
func (s *AuthConfigResponse) SetSMSTextlocalAPIKey(val NilString) {
	s.SMSTextlocalAPIKey = val
}

// SetSMSTextlocalSender sets the value of SMSTextlocalSender.
func (s *AuthConfigResponse) SetSMSTextlocalSender(val NilString) {
	s.SMSTextlocalSender = val
}

// SetSMSTwilioAccountSid sets the value of SMSTwilioAccountSid.
func (s *AuthConfigResponse) SetSMSTwilioAccountSid(val NilString) {
	s.SMSTwilioAccountSid = val
}

// SetSMSTwilioAuthToken sets the value of SMSTwilioAuthToken.
func (s *AuthConfigResponse) SetSMSTwilioAuthToken(val NilString) {
	s.SMSTwilioAuthToken = val
}

// SetSMSTwilioContentSid sets the value of SMSTwilioContentSid.
func (s *AuthConfigResponse) SetSMSTwilioContentSid(val NilString) {
	s.SMSTwilioContentSid = val
}

// SetSMSTwilioMessageServiceSid sets the value of SMSTwilioMessageServiceSid.
func (s *AuthConfigResponse) SetSMSTwilioMessageServiceSid(val NilString) {
	s.SMSTwilioMessageServiceSid = val
}

// SetSMSTwilioVerifyAccountSid sets the value of SMSTwilioVerifyAccountSid.
func (s *AuthConfigResponse) SetSMSTwilioVerifyAccountSid(val NilString) {
	s.SMSTwilioVerifyAccountSid = val
}

// SetSMSTwilioVerifyAuthToken sets the value of SMSTwilioVerifyAuthToken.
func (s *AuthConfigResponse) SetSMSTwilioVerifyAuthToken(val NilString) {
	s.SMSTwilioVerifyAuthToken = val
}

// SetSMSTwilioVerifyMessageServiceSid sets the value of SMSTwilioVerifyMessageServiceSid.
func (s *AuthConfigResponse) SetSMSTwilioVerifyMessageServiceSid(val NilString) {
	s.SMSTwilioVerifyMessageServiceSid = val
}

// SetSMSVonageAPIKey sets the value of SMSVonageAPIKey.
func (s *AuthConfigResponse) SetSMSVonageAPIKey(val NilString) {
	s.SMSVonageAPIKey = val
}

// SetSMSVonageAPISecret sets the value of SMSVonageAPISecret.
func (s *AuthConfigResponse) SetSMSVonageAPISecret(val NilString) {
	s.SMSVonageAPISecret = val
}

// SetSMSVonageFrom sets the value of SMSVonageFrom.
func (s *AuthConfigResponse) SetSMSVonageFrom(val NilString) {
	s.SMSVonageFrom = val
}

// SetSMTPAdminEmail sets the value of SMTPAdminEmail.
func (s *AuthConfigResponse) SetSMTPAdminEmail(val NilString) {
	s.SMTPAdminEmail = val
}

// SetSMTPHost sets the value of SMTPHost.
func (s *AuthConfigResponse) SetSMTPHost(val NilString) {
	s.SMTPHost = val
}

// SetSMTPMaxFrequency sets the value of SMTPMaxFrequency.
func (s *AuthConfigResponse) SetSMTPMaxFrequency(val NilFloat64) {
	s.SMTPMaxFrequency = val
}

// SetSMTPPass sets the value of SMTPPass.
func (s *AuthConfigResponse) SetSMTPPass(val NilString) {
	s.SMTPPass = val
}

// SetSMTPPort sets the value of SMTPPort.
func (s *AuthConfigResponse) SetSMTPPort(val NilString) {
	s.SMTPPort = val
}

// SetSMTPSenderName sets the value of SMTPSenderName.
func (s *AuthConfigResponse) SetSMTPSenderName(val NilString) {
	s.SMTPSenderName = val
}

// SetSMTPUser sets the value of SMTPUser.
func (s *AuthConfigResponse) SetSMTPUser(val NilString) {
	s.SMTPUser = val
}

// SetURIAllowList sets the value of URIAllowList.
func (s *AuthConfigResponse) SetURIAllowList(val NilString) {
	s.URIAllowList = val
}

func (*AuthConfigResponse) getV1AuthConfigRes()    {}
func (*AuthConfigResponse) updateV1AuthConfigRes() {}

// Ref: #/components/schemas/AuthHealthResponse
type AuthHealthResponse struct {
	Name        string `json:"name"`
	Version     string `json:"version"`
	Description string `json:"description"`
}

// GetName returns the value of Name.
func (s *AuthHealthResponse) GetName() string {
	return s.Name
}

// GetVersion returns the value of Version.
func (s *AuthHealthResponse) GetVersion() string {
	return s.Version
}

// GetDescription returns the value of Description.
func (s *AuthHealthResponse) GetDescription() string {
	return s.Description
}

// SetName sets the value of Name.
func (s *AuthHealthResponse) SetName(val string) {
	s.Name = val
}

// SetVersion sets the value of Version.
func (s *AuthHealthResponse) SetVersion(val string) {
	s.Version = val
}

// SetDescription sets the value of Description.
func (s *AuthHealthResponse) SetDescription(val string) {
	s.Description = val
}

type AuthorizeCodeChallengeMethod string

const (
	AuthorizeCodeChallengeMethodPlain  AuthorizeCodeChallengeMethod = "plain"
	AuthorizeCodeChallengeMethodSHA256 AuthorizeCodeChallengeMethod = "sha256"
	AuthorizeCodeChallengeMethodS256   AuthorizeCodeChallengeMethod = "S256"
)

// AllValues returns all AuthorizeCodeChallengeMethod values.
func (AuthorizeCodeChallengeMethod) AllValues() []AuthorizeCodeChallengeMethod {
	return []AuthorizeCodeChallengeMethod{
		AuthorizeCodeChallengeMethodPlain,
		AuthorizeCodeChallengeMethodSHA256,
		AuthorizeCodeChallengeMethodS256,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AuthorizeCodeChallengeMethod) MarshalText() ([]byte, error) {
	switch s {
	case AuthorizeCodeChallengeMethodPlain:
		return []byte(s), nil
	case AuthorizeCodeChallengeMethodSHA256:
		return []byte(s), nil
	case AuthorizeCodeChallengeMethodS256:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AuthorizeCodeChallengeMethod) UnmarshalText(data []byte) error {
	switch AuthorizeCodeChallengeMethod(data) {
	case AuthorizeCodeChallengeMethodPlain:
		*s = AuthorizeCodeChallengeMethodPlain
		return nil
	case AuthorizeCodeChallengeMethodSHA256:
		*s = AuthorizeCodeChallengeMethodSHA256
		return nil
	case AuthorizeCodeChallengeMethodS256:
		*s = AuthorizeCodeChallengeMethodS256
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AuthorizeResponseType string

const (
	AuthorizeResponseTypeCode         AuthorizeResponseType = "code"
	AuthorizeResponseTypeToken        AuthorizeResponseType = "token"
	AuthorizeResponseTypeIDTokenToken AuthorizeResponseType = "id_token token"
)

// AllValues returns all AuthorizeResponseType values.
func (AuthorizeResponseType) AllValues() []AuthorizeResponseType {
	return []AuthorizeResponseType{
		AuthorizeResponseTypeCode,
		AuthorizeResponseTypeToken,
		AuthorizeResponseTypeIDTokenToken,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AuthorizeResponseType) MarshalText() ([]byte, error) {
	switch s {
	case AuthorizeResponseTypeCode:
		return []byte(s), nil
	case AuthorizeResponseTypeToken:
		return []byte(s), nil
	case AuthorizeResponseTypeIDTokenToken:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AuthorizeResponseType) UnmarshalText(data []byte) error {
	switch AuthorizeResponseType(data) {
	case AuthorizeResponseTypeCode:
		*s = AuthorizeResponseTypeCode
		return nil
	case AuthorizeResponseTypeToken:
		*s = AuthorizeResponseTypeToken
		return nil
	case AuthorizeResponseTypeIDTokenToken:
		*s = AuthorizeResponseTypeIDTokenToken
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// AuthorizeSeeOther is response for Authorize operation.
type AuthorizeSeeOther struct{}

type Bearer struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/BillingPlanId
type BillingPlanId string

const (
	BillingPlanIdFree       BillingPlanId = "free"
	BillingPlanIdPro        BillingPlanId = "pro"
	BillingPlanIdTeam       BillingPlanId = "team"
	BillingPlanIdEnterprise BillingPlanId = "enterprise"
)

// AllValues returns all BillingPlanId values.
func (BillingPlanId) AllValues() []BillingPlanId {
	return []BillingPlanId{
		BillingPlanIdFree,
		BillingPlanIdPro,
		BillingPlanIdTeam,
		BillingPlanIdEnterprise,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BillingPlanId) MarshalText() ([]byte, error) {
	switch s {
	case BillingPlanIdFree:
		return []byte(s), nil
	case BillingPlanIdPro:
		return []byte(s), nil
	case BillingPlanIdTeam:
		return []byte(s), nil
	case BillingPlanIdEnterprise:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BillingPlanId) UnmarshalText(data []byte) error {
	switch BillingPlanId(data) {
	case BillingPlanIdFree:
		*s = BillingPlanIdFree
		return nil
	case BillingPlanIdPro:
		*s = BillingPlanIdPro
		return nil
	case BillingPlanIdTeam:
		*s = BillingPlanIdTeam
		return nil
	case BillingPlanIdEnterprise:
		*s = BillingPlanIdEnterprise
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BranchDeleteResponse
type BranchDeleteResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *BranchDeleteResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *BranchDeleteResponse) SetMessage(val string) {
	s.Message = val
}

func (*BranchDeleteResponse) deleteBranchRes() {}

// Ref: #/components/schemas/BranchDetailResponse
type BranchDetailResponse struct {
	DbPort          int                        `json:"db_port"`
	Ref             string                     `json:"ref"`
	PostgresVersion string                     `json:"postgres_version"`
	Status          BranchDetailResponseStatus `json:"status"`
	DbHost          string                     `json:"db_host"`
	DbUser          OptString                  `json:"db_user"`
	DbPass          OptString                  `json:"db_pass"`
	JwtSecret       OptString                  `json:"jwt_secret"`
}

// GetDbPort returns the value of DbPort.
func (s *BranchDetailResponse) GetDbPort() int {
	return s.DbPort
}

// GetRef returns the value of Ref.
func (s *BranchDetailResponse) GetRef() string {
	return s.Ref
}

// GetPostgresVersion returns the value of PostgresVersion.
func (s *BranchDetailResponse) GetPostgresVersion() string {
	return s.PostgresVersion
}

// GetStatus returns the value of Status.
func (s *BranchDetailResponse) GetStatus() BranchDetailResponseStatus {
	return s.Status
}

// GetDbHost returns the value of DbHost.
func (s *BranchDetailResponse) GetDbHost() string {
	return s.DbHost
}

// GetDbUser returns the value of DbUser.
func (s *BranchDetailResponse) GetDbUser() OptString {
	return s.DbUser
}

// GetDbPass returns the value of DbPass.
func (s *BranchDetailResponse) GetDbPass() OptString {
	return s.DbPass
}

// GetJwtSecret returns the value of JwtSecret.
func (s *BranchDetailResponse) GetJwtSecret() OptString {
	return s.JwtSecret
}

// SetDbPort sets the value of DbPort.
func (s *BranchDetailResponse) SetDbPort(val int) {
	s.DbPort = val
}

// SetRef sets the value of Ref.
func (s *BranchDetailResponse) SetRef(val string) {
	s.Ref = val
}

// SetPostgresVersion sets the value of PostgresVersion.
func (s *BranchDetailResponse) SetPostgresVersion(val string) {
	s.PostgresVersion = val
}

// SetStatus sets the value of Status.
func (s *BranchDetailResponse) SetStatus(val BranchDetailResponseStatus) {
	s.Status = val
}

// SetDbHost sets the value of DbHost.
func (s *BranchDetailResponse) SetDbHost(val string) {
	s.DbHost = val
}

// SetDbUser sets the value of DbUser.
func (s *BranchDetailResponse) SetDbUser(val OptString) {
	s.DbUser = val
}

// SetDbPass sets the value of DbPass.
func (s *BranchDetailResponse) SetDbPass(val OptString) {
	s.DbPass = val
}

// SetJwtSecret sets the value of JwtSecret.
func (s *BranchDetailResponse) SetJwtSecret(val OptString) {
	s.JwtSecret = val
}

func (*BranchDetailResponse) getBranchDetailsRes() {}

type BranchDetailResponseStatus string

const (
	BranchDetailResponseStatusACTIVEHEALTHY   BranchDetailResponseStatus = "ACTIVE_HEALTHY"
	BranchDetailResponseStatusACTIVEUNHEALTHY BranchDetailResponseStatus = "ACTIVE_UNHEALTHY"
	BranchDetailResponseStatusCOMINGUP        BranchDetailResponseStatus = "COMING_UP"
	BranchDetailResponseStatusGOINGDOWN       BranchDetailResponseStatus = "GOING_DOWN"
	BranchDetailResponseStatusINACTIVE        BranchDetailResponseStatus = "INACTIVE"
	BranchDetailResponseStatusINITFAILED      BranchDetailResponseStatus = "INIT_FAILED"
	BranchDetailResponseStatusREMOVED         BranchDetailResponseStatus = "REMOVED"
	BranchDetailResponseStatusRESTORING       BranchDetailResponseStatus = "RESTORING"
	BranchDetailResponseStatusUNKNOWN         BranchDetailResponseStatus = "UNKNOWN"
	BranchDetailResponseStatusUPGRADING       BranchDetailResponseStatus = "UPGRADING"
	BranchDetailResponseStatusPAUSING         BranchDetailResponseStatus = "PAUSING"
)

// AllValues returns all BranchDetailResponseStatus values.
func (BranchDetailResponseStatus) AllValues() []BranchDetailResponseStatus {
	return []BranchDetailResponseStatus{
		BranchDetailResponseStatusACTIVEHEALTHY,
		BranchDetailResponseStatusACTIVEUNHEALTHY,
		BranchDetailResponseStatusCOMINGUP,
		BranchDetailResponseStatusGOINGDOWN,
		BranchDetailResponseStatusINACTIVE,
		BranchDetailResponseStatusINITFAILED,
		BranchDetailResponseStatusREMOVED,
		BranchDetailResponseStatusRESTORING,
		BranchDetailResponseStatusUNKNOWN,
		BranchDetailResponseStatusUPGRADING,
		BranchDetailResponseStatusPAUSING,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BranchDetailResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case BranchDetailResponseStatusACTIVEHEALTHY:
		return []byte(s), nil
	case BranchDetailResponseStatusACTIVEUNHEALTHY:
		return []byte(s), nil
	case BranchDetailResponseStatusCOMINGUP:
		return []byte(s), nil
	case BranchDetailResponseStatusGOINGDOWN:
		return []byte(s), nil
	case BranchDetailResponseStatusINACTIVE:
		return []byte(s), nil
	case BranchDetailResponseStatusINITFAILED:
		return []byte(s), nil
	case BranchDetailResponseStatusREMOVED:
		return []byte(s), nil
	case BranchDetailResponseStatusRESTORING:
		return []byte(s), nil
	case BranchDetailResponseStatusUNKNOWN:
		return []byte(s), nil
	case BranchDetailResponseStatusUPGRADING:
		return []byte(s), nil
	case BranchDetailResponseStatusPAUSING:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BranchDetailResponseStatus) UnmarshalText(data []byte) error {
	switch BranchDetailResponseStatus(data) {
	case BranchDetailResponseStatusACTIVEHEALTHY:
		*s = BranchDetailResponseStatusACTIVEHEALTHY
		return nil
	case BranchDetailResponseStatusACTIVEUNHEALTHY:
		*s = BranchDetailResponseStatusACTIVEUNHEALTHY
		return nil
	case BranchDetailResponseStatusCOMINGUP:
		*s = BranchDetailResponseStatusCOMINGUP
		return nil
	case BranchDetailResponseStatusGOINGDOWN:
		*s = BranchDetailResponseStatusGOINGDOWN
		return nil
	case BranchDetailResponseStatusINACTIVE:
		*s = BranchDetailResponseStatusINACTIVE
		return nil
	case BranchDetailResponseStatusINITFAILED:
		*s = BranchDetailResponseStatusINITFAILED
		return nil
	case BranchDetailResponseStatusREMOVED:
		*s = BranchDetailResponseStatusREMOVED
		return nil
	case BranchDetailResponseStatusRESTORING:
		*s = BranchDetailResponseStatusRESTORING
		return nil
	case BranchDetailResponseStatusUNKNOWN:
		*s = BranchDetailResponseStatusUNKNOWN
		return nil
	case BranchDetailResponseStatusUPGRADING:
		*s = BranchDetailResponseStatusUPGRADING
		return nil
	case BranchDetailResponseStatusPAUSING:
		*s = BranchDetailResponseStatusPAUSING
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BranchResetResponse
type BranchResetResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *BranchResetResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *BranchResetResponse) SetMessage(val string) {
	s.Message = val
}

func (*BranchResetResponse) resetBranchRes() {}

// Ref: #/components/schemas/BranchResponse
type BranchResponse struct {
	ID               string               `json:"id"`
	Name             string               `json:"name"`
	ProjectRef       string               `json:"project_ref"`
	ParentProjectRef string               `json:"parent_project_ref"`
	IsDefault        bool                 `json:"is_default"`
	GitBranch        OptString            `json:"git_branch"`
	PrNumber         OptFloat64           `json:"pr_number"`
	ResetOnPush      bool                 `json:"reset_on_push"`
	Persistent       bool                 `json:"persistent"`
	Status           BranchResponseStatus `json:"status"`
	CreatedAt        string               `json:"created_at"`
	UpdatedAt        string               `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *BranchResponse) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *BranchResponse) GetName() string {
	return s.Name
}

// GetProjectRef returns the value of ProjectRef.
func (s *BranchResponse) GetProjectRef() string {
	return s.ProjectRef
}

// GetParentProjectRef returns the value of ParentProjectRef.
func (s *BranchResponse) GetParentProjectRef() string {
	return s.ParentProjectRef
}

// GetIsDefault returns the value of IsDefault.
func (s *BranchResponse) GetIsDefault() bool {
	return s.IsDefault
}

// GetGitBranch returns the value of GitBranch.
func (s *BranchResponse) GetGitBranch() OptString {
	return s.GitBranch
}

// GetPrNumber returns the value of PrNumber.
func (s *BranchResponse) GetPrNumber() OptFloat64 {
	return s.PrNumber
}

// GetResetOnPush returns the value of ResetOnPush.
func (s *BranchResponse) GetResetOnPush() bool {
	return s.ResetOnPush
}

// GetPersistent returns the value of Persistent.
func (s *BranchResponse) GetPersistent() bool {
	return s.Persistent
}

// GetStatus returns the value of Status.
func (s *BranchResponse) GetStatus() BranchResponseStatus {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *BranchResponse) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *BranchResponse) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *BranchResponse) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *BranchResponse) SetName(val string) {
	s.Name = val
}

// SetProjectRef sets the value of ProjectRef.
func (s *BranchResponse) SetProjectRef(val string) {
	s.ProjectRef = val
}

// SetParentProjectRef sets the value of ParentProjectRef.
func (s *BranchResponse) SetParentProjectRef(val string) {
	s.ParentProjectRef = val
}

// SetIsDefault sets the value of IsDefault.
func (s *BranchResponse) SetIsDefault(val bool) {
	s.IsDefault = val
}

// SetGitBranch sets the value of GitBranch.
func (s *BranchResponse) SetGitBranch(val OptString) {
	s.GitBranch = val
}

// SetPrNumber sets the value of PrNumber.
func (s *BranchResponse) SetPrNumber(val OptFloat64) {
	s.PrNumber = val
}

// SetResetOnPush sets the value of ResetOnPush.
func (s *BranchResponse) SetResetOnPush(val bool) {
	s.ResetOnPush = val
}

// SetPersistent sets the value of Persistent.
func (s *BranchResponse) SetPersistent(val bool) {
	s.Persistent = val
}

// SetStatus sets the value of Status.
func (s *BranchResponse) SetStatus(val BranchResponseStatus) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *BranchResponse) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *BranchResponse) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

func (*BranchResponse) createBranchRes() {}
func (*BranchResponse) updateBranchRes() {}

type BranchResponseStatus string

const (
	BranchResponseStatusCREATINGPROJECT   BranchResponseStatus = "CREATING_PROJECT"
	BranchResponseStatusRUNNINGMIGRATIONS BranchResponseStatus = "RUNNING_MIGRATIONS"
	BranchResponseStatusMIGRATIONSPASSED  BranchResponseStatus = "MIGRATIONS_PASSED"
	BranchResponseStatusMIGRATIONSFAILED  BranchResponseStatus = "MIGRATIONS_FAILED"
)

// AllValues returns all BranchResponseStatus values.
func (BranchResponseStatus) AllValues() []BranchResponseStatus {
	return []BranchResponseStatus{
		BranchResponseStatusCREATINGPROJECT,
		BranchResponseStatusRUNNINGMIGRATIONS,
		BranchResponseStatusMIGRATIONSPASSED,
		BranchResponseStatusMIGRATIONSFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BranchResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case BranchResponseStatusCREATINGPROJECT:
		return []byte(s), nil
	case BranchResponseStatusRUNNINGMIGRATIONS:
		return []byte(s), nil
	case BranchResponseStatusMIGRATIONSPASSED:
		return []byte(s), nil
	case BranchResponseStatusMIGRATIONSFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BranchResponseStatus) UnmarshalText(data []byte) error {
	switch BranchResponseStatus(data) {
	case BranchResponseStatusCREATINGPROJECT:
		*s = BranchResponseStatusCREATINGPROJECT
		return nil
	case BranchResponseStatusRUNNINGMIGRATIONS:
		*s = BranchResponseStatusRUNNINGMIGRATIONS
		return nil
	case BranchResponseStatusMIGRATIONSPASSED:
		*s = BranchResponseStatusMIGRATIONSPASSED
		return nil
	case BranchResponseStatusMIGRATIONSFAILED:
		*s = BranchResponseStatusMIGRATIONSFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// CheckServiceHealthInternalServerError is response for CheckServiceHealth operation.
type CheckServiceHealthInternalServerError struct{}

func (*CheckServiceHealthInternalServerError) checkServiceHealthRes() {}

type CheckServiceHealthOKApplicationJSON []V1ServiceHealthResponse

func (*CheckServiceHealthOKApplicationJSON) checkServiceHealthRes() {}

type CheckServiceHealthServicesItem string

const (
	CheckServiceHealthServicesItemAuth     CheckServiceHealthServicesItem = "auth"
	CheckServiceHealthServicesItemDb       CheckServiceHealthServicesItem = "db"
	CheckServiceHealthServicesItemPooler   CheckServiceHealthServicesItem = "pooler"
	CheckServiceHealthServicesItemRealtime CheckServiceHealthServicesItem = "realtime"
	CheckServiceHealthServicesItemRest     CheckServiceHealthServicesItem = "rest"
	CheckServiceHealthServicesItemStorage  CheckServiceHealthServicesItem = "storage"
)

// AllValues returns all CheckServiceHealthServicesItem values.
func (CheckServiceHealthServicesItem) AllValues() []CheckServiceHealthServicesItem {
	return []CheckServiceHealthServicesItem{
		CheckServiceHealthServicesItemAuth,
		CheckServiceHealthServicesItemDb,
		CheckServiceHealthServicesItemPooler,
		CheckServiceHealthServicesItemRealtime,
		CheckServiceHealthServicesItemRest,
		CheckServiceHealthServicesItemStorage,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CheckServiceHealthServicesItem) MarshalText() ([]byte, error) {
	switch s {
	case CheckServiceHealthServicesItemAuth:
		return []byte(s), nil
	case CheckServiceHealthServicesItemDb:
		return []byte(s), nil
	case CheckServiceHealthServicesItemPooler:
		return []byte(s), nil
	case CheckServiceHealthServicesItemRealtime:
		return []byte(s), nil
	case CheckServiceHealthServicesItemRest:
		return []byte(s), nil
	case CheckServiceHealthServicesItemStorage:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CheckServiceHealthServicesItem) UnmarshalText(data []byte) error {
	switch CheckServiceHealthServicesItem(data) {
	case CheckServiceHealthServicesItemAuth:
		*s = CheckServiceHealthServicesItemAuth
		return nil
	case CheckServiceHealthServicesItemDb:
		*s = CheckServiceHealthServicesItemDb
		return nil
	case CheckServiceHealthServicesItemPooler:
		*s = CheckServiceHealthServicesItemPooler
		return nil
	case CheckServiceHealthServicesItemRealtime:
		*s = CheckServiceHealthServicesItemRealtime
		return nil
	case CheckServiceHealthServicesItemRest:
		*s = CheckServiceHealthServicesItemRest
		return nil
	case CheckServiceHealthServicesItemStorage:
		*s = CheckServiceHealthServicesItemStorage
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// CheckVanitySubdomainAvailabilityForbidden is response for CheckVanitySubdomainAvailability operation.
type CheckVanitySubdomainAvailabilityForbidden struct{}

func (*CheckVanitySubdomainAvailabilityForbidden) checkVanitySubdomainAvailabilityRes() {}

// CheckVanitySubdomainAvailabilityInternalServerError is response for CheckVanitySubdomainAvailability operation.
type CheckVanitySubdomainAvailabilityInternalServerError struct{}

func (*CheckVanitySubdomainAvailabilityInternalServerError) checkVanitySubdomainAvailabilityRes() {}

// Ref: #/components/schemas/CreateBranchBody
type CreateBranchBody struct {
	BranchName string    `json:"branch_name"`
	GitBranch  OptString `json:"git_branch"`
	Region     OptString `json:"region"`
}

// GetBranchName returns the value of BranchName.
func (s *CreateBranchBody) GetBranchName() string {
	return s.BranchName
}

// GetGitBranch returns the value of GitBranch.
func (s *CreateBranchBody) GetGitBranch() OptString {
	return s.GitBranch
}

// GetRegion returns the value of Region.
func (s *CreateBranchBody) GetRegion() OptString {
	return s.Region
}

// SetBranchName sets the value of BranchName.
func (s *CreateBranchBody) SetBranchName(val string) {
	s.BranchName = val
}

// SetGitBranch sets the value of GitBranch.
func (s *CreateBranchBody) SetGitBranch(val OptString) {
	s.GitBranch = val
}

// SetRegion sets the value of Region.
func (s *CreateBranchBody) SetRegion(val OptString) {
	s.Region = val
}

// CreateBranchInternalServerError is response for CreateBranch operation.
type CreateBranchInternalServerError struct{}

func (*CreateBranchInternalServerError) createBranchRes() {}

// CreateCustomHostnameConfigForbidden is response for CreateCustomHostnameConfig operation.
type CreateCustomHostnameConfigForbidden struct{}

func (*CreateCustomHostnameConfigForbidden) createCustomHostnameConfigRes() {}

// CreateCustomHostnameConfigInternalServerError is response for CreateCustomHostnameConfig operation.
type CreateCustomHostnameConfigInternalServerError struct{}

func (*CreateCustomHostnameConfigInternalServerError) createCustomHostnameConfigRes() {}

// CreateFunctionForbidden is response for CreateFunction operation.
type CreateFunctionForbidden struct{}

func (*CreateFunctionForbidden) createFunctionRes() {}

// CreateFunctionInternalServerError is response for CreateFunction operation.
type CreateFunctionInternalServerError struct{}

func (*CreateFunctionInternalServerError) createFunctionRes() {}

// Ref: #/components/schemas/CreateOrganizationBodyV1
type CreateOrganizationBodyV1 struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *CreateOrganizationBodyV1) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *CreateOrganizationBodyV1) SetName(val string) {
	s.Name = val
}

// CreateOrganizationInternalServerError is response for CreateOrganization operation.
type CreateOrganizationInternalServerError struct{}

func (*CreateOrganizationInternalServerError) createOrganizationRes() {}

// Ref: #/components/schemas/CreateProviderBody
type CreateProviderBody struct {
	// What type of provider will be created.
	Type             CreateProviderBodyType `json:"type"`
	MetadataXML      OptString              `json:"metadata_xml"`
	MetadataURL      OptString              `json:"metadata_url"`
	Domains          []string               `json:"domains"`
	AttributeMapping OptAttributeMapping    `json:"attribute_mapping"`
}

// GetType returns the value of Type.
func (s *CreateProviderBody) GetType() CreateProviderBodyType {
	return s.Type
}

// GetMetadataXML returns the value of MetadataXML.
func (s *CreateProviderBody) GetMetadataXML() OptString {
	return s.MetadataXML
}

// GetMetadataURL returns the value of MetadataURL.
func (s *CreateProviderBody) GetMetadataURL() OptString {
	return s.MetadataURL
}

// GetDomains returns the value of Domains.
func (s *CreateProviderBody) GetDomains() []string {
	return s.Domains
}

// GetAttributeMapping returns the value of AttributeMapping.
func (s *CreateProviderBody) GetAttributeMapping() OptAttributeMapping {
	return s.AttributeMapping
}

// SetType sets the value of Type.
func (s *CreateProviderBody) SetType(val CreateProviderBodyType) {
	s.Type = val
}

// SetMetadataXML sets the value of MetadataXML.
func (s *CreateProviderBody) SetMetadataXML(val OptString) {
	s.MetadataXML = val
}

// SetMetadataURL sets the value of MetadataURL.
func (s *CreateProviderBody) SetMetadataURL(val OptString) {
	s.MetadataURL = val
}

// SetDomains sets the value of Domains.
func (s *CreateProviderBody) SetDomains(val []string) {
	s.Domains = val
}

// SetAttributeMapping sets the value of AttributeMapping.
func (s *CreateProviderBody) SetAttributeMapping(val OptAttributeMapping) {
	s.AttributeMapping = val
}

// What type of provider will be created.
type CreateProviderBodyType string

const (
	CreateProviderBodyTypeSaml CreateProviderBodyType = "saml"
)

// AllValues returns all CreateProviderBodyType values.
func (CreateProviderBodyType) AllValues() []CreateProviderBodyType {
	return []CreateProviderBodyType{
		CreateProviderBodyTypeSaml,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateProviderBodyType) MarshalText() ([]byte, error) {
	switch s {
	case CreateProviderBodyTypeSaml:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateProviderBodyType) UnmarshalText(data []byte) error {
	switch CreateProviderBodyType(data) {
	case CreateProviderBodyTypeSaml:
		*s = CreateProviderBodyTypeSaml
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// CreateProviderForProjectForbidden is response for CreateProviderForProject operation.
type CreateProviderForProjectForbidden struct{}

func (*CreateProviderForProjectForbidden) createProviderForProjectRes() {}

// CreateProviderForProjectNotFound is response for CreateProviderForProject operation.
type CreateProviderForProjectNotFound struct{}

func (*CreateProviderForProjectNotFound) createProviderForProjectRes() {}

// Ref: #/components/schemas/CreateProviderResponse
type CreateProviderResponse struct {
	ID        string            `json:"id"`
	Saml      OptSamlDescriptor `json:"saml"`
	Domains   []Domain          `json:"domains"`
	CreatedAt OptString         `json:"created_at"`
	UpdatedAt OptString         `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *CreateProviderResponse) GetID() string {
	return s.ID
}

// GetSaml returns the value of Saml.
func (s *CreateProviderResponse) GetSaml() OptSamlDescriptor {
	return s.Saml
}

// GetDomains returns the value of Domains.
func (s *CreateProviderResponse) GetDomains() []Domain {
	return s.Domains
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateProviderResponse) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateProviderResponse) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *CreateProviderResponse) SetID(val string) {
	s.ID = val
}

// SetSaml sets the value of Saml.
func (s *CreateProviderResponse) SetSaml(val OptSamlDescriptor) {
	s.Saml = val
}

// SetDomains sets the value of Domains.
func (s *CreateProviderResponse) SetDomains(val []Domain) {
	s.Domains = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateProviderResponse) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateProviderResponse) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

func (*CreateProviderResponse) createProviderForProjectRes() {}

// Ref: #/components/schemas/CreateSecretBody
type CreateSecretBody struct {
	// Secret name must not start with the SUPABASE_ prefix.
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *CreateSecretBody) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *CreateSecretBody) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *CreateSecretBody) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *CreateSecretBody) SetValue(val string) {
	s.Value = val
}

// CreateSecretsCreated is response for CreateSecrets operation.
type CreateSecretsCreated struct{}

func (*CreateSecretsCreated) createSecretsRes() {}

// CreateSecretsForbidden is response for CreateSecrets operation.
type CreateSecretsForbidden struct{}

func (*CreateSecretsForbidden) createSecretsRes() {}

// CreateSecretsInternalServerError is response for CreateSecrets operation.
type CreateSecretsInternalServerError struct{}

func (*CreateSecretsInternalServerError) createSecretsRes() {}

// CreateTPAForProjectForbidden is response for CreateTPAForProject operation.
type CreateTPAForProjectForbidden struct{}

func (*CreateTPAForProjectForbidden) createTPAForProjectRes() {}

// Ref: #/components/schemas/CreateThirdPartyAuthBody
type CreateThirdPartyAuthBody struct {
	OidcIssuerURL OptString                           `json:"oidc_issuer_url"`
	JwksURL       OptString                           `json:"jwks_url"`
	CustomJwks    *CreateThirdPartyAuthBodyCustomJwks `json:"custom_jwks"`
}

// GetOidcIssuerURL returns the value of OidcIssuerURL.
func (s *CreateThirdPartyAuthBody) GetOidcIssuerURL() OptString {
	return s.OidcIssuerURL
}

// GetJwksURL returns the value of JwksURL.
func (s *CreateThirdPartyAuthBody) GetJwksURL() OptString {
	return s.JwksURL
}

// GetCustomJwks returns the value of CustomJwks.
func (s *CreateThirdPartyAuthBody) GetCustomJwks() *CreateThirdPartyAuthBodyCustomJwks {
	return s.CustomJwks
}

// SetOidcIssuerURL sets the value of OidcIssuerURL.
func (s *CreateThirdPartyAuthBody) SetOidcIssuerURL(val OptString) {
	s.OidcIssuerURL = val
}

// SetJwksURL sets the value of JwksURL.
func (s *CreateThirdPartyAuthBody) SetJwksURL(val OptString) {
	s.JwksURL = val
}

// SetCustomJwks sets the value of CustomJwks.
func (s *CreateThirdPartyAuthBody) SetCustomJwks(val *CreateThirdPartyAuthBodyCustomJwks) {
	s.CustomJwks = val
}

type CreateThirdPartyAuthBodyCustomJwks struct{}

// Ref: #/components/schemas/DatabaseUpgradeStatusResponse
type DatabaseUpgradeStatusResponse struct {
	DatabaseUpgradeStatus NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus `json:"databaseUpgradeStatus"`
}

// GetDatabaseUpgradeStatus returns the value of DatabaseUpgradeStatus.
func (s *DatabaseUpgradeStatusResponse) GetDatabaseUpgradeStatus() NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus {
	return s.DatabaseUpgradeStatus
}

// SetDatabaseUpgradeStatus sets the value of DatabaseUpgradeStatus.
func (s *DatabaseUpgradeStatusResponse) SetDatabaseUpgradeStatus(val NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) {
	s.DatabaseUpgradeStatus = val
}

func (*DatabaseUpgradeStatusResponse) getUpgradeStatusRes() {}

type DatabaseUpgradeStatusResponseDatabaseUpgradeStatus struct {
	InitiatedAt   string                                                        `json:"initiated_at"`
	TargetVersion float64                                                       `json:"target_version"`
	Error         OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError    `json:"error"`
	Progress      OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress `json:"progress"`
	Status        DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus      `json:"status"`
}

// GetInitiatedAt returns the value of InitiatedAt.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) GetInitiatedAt() string {
	return s.InitiatedAt
}

// GetTargetVersion returns the value of TargetVersion.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) GetTargetVersion() float64 {
	return s.TargetVersion
}

// GetError returns the value of Error.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) GetError() OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError {
	return s.Error
}

// GetProgress returns the value of Progress.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) GetProgress() OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress {
	return s.Progress
}

// GetStatus returns the value of Status.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) GetStatus() DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus {
	return s.Status
}

// SetInitiatedAt sets the value of InitiatedAt.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetInitiatedAt(val string) {
	s.InitiatedAt = val
}

// SetTargetVersion sets the value of TargetVersion.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetTargetVersion(val float64) {
	s.TargetVersion = val
}

// SetError sets the value of Error.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetError(val OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) {
	s.Error = val
}

// SetProgress sets the value of Progress.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetProgress(val OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) {
	s.Progress = val
}

// SetStatus sets the value of Status.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetStatus(val DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus) {
	s.Status = val
}

type DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError string

const (
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError1UpgradedInstanceLaunchFailed                 DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "1_upgraded_instance_launch_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError2VolumeDetachchmentFromUpgradedInstanceFailed DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "2_volume_detachchment_from_upgraded_instance_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError3VolumeAttachmentToOriginalInstanceFailed     DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "3_volume_attachment_to_original_instance_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError4DataUpgradeInitiationFailed                  DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "4_data_upgrade_initiation_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError5DataUpgradeCompletionFailed                  DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "5_data_upgrade_completion_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError6VolumeDetachchmentFromOriginalInstanceFailed DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "6_volume_detachchment_from_original_instance_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError7VolumeAttachmentToUpgradedInstanceFailed     DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "7_volume_attachment_to_upgraded_instance_failed"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError8UpgradeCompletionFailed                      DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError = "8_upgrade_completion_failed"
)

// AllValues returns all DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError values.
func (DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) AllValues() []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError {
	return []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError{
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError1UpgradedInstanceLaunchFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError2VolumeDetachchmentFromUpgradedInstanceFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError3VolumeAttachmentToOriginalInstanceFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError4DataUpgradeInitiationFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError5DataUpgradeCompletionFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError6VolumeDetachchmentFromOriginalInstanceFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError7VolumeAttachmentToUpgradedInstanceFailed,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError8UpgradeCompletionFailed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) MarshalText() ([]byte, error) {
	switch s {
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError1UpgradedInstanceLaunchFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError2VolumeDetachchmentFromUpgradedInstanceFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError3VolumeAttachmentToOriginalInstanceFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError4DataUpgradeInitiationFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError5DataUpgradeCompletionFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError6VolumeDetachchmentFromOriginalInstanceFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError7VolumeAttachmentToUpgradedInstanceFailed:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError8UpgradeCompletionFailed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) UnmarshalText(data []byte) error {
	switch DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError(data) {
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError1UpgradedInstanceLaunchFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError1UpgradedInstanceLaunchFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError2VolumeDetachchmentFromUpgradedInstanceFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError2VolumeDetachchmentFromUpgradedInstanceFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError3VolumeAttachmentToOriginalInstanceFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError3VolumeAttachmentToOriginalInstanceFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError4DataUpgradeInitiationFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError4DataUpgradeInitiationFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError5DataUpgradeCompletionFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError5DataUpgradeCompletionFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError6VolumeDetachchmentFromOriginalInstanceFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError6VolumeDetachchmentFromOriginalInstanceFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError7VolumeAttachmentToUpgradedInstanceFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError7VolumeAttachmentToUpgradedInstanceFailed
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError8UpgradeCompletionFailed:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError8UpgradeCompletionFailed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress string

const (
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress0Requested                          DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "0_requested"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress1Started                            DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "1_started"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress2LaunchedUpgradedInstance           DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "2_launched_upgraded_instance"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress3DetachedVolumeFromUpgradedInstance DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "3_detached_volume_from_upgraded_instance"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress4AttachedVolumeToOriginalInstance   DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "4_attached_volume_to_original_instance"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress5InitiatedDataUpgrade               DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "5_initiated_data_upgrade"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress6CompletedDataUpgrade               DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "6_completed_data_upgrade"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress7DetachedVolumeFromOriginalInstance DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "7_detached_volume_from_original_instance"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress8AttachedVolumeToUpgradedInstance   DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "8_attached_volume_to_upgraded_instance"
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress9CompletedUpgrade                   DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress = "9_completed_upgrade"
)

// AllValues returns all DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress values.
func (DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) AllValues() []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress {
	return []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress{
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress0Requested,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress1Started,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress2LaunchedUpgradedInstance,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress3DetachedVolumeFromUpgradedInstance,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress4AttachedVolumeToOriginalInstance,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress5InitiatedDataUpgrade,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress6CompletedDataUpgrade,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress7DetachedVolumeFromOriginalInstance,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress8AttachedVolumeToUpgradedInstance,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress9CompletedUpgrade,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) MarshalText() ([]byte, error) {
	switch s {
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress0Requested:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress1Started:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress2LaunchedUpgradedInstance:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress3DetachedVolumeFromUpgradedInstance:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress4AttachedVolumeToOriginalInstance:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress5InitiatedDataUpgrade:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress6CompletedDataUpgrade:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress7DetachedVolumeFromOriginalInstance:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress8AttachedVolumeToUpgradedInstance:
		return []byte(s), nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress9CompletedUpgrade:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) UnmarshalText(data []byte) error {
	switch DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress(data) {
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress0Requested:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress0Requested
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress1Started:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress1Started
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress2LaunchedUpgradedInstance:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress2LaunchedUpgradedInstance
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress3DetachedVolumeFromUpgradedInstance:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress3DetachedVolumeFromUpgradedInstance
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress4AttachedVolumeToOriginalInstance:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress4AttachedVolumeToOriginalInstance
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress5InitiatedDataUpgrade:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress5InitiatedDataUpgrade
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress6CompletedDataUpgrade:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress6CompletedDataUpgrade
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress7DetachedVolumeFromOriginalInstance:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress7DetachedVolumeFromOriginalInstance
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress8AttachedVolumeToUpgradedInstance:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress8AttachedVolumeToUpgradedInstance
		return nil
	case DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress9CompletedUpgrade:
		*s = DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress9CompletedUpgrade
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus float64

const (
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus0 DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus = 0
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus1 DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus = 1
	DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus2 DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus = 2
)

// AllValues returns all DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus values.
func (DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus) AllValues() []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus {
	return []DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus{
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus0,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus1,
		DatabaseUpgradeStatusResponseDatabaseUpgradeStatusStatus2,
	}
}

// DeleteBranchInternalServerError is response for DeleteBranch operation.
type DeleteBranchInternalServerError struct{}

func (*DeleteBranchInternalServerError) deleteBranchRes() {}

// DeleteFunctionForbidden is response for DeleteFunction operation.
type DeleteFunctionForbidden struct{}

func (*DeleteFunctionForbidden) deleteFunctionRes() {}

// DeleteFunctionInternalServerError is response for DeleteFunction operation.
type DeleteFunctionInternalServerError struct{}

func (*DeleteFunctionInternalServerError) deleteFunctionRes() {}

// DeleteFunctionOK is response for DeleteFunction operation.
type DeleteFunctionOK struct{}

func (*DeleteFunctionOK) deleteFunctionRes() {}

// DeleteProjectForbidden is response for DeleteProject operation.
type DeleteProjectForbidden struct{}

func (*DeleteProjectForbidden) deleteProjectRes() {}

// Ref: #/components/schemas/DeleteProviderResponse
type DeleteProviderResponse struct {
	ID        string            `json:"id"`
	Saml      OptSamlDescriptor `json:"saml"`
	Domains   []Domain          `json:"domains"`
	CreatedAt OptString         `json:"created_at"`
	UpdatedAt OptString         `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *DeleteProviderResponse) GetID() string {
	return s.ID
}

// GetSaml returns the value of Saml.
func (s *DeleteProviderResponse) GetSaml() OptSamlDescriptor {
	return s.Saml
}

// GetDomains returns the value of Domains.
func (s *DeleteProviderResponse) GetDomains() []Domain {
	return s.Domains
}

// GetCreatedAt returns the value of CreatedAt.
func (s *DeleteProviderResponse) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *DeleteProviderResponse) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *DeleteProviderResponse) SetID(val string) {
	s.ID = val
}

// SetSaml sets the value of Saml.
func (s *DeleteProviderResponse) SetSaml(val OptSamlDescriptor) {
	s.Saml = val
}

// SetDomains sets the value of Domains.
func (s *DeleteProviderResponse) SetDomains(val []Domain) {
	s.Domains = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *DeleteProviderResponse) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *DeleteProviderResponse) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

func (*DeleteProviderResponse) removeProviderByIdRes() {}

// DeleteSecretsForbidden is response for DeleteSecrets operation.
type DeleteSecretsForbidden struct{}

func (*DeleteSecretsForbidden) deleteSecretsRes() {}

// DeleteSecretsInternalServerError is response for DeleteSecrets operation.
type DeleteSecretsInternalServerError struct{}

func (*DeleteSecretsInternalServerError) deleteSecretsRes() {}

type DeleteSecretsOK struct{}

func (*DeleteSecretsOK) deleteSecretsRes() {}

// DeleteTPAForProjectForbidden is response for DeleteTPAForProject operation.
type DeleteTPAForProjectForbidden struct{}

func (*DeleteTPAForProjectForbidden) deleteTPAForProjectRes() {}

// Ref: #/components/schemas/DesiredInstanceSize
type DesiredInstanceSize string

const (
	DesiredInstanceSizeMicro    DesiredInstanceSize = "micro"
	DesiredInstanceSizeSmall    DesiredInstanceSize = "small"
	DesiredInstanceSizeMedium   DesiredInstanceSize = "medium"
	DesiredInstanceSizeLarge    DesiredInstanceSize = "large"
	DesiredInstanceSizeXlarge   DesiredInstanceSize = "xlarge"
	DesiredInstanceSize2xlarge  DesiredInstanceSize = "2xlarge"
	DesiredInstanceSize4xlarge  DesiredInstanceSize = "4xlarge"
	DesiredInstanceSize8xlarge  DesiredInstanceSize = "8xlarge"
	DesiredInstanceSize12xlarge DesiredInstanceSize = "12xlarge"
	DesiredInstanceSize16xlarge DesiredInstanceSize = "16xlarge"
)

// AllValues returns all DesiredInstanceSize values.
func (DesiredInstanceSize) AllValues() []DesiredInstanceSize {
	return []DesiredInstanceSize{
		DesiredInstanceSizeMicro,
		DesiredInstanceSizeSmall,
		DesiredInstanceSizeMedium,
		DesiredInstanceSizeLarge,
		DesiredInstanceSizeXlarge,
		DesiredInstanceSize2xlarge,
		DesiredInstanceSize4xlarge,
		DesiredInstanceSize8xlarge,
		DesiredInstanceSize12xlarge,
		DesiredInstanceSize16xlarge,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DesiredInstanceSize) MarshalText() ([]byte, error) {
	switch s {
	case DesiredInstanceSizeMicro:
		return []byte(s), nil
	case DesiredInstanceSizeSmall:
		return []byte(s), nil
	case DesiredInstanceSizeMedium:
		return []byte(s), nil
	case DesiredInstanceSizeLarge:
		return []byte(s), nil
	case DesiredInstanceSizeXlarge:
		return []byte(s), nil
	case DesiredInstanceSize2xlarge:
		return []byte(s), nil
	case DesiredInstanceSize4xlarge:
		return []byte(s), nil
	case DesiredInstanceSize8xlarge:
		return []byte(s), nil
	case DesiredInstanceSize12xlarge:
		return []byte(s), nil
	case DesiredInstanceSize16xlarge:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DesiredInstanceSize) UnmarshalText(data []byte) error {
	switch DesiredInstanceSize(data) {
	case DesiredInstanceSizeMicro:
		*s = DesiredInstanceSizeMicro
		return nil
	case DesiredInstanceSizeSmall:
		*s = DesiredInstanceSizeSmall
		return nil
	case DesiredInstanceSizeMedium:
		*s = DesiredInstanceSizeMedium
		return nil
	case DesiredInstanceSizeLarge:
		*s = DesiredInstanceSizeLarge
		return nil
	case DesiredInstanceSizeXlarge:
		*s = DesiredInstanceSizeXlarge
		return nil
	case DesiredInstanceSize2xlarge:
		*s = DesiredInstanceSize2xlarge
		return nil
	case DesiredInstanceSize4xlarge:
		*s = DesiredInstanceSize4xlarge
		return nil
	case DesiredInstanceSize8xlarge:
		*s = DesiredInstanceSize8xlarge
		return nil
	case DesiredInstanceSize12xlarge:
		*s = DesiredInstanceSize12xlarge
		return nil
	case DesiredInstanceSize16xlarge:
		*s = DesiredInstanceSize16xlarge
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DisableBranchInternalServerError is response for DisableBranch operation.
type DisableBranchInternalServerError struct{}

func (*DisableBranchInternalServerError) disableBranchRes() {}

// DisableBranchOK is response for DisableBranch operation.
type DisableBranchOK struct{}

func (*DisableBranchOK) disableBranchRes() {}

// Ref: #/components/schemas/Domain
type Domain struct {
	ID        string    `json:"id"`
	Domain    OptString `json:"domain"`
	CreatedAt OptString `json:"created_at"`
	UpdatedAt OptString `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Domain) GetID() string {
	return s.ID
}

// GetDomain returns the value of Domain.
func (s *Domain) GetDomain() OptString {
	return s.Domain
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Domain) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Domain) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Domain) SetID(val string) {
	s.ID = val
}

// SetDomain sets the value of Domain.
func (s *Domain) SetDomain(val OptString) {
	s.Domain = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Domain) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Domain) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/FunctionResponse
type FunctionResponse struct {
	ID             string                 `json:"id"`
	Slug           string                 `json:"slug"`
	Name           string                 `json:"name"`
	Status         FunctionResponseStatus `json:"status"`
	Version        float64                `json:"version"`
	CreatedAt      float64                `json:"created_at"`
	UpdatedAt      float64                `json:"updated_at"`
	VerifyJwt      OptBool                `json:"verify_jwt"`
	ImportMap      OptBool                `json:"import_map"`
	EntrypointPath OptString              `json:"entrypoint_path"`
	ImportMapPath  OptString              `json:"import_map_path"`
}

// GetID returns the value of ID.
func (s *FunctionResponse) GetID() string {
	return s.ID
}

// GetSlug returns the value of Slug.
func (s *FunctionResponse) GetSlug() string {
	return s.Slug
}

// GetName returns the value of Name.
func (s *FunctionResponse) GetName() string {
	return s.Name
}

// GetStatus returns the value of Status.
func (s *FunctionResponse) GetStatus() FunctionResponseStatus {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *FunctionResponse) GetVersion() float64 {
	return s.Version
}

// GetCreatedAt returns the value of CreatedAt.
func (s *FunctionResponse) GetCreatedAt() float64 {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *FunctionResponse) GetUpdatedAt() float64 {
	return s.UpdatedAt
}

// GetVerifyJwt returns the value of VerifyJwt.
func (s *FunctionResponse) GetVerifyJwt() OptBool {
	return s.VerifyJwt
}

// GetImportMap returns the value of ImportMap.
func (s *FunctionResponse) GetImportMap() OptBool {
	return s.ImportMap
}

// GetEntrypointPath returns the value of EntrypointPath.
func (s *FunctionResponse) GetEntrypointPath() OptString {
	return s.EntrypointPath
}

// GetImportMapPath returns the value of ImportMapPath.
func (s *FunctionResponse) GetImportMapPath() OptString {
	return s.ImportMapPath
}

// SetID sets the value of ID.
func (s *FunctionResponse) SetID(val string) {
	s.ID = val
}

// SetSlug sets the value of Slug.
func (s *FunctionResponse) SetSlug(val string) {
	s.Slug = val
}

// SetName sets the value of Name.
func (s *FunctionResponse) SetName(val string) {
	s.Name = val
}

// SetStatus sets the value of Status.
func (s *FunctionResponse) SetStatus(val FunctionResponseStatus) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *FunctionResponse) SetVersion(val float64) {
	s.Version = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *FunctionResponse) SetCreatedAt(val float64) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *FunctionResponse) SetUpdatedAt(val float64) {
	s.UpdatedAt = val
}

// SetVerifyJwt sets the value of VerifyJwt.
func (s *FunctionResponse) SetVerifyJwt(val OptBool) {
	s.VerifyJwt = val
}

// SetImportMap sets the value of ImportMap.
func (s *FunctionResponse) SetImportMap(val OptBool) {
	s.ImportMap = val
}

// SetEntrypointPath sets the value of EntrypointPath.
func (s *FunctionResponse) SetEntrypointPath(val OptString) {
	s.EntrypointPath = val
}

// SetImportMapPath sets the value of ImportMapPath.
func (s *FunctionResponse) SetImportMapPath(val OptString) {
	s.ImportMapPath = val
}

func (*FunctionResponse) createFunctionRes() {}
func (*FunctionResponse) updateFunctionRes() {}

type FunctionResponseStatus string

const (
	FunctionResponseStatusACTIVE    FunctionResponseStatus = "ACTIVE"
	FunctionResponseStatusREMOVED   FunctionResponseStatus = "REMOVED"
	FunctionResponseStatusTHROTTLED FunctionResponseStatus = "THROTTLED"
)

// AllValues returns all FunctionResponseStatus values.
func (FunctionResponseStatus) AllValues() []FunctionResponseStatus {
	return []FunctionResponseStatus{
		FunctionResponseStatusACTIVE,
		FunctionResponseStatusREMOVED,
		FunctionResponseStatusTHROTTLED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s FunctionResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case FunctionResponseStatusACTIVE:
		return []byte(s), nil
	case FunctionResponseStatusREMOVED:
		return []byte(s), nil
	case FunctionResponseStatusTHROTTLED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *FunctionResponseStatus) UnmarshalText(data []byte) error {
	switch FunctionResponseStatus(data) {
	case FunctionResponseStatusACTIVE:
		*s = FunctionResponseStatusACTIVE
		return nil
	case FunctionResponseStatusREMOVED:
		*s = FunctionResponseStatusREMOVED
		return nil
	case FunctionResponseStatusTHROTTLED:
		*s = FunctionResponseStatusTHROTTLED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/FunctionSlugResponse
type FunctionSlugResponse struct {
	ID             string                     `json:"id"`
	Slug           string                     `json:"slug"`
	Name           string                     `json:"name"`
	Status         FunctionSlugResponseStatus `json:"status"`
	Version        float64                    `json:"version"`
	CreatedAt      float64                    `json:"created_at"`
	UpdatedAt      float64                    `json:"updated_at"`
	VerifyJwt      OptBool                    `json:"verify_jwt"`
	ImportMap      OptBool                    `json:"import_map"`
	EntrypointPath OptString                  `json:"entrypoint_path"`
	ImportMapPath  OptString                  `json:"import_map_path"`
}

// GetID returns the value of ID.
func (s *FunctionSlugResponse) GetID() string {
	return s.ID
}

// GetSlug returns the value of Slug.
func (s *FunctionSlugResponse) GetSlug() string {
	return s.Slug
}

// GetName returns the value of Name.
func (s *FunctionSlugResponse) GetName() string {
	return s.Name
}

// GetStatus returns the value of Status.
func (s *FunctionSlugResponse) GetStatus() FunctionSlugResponseStatus {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *FunctionSlugResponse) GetVersion() float64 {
	return s.Version
}

// GetCreatedAt returns the value of CreatedAt.
func (s *FunctionSlugResponse) GetCreatedAt() float64 {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *FunctionSlugResponse) GetUpdatedAt() float64 {
	return s.UpdatedAt
}

// GetVerifyJwt returns the value of VerifyJwt.
func (s *FunctionSlugResponse) GetVerifyJwt() OptBool {
	return s.VerifyJwt
}

// GetImportMap returns the value of ImportMap.
func (s *FunctionSlugResponse) GetImportMap() OptBool {
	return s.ImportMap
}

// GetEntrypointPath returns the value of EntrypointPath.
func (s *FunctionSlugResponse) GetEntrypointPath() OptString {
	return s.EntrypointPath
}

// GetImportMapPath returns the value of ImportMapPath.
func (s *FunctionSlugResponse) GetImportMapPath() OptString {
	return s.ImportMapPath
}

// SetID sets the value of ID.
func (s *FunctionSlugResponse) SetID(val string) {
	s.ID = val
}

// SetSlug sets the value of Slug.
func (s *FunctionSlugResponse) SetSlug(val string) {
	s.Slug = val
}

// SetName sets the value of Name.
func (s *FunctionSlugResponse) SetName(val string) {
	s.Name = val
}

// SetStatus sets the value of Status.
func (s *FunctionSlugResponse) SetStatus(val FunctionSlugResponseStatus) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *FunctionSlugResponse) SetVersion(val float64) {
	s.Version = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *FunctionSlugResponse) SetCreatedAt(val float64) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *FunctionSlugResponse) SetUpdatedAt(val float64) {
	s.UpdatedAt = val
}

// SetVerifyJwt sets the value of VerifyJwt.
func (s *FunctionSlugResponse) SetVerifyJwt(val OptBool) {
	s.VerifyJwt = val
}

// SetImportMap sets the value of ImportMap.
func (s *FunctionSlugResponse) SetImportMap(val OptBool) {
	s.ImportMap = val
}

// SetEntrypointPath sets the value of EntrypointPath.
func (s *FunctionSlugResponse) SetEntrypointPath(val OptString) {
	s.EntrypointPath = val
}

// SetImportMapPath sets the value of ImportMapPath.
func (s *FunctionSlugResponse) SetImportMapPath(val OptString) {
	s.ImportMapPath = val
}

func (*FunctionSlugResponse) getFunctionRes() {}

type FunctionSlugResponseStatus string

const (
	FunctionSlugResponseStatusACTIVE    FunctionSlugResponseStatus = "ACTIVE"
	FunctionSlugResponseStatusREMOVED   FunctionSlugResponseStatus = "REMOVED"
	FunctionSlugResponseStatusTHROTTLED FunctionSlugResponseStatus = "THROTTLED"
)

// AllValues returns all FunctionSlugResponseStatus values.
func (FunctionSlugResponseStatus) AllValues() []FunctionSlugResponseStatus {
	return []FunctionSlugResponseStatus{
		FunctionSlugResponseStatusACTIVE,
		FunctionSlugResponseStatusREMOVED,
		FunctionSlugResponseStatusTHROTTLED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s FunctionSlugResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case FunctionSlugResponseStatusACTIVE:
		return []byte(s), nil
	case FunctionSlugResponseStatusREMOVED:
		return []byte(s), nil
	case FunctionSlugResponseStatusTHROTTLED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *FunctionSlugResponseStatus) UnmarshalText(data []byte) error {
	switch FunctionSlugResponseStatus(data) {
	case FunctionSlugResponseStatusACTIVE:
		*s = FunctionSlugResponseStatusACTIVE
		return nil
	case FunctionSlugResponseStatusREMOVED:
		*s = FunctionSlugResponseStatusREMOVED
		return nil
	case FunctionSlugResponseStatusTHROTTLED:
		*s = FunctionSlugResponseStatusTHROTTLED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GetBackupsInternalServerError is response for GetBackups operation.
type GetBackupsInternalServerError struct{}

func (*GetBackupsInternalServerError) getBackupsRes() {}

// GetBranchDetailsInternalServerError is response for GetBranchDetails operation.
type GetBranchDetailsInternalServerError struct{}

func (*GetBranchDetailsInternalServerError) getBranchDetailsRes() {}

// GetBranchesInternalServerError is response for GetBranches operation.
type GetBranchesInternalServerError struct{}

func (*GetBranchesInternalServerError) getBranchesRes() {}

type GetBranchesOKApplicationJSON []BranchResponse

func (*GetBranchesOKApplicationJSON) getBranchesRes() {}

// GetBucketsForbidden is response for GetBuckets operation.
type GetBucketsForbidden struct{}

func (*GetBucketsForbidden) getBucketsRes() {}

// GetBucketsInternalServerError is response for GetBuckets operation.
type GetBucketsInternalServerError struct{}

func (*GetBucketsInternalServerError) getBucketsRes() {}

type GetBucketsOKApplicationJSON []V1StorageBucketResponse

func (*GetBucketsOKApplicationJSON) getBucketsRes() {}

// GetConfigInternalServerError is response for GetConfig operation.
type GetConfigInternalServerError struct{}

func (*GetConfigInternalServerError) getConfigRes() {}

// GetCustomHostnameConfigForbidden is response for GetCustomHostnameConfig operation.
type GetCustomHostnameConfigForbidden struct{}

func (*GetCustomHostnameConfigForbidden) getCustomHostnameConfigRes() {}

// GetCustomHostnameConfigInternalServerError is response for GetCustomHostnameConfig operation.
type GetCustomHostnameConfigInternalServerError struct{}

func (*GetCustomHostnameConfigInternalServerError) getCustomHostnameConfigRes() {}

// GetFunctionBodyForbidden is response for GetFunctionBody operation.
type GetFunctionBodyForbidden struct{}

func (*GetFunctionBodyForbidden) getFunctionBodyRes() {}

// GetFunctionBodyInternalServerError is response for GetFunctionBody operation.
type GetFunctionBodyInternalServerError struct{}

func (*GetFunctionBodyInternalServerError) getFunctionBodyRes() {}

// GetFunctionBodyOK is response for GetFunctionBody operation.
type GetFunctionBodyOK struct{}

func (*GetFunctionBodyOK) getFunctionBodyRes() {}

// GetFunctionForbidden is response for GetFunction operation.
type GetFunctionForbidden struct{}

func (*GetFunctionForbidden) getFunctionRes() {}

// GetFunctionInternalServerError is response for GetFunction operation.
type GetFunctionInternalServerError struct{}

func (*GetFunctionInternalServerError) getFunctionRes() {}

// GetFunctionsForbidden is response for GetFunctions operation.
type GetFunctionsForbidden struct{}

func (*GetFunctionsForbidden) getFunctionsRes() {}

// GetFunctionsInternalServerError is response for GetFunctions operation.
type GetFunctionsInternalServerError struct{}

func (*GetFunctionsInternalServerError) getFunctionsRes() {}

type GetFunctionsOKApplicationJSON []FunctionResponse

func (*GetFunctionsOKApplicationJSON) getFunctionsRes() {}

// GetNetworkBansForbidden is response for GetNetworkBans operation.
type GetNetworkBansForbidden struct{}

func (*GetNetworkBansForbidden) getNetworkBansRes() {}

// GetNetworkBansInternalServerError is response for GetNetworkBans operation.
type GetNetworkBansInternalServerError struct{}

func (*GetNetworkBansInternalServerError) getNetworkBansRes() {}

// GetNetworkRestrictionsForbidden is response for GetNetworkRestrictions operation.
type GetNetworkRestrictionsForbidden struct{}

func (*GetNetworkRestrictionsForbidden) getNetworkRestrictionsRes() {}

// GetNetworkRestrictionsInternalServerError is response for GetNetworkRestrictions operation.
type GetNetworkRestrictionsInternalServerError struct{}

func (*GetNetworkRestrictionsInternalServerError) getNetworkRestrictionsRes() {}

// GetOrganizationsInternalServerError is response for GetOrganizations operation.
type GetOrganizationsInternalServerError struct{}

func (*GetOrganizationsInternalServerError) getOrganizationsRes() {}

type GetOrganizationsOKApplicationJSON []OrganizationResponseV1

func (*GetOrganizationsOKApplicationJSON) getOrganizationsRes() {}

// GetPgsodiumConfigForbidden is response for GetPgsodiumConfig operation.
type GetPgsodiumConfigForbidden struct{}

func (*GetPgsodiumConfigForbidden) getPgsodiumConfigRes() {}

// GetPgsodiumConfigInternalServerError is response for GetPgsodiumConfig operation.
type GetPgsodiumConfigInternalServerError struct{}

func (*GetPgsodiumConfigInternalServerError) getPgsodiumConfigRes() {}

// GetPostgRESTConfigForbidden is response for GetPostgRESTConfig operation.
type GetPostgRESTConfigForbidden struct{}

func (*GetPostgRESTConfigForbidden) getPostgRESTConfigRes() {}

// GetPostgRESTConfigInternalServerError is response for GetPostgRESTConfig operation.
type GetPostgRESTConfigInternalServerError struct{}

func (*GetPostgRESTConfigInternalServerError) getPostgRESTConfigRes() {}

// GetProjectApiKeysForbidden is response for GetProjectApiKeys operation.
type GetProjectApiKeysForbidden struct{}

func (*GetProjectApiKeysForbidden) getProjectApiKeysRes() {}

type GetProjectApiKeysOKApplicationJSON []ApiKeyResponse

func (*GetProjectApiKeysOKApplicationJSON) getProjectApiKeysRes() {}

// GetProviderByIdForbidden is response for GetProviderById operation.
type GetProviderByIdForbidden struct{}

func (*GetProviderByIdForbidden) getProviderByIdRes() {}

// GetProviderByIdNotFound is response for GetProviderById operation.
type GetProviderByIdNotFound struct{}

func (*GetProviderByIdNotFound) getProviderByIdRes() {}

// Ref: #/components/schemas/GetProviderResponse
type GetProviderResponse struct {
	ID        string            `json:"id"`
	Saml      OptSamlDescriptor `json:"saml"`
	Domains   []Domain          `json:"domains"`
	CreatedAt OptString         `json:"created_at"`
	UpdatedAt OptString         `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *GetProviderResponse) GetID() string {
	return s.ID
}

// GetSaml returns the value of Saml.
func (s *GetProviderResponse) GetSaml() OptSamlDescriptor {
	return s.Saml
}

// GetDomains returns the value of Domains.
func (s *GetProviderResponse) GetDomains() []Domain {
	return s.Domains
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetProviderResponse) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetProviderResponse) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *GetProviderResponse) SetID(val string) {
	s.ID = val
}

// SetSaml sets the value of Saml.
func (s *GetProviderResponse) SetSaml(val OptSamlDescriptor) {
	s.Saml = val
}

// SetDomains sets the value of Domains.
func (s *GetProviderResponse) SetDomains(val []Domain) {
	s.Domains = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetProviderResponse) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetProviderResponse) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

func (*GetProviderResponse) getProviderByIdRes() {}

// GetReadOnlyModeStatusInternalServerError is response for GetReadOnlyModeStatus operation.
type GetReadOnlyModeStatusInternalServerError struct{}

func (*GetReadOnlyModeStatusInternalServerError) getReadOnlyModeStatusRes() {}

// GetSecretsForbidden is response for GetSecrets operation.
type GetSecretsForbidden struct{}

func (*GetSecretsForbidden) getSecretsRes() {}

// GetSecretsInternalServerError is response for GetSecrets operation.
type GetSecretsInternalServerError struct{}

func (*GetSecretsInternalServerError) getSecretsRes() {}

type GetSecretsOKApplicationJSON []SecretResponse

func (*GetSecretsOKApplicationJSON) getSecretsRes() {}

// GetSnippetInternalServerError is response for GetSnippet operation.
type GetSnippetInternalServerError struct{}

func (*GetSnippetInternalServerError) getSnippetRes() {}

// GetSslEnforcementConfigForbidden is response for GetSslEnforcementConfig operation.
type GetSslEnforcementConfigForbidden struct{}

func (*GetSslEnforcementConfigForbidden) getSslEnforcementConfigRes() {}

// GetSslEnforcementConfigInternalServerError is response for GetSslEnforcementConfig operation.
type GetSslEnforcementConfigInternalServerError struct{}

func (*GetSslEnforcementConfigInternalServerError) getSslEnforcementConfigRes() {}

// GetTPAForProjectForbidden is response for GetTPAForProject operation.
type GetTPAForProjectForbidden struct{}

func (*GetTPAForProjectForbidden) getTPAForProjectRes() {}

// GetTypescriptTypesForbidden is response for GetTypescriptTypes operation.
type GetTypescriptTypesForbidden struct{}

func (*GetTypescriptTypesForbidden) getTypescriptTypesRes() {}

// GetTypescriptTypesInternalServerError is response for GetTypescriptTypes operation.
type GetTypescriptTypesInternalServerError struct{}

func (*GetTypescriptTypesInternalServerError) getTypescriptTypesRes() {}

// GetUpgradeStatusForbidden is response for GetUpgradeStatus operation.
type GetUpgradeStatusForbidden struct{}

func (*GetUpgradeStatusForbidden) getUpgradeStatusRes() {}

// GetUpgradeStatusInternalServerError is response for GetUpgradeStatus operation.
type GetUpgradeStatusInternalServerError struct{}

func (*GetUpgradeStatusInternalServerError) getUpgradeStatusRes() {}

// GetV1AuthConfigForbidden is response for GetV1AuthConfig operation.
type GetV1AuthConfigForbidden struct{}

func (*GetV1AuthConfigForbidden) getV1AuthConfigRes() {}

// GetV1AuthConfigInternalServerError is response for GetV1AuthConfig operation.
type GetV1AuthConfigInternalServerError struct{}

func (*GetV1AuthConfigInternalServerError) getV1AuthConfigRes() {}

// GetVanitySubdomainConfigForbidden is response for GetVanitySubdomainConfig operation.
type GetVanitySubdomainConfigForbidden struct{}

func (*GetVanitySubdomainConfigForbidden) getVanitySubdomainConfigRes() {}

// GetVanitySubdomainConfigInternalServerError is response for GetVanitySubdomainConfig operation.
type GetVanitySubdomainConfigInternalServerError struct{}

func (*GetVanitySubdomainConfigInternalServerError) getVanitySubdomainConfigRes() {}

// ListAllProvidersForbidden is response for ListAllProviders operation.
type ListAllProvidersForbidden struct{}

func (*ListAllProvidersForbidden) listAllProvidersRes() {}

// ListAllProvidersNotFound is response for ListAllProviders operation.
type ListAllProvidersNotFound struct{}

func (*ListAllProvidersNotFound) listAllProvidersRes() {}

// Ref: #/components/schemas/ListProvidersResponse
type ListProvidersResponse struct {
	Items []Provider `json:"items"`
}

// GetItems returns the value of Items.
func (s *ListProvidersResponse) GetItems() []Provider {
	return s.Items
}

// SetItems sets the value of Items.
func (s *ListProvidersResponse) SetItems(val []Provider) {
	s.Items = val
}

func (*ListProvidersResponse) listAllProvidersRes() {}

// ListSnippetsInternalServerError is response for ListSnippets operation.
type ListSnippetsInternalServerError struct{}

func (*ListSnippetsInternalServerError) listSnippetsRes() {}

// ListTPAForProjectForbidden is response for ListTPAForProject operation.
type ListTPAForProjectForbidden struct{}

func (*ListTPAForProjectForbidden) listTPAForProjectRes() {}

type ListTPAForProjectOKApplicationJSON []ThirdPartyAuth

func (*ListTPAForProjectOKApplicationJSON) listTPAForProjectRes() {}

// Ref: #/components/schemas/NetworkBanResponse
type NetworkBanResponse struct {
	BannedIpv4Addresses []string `json:"banned_ipv4_addresses"`
}

// GetBannedIpv4Addresses returns the value of BannedIpv4Addresses.
func (s *NetworkBanResponse) GetBannedIpv4Addresses() []string {
	return s.BannedIpv4Addresses
}

// SetBannedIpv4Addresses sets the value of BannedIpv4Addresses.
func (s *NetworkBanResponse) SetBannedIpv4Addresses(val []string) {
	s.BannedIpv4Addresses = val
}

func (*NetworkBanResponse) getNetworkBansRes() {}

// Ref: #/components/schemas/NetworkRestrictionsRequest
type NetworkRestrictionsRequest struct {
	DbAllowedCidrs   []string `json:"dbAllowedCidrs"`
	DbAllowedCidrsV6 []string `json:"dbAllowedCidrsV6"`
}

// GetDbAllowedCidrs returns the value of DbAllowedCidrs.
func (s *NetworkRestrictionsRequest) GetDbAllowedCidrs() []string {
	return s.DbAllowedCidrs
}

// GetDbAllowedCidrsV6 returns the value of DbAllowedCidrsV6.
func (s *NetworkRestrictionsRequest) GetDbAllowedCidrsV6() []string {
	return s.DbAllowedCidrsV6
}

// SetDbAllowedCidrs sets the value of DbAllowedCidrs.
func (s *NetworkRestrictionsRequest) SetDbAllowedCidrs(val []string) {
	s.DbAllowedCidrs = val
}

// SetDbAllowedCidrsV6 sets the value of DbAllowedCidrsV6.
func (s *NetworkRestrictionsRequest) SetDbAllowedCidrsV6(val []string) {
	s.DbAllowedCidrsV6 = val
}

// Ref: #/components/schemas/NetworkRestrictionsResponse
type NetworkRestrictionsResponse struct {
	Entitlement NetworkRestrictionsResponseEntitlement `json:"entitlement"`
	Config      NetworkRestrictionsRequest             `json:"config"`
	OldConfig   OptNetworkRestrictionsRequest          `json:"old_config"`
	Status      NetworkRestrictionsResponseStatus      `json:"status"`
}

// GetEntitlement returns the value of Entitlement.
func (s *NetworkRestrictionsResponse) GetEntitlement() NetworkRestrictionsResponseEntitlement {
	return s.Entitlement
}

// GetConfig returns the value of Config.
func (s *NetworkRestrictionsResponse) GetConfig() NetworkRestrictionsRequest {
	return s.Config
}

// GetOldConfig returns the value of OldConfig.
func (s *NetworkRestrictionsResponse) GetOldConfig() OptNetworkRestrictionsRequest {
	return s.OldConfig
}

// GetStatus returns the value of Status.
func (s *NetworkRestrictionsResponse) GetStatus() NetworkRestrictionsResponseStatus {
	return s.Status
}

// SetEntitlement sets the value of Entitlement.
func (s *NetworkRestrictionsResponse) SetEntitlement(val NetworkRestrictionsResponseEntitlement) {
	s.Entitlement = val
}

// SetConfig sets the value of Config.
func (s *NetworkRestrictionsResponse) SetConfig(val NetworkRestrictionsRequest) {
	s.Config = val
}

// SetOldConfig sets the value of OldConfig.
func (s *NetworkRestrictionsResponse) SetOldConfig(val OptNetworkRestrictionsRequest) {
	s.OldConfig = val
}

// SetStatus sets the value of Status.
func (s *NetworkRestrictionsResponse) SetStatus(val NetworkRestrictionsResponseStatus) {
	s.Status = val
}

func (*NetworkRestrictionsResponse) applyNetworkRestrictionsRes() {}
func (*NetworkRestrictionsResponse) getNetworkRestrictionsRes()   {}

type NetworkRestrictionsResponseEntitlement string

const (
	NetworkRestrictionsResponseEntitlementDisallowed NetworkRestrictionsResponseEntitlement = "disallowed"
	NetworkRestrictionsResponseEntitlementAllowed    NetworkRestrictionsResponseEntitlement = "allowed"
)

// AllValues returns all NetworkRestrictionsResponseEntitlement values.
func (NetworkRestrictionsResponseEntitlement) AllValues() []NetworkRestrictionsResponseEntitlement {
	return []NetworkRestrictionsResponseEntitlement{
		NetworkRestrictionsResponseEntitlementDisallowed,
		NetworkRestrictionsResponseEntitlementAllowed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s NetworkRestrictionsResponseEntitlement) MarshalText() ([]byte, error) {
	switch s {
	case NetworkRestrictionsResponseEntitlementDisallowed:
		return []byte(s), nil
	case NetworkRestrictionsResponseEntitlementAllowed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *NetworkRestrictionsResponseEntitlement) UnmarshalText(data []byte) error {
	switch NetworkRestrictionsResponseEntitlement(data) {
	case NetworkRestrictionsResponseEntitlementDisallowed:
		*s = NetworkRestrictionsResponseEntitlementDisallowed
		return nil
	case NetworkRestrictionsResponseEntitlementAllowed:
		*s = NetworkRestrictionsResponseEntitlementAllowed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type NetworkRestrictionsResponseStatus string

const (
	NetworkRestrictionsResponseStatusStored  NetworkRestrictionsResponseStatus = "stored"
	NetworkRestrictionsResponseStatusApplied NetworkRestrictionsResponseStatus = "applied"
)

// AllValues returns all NetworkRestrictionsResponseStatus values.
func (NetworkRestrictionsResponseStatus) AllValues() []NetworkRestrictionsResponseStatus {
	return []NetworkRestrictionsResponseStatus{
		NetworkRestrictionsResponseStatusStored,
		NetworkRestrictionsResponseStatusApplied,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s NetworkRestrictionsResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case NetworkRestrictionsResponseStatusStored:
		return []byte(s), nil
	case NetworkRestrictionsResponseStatusApplied:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *NetworkRestrictionsResponseStatus) UnmarshalText(data []byte) error {
	switch NetworkRestrictionsResponseStatus(data) {
	case NetworkRestrictionsResponseStatusStored:
		*s = NetworkRestrictionsResponseStatusStored
		return nil
	case NetworkRestrictionsResponseStatusApplied:
		*s = NetworkRestrictionsResponseStatusApplied
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewNilBool returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is nullable bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilBool) SetToNull() {
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus returns new NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus with value set to v.
func NewNilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus {
	return NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus{
		Value: v,
	}
}

// NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus is nullable DatabaseUpgradeStatusResponseDatabaseUpgradeStatus.
type NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus struct {
	Value DatabaseUpgradeStatusResponseDatabaseUpgradeStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetTo(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) SetToNull() {
	o.Null = true
	var v DatabaseUpgradeStatusResponseDatabaseUpgradeStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) Get() (v DatabaseUpgradeStatusResponseDatabaseUpgradeStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDatabaseUpgradeStatusResponseDatabaseUpgradeStatus) Or(d DatabaseUpgradeStatusResponseDatabaseUpgradeStatus) DatabaseUpgradeStatusResponseDatabaseUpgradeStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilInt) SetToNull() {
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OAuthTokenBody
type OAuthTokenBody struct {
	GrantType    OAuthTokenBodyGrantType `json:"grant_type"`
	ClientID     string                  `json:"client_id"`
	ClientSecret string                  `json:"client_secret"`
	Code         OptString               `json:"code"`
	CodeVerifier OptString               `json:"code_verifier"`
	RedirectURI  OptString               `json:"redirect_uri"`
	RefreshToken OptString               `json:"refresh_token"`
}

// GetGrantType returns the value of GrantType.
func (s *OAuthTokenBody) GetGrantType() OAuthTokenBodyGrantType {
	return s.GrantType
}

// GetClientID returns the value of ClientID.
func (s *OAuthTokenBody) GetClientID() string {
	return s.ClientID
}

// GetClientSecret returns the value of ClientSecret.
func (s *OAuthTokenBody) GetClientSecret() string {
	return s.ClientSecret
}

// GetCode returns the value of Code.
func (s *OAuthTokenBody) GetCode() OptString {
	return s.Code
}

// GetCodeVerifier returns the value of CodeVerifier.
func (s *OAuthTokenBody) GetCodeVerifier() OptString {
	return s.CodeVerifier
}

// GetRedirectURI returns the value of RedirectURI.
func (s *OAuthTokenBody) GetRedirectURI() OptString {
	return s.RedirectURI
}

// GetRefreshToken returns the value of RefreshToken.
func (s *OAuthTokenBody) GetRefreshToken() OptString {
	return s.RefreshToken
}

// SetGrantType sets the value of GrantType.
func (s *OAuthTokenBody) SetGrantType(val OAuthTokenBodyGrantType) {
	s.GrantType = val
}

// SetClientID sets the value of ClientID.
func (s *OAuthTokenBody) SetClientID(val string) {
	s.ClientID = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *OAuthTokenBody) SetClientSecret(val string) {
	s.ClientSecret = val
}

// SetCode sets the value of Code.
func (s *OAuthTokenBody) SetCode(val OptString) {
	s.Code = val
}

// SetCodeVerifier sets the value of CodeVerifier.
func (s *OAuthTokenBody) SetCodeVerifier(val OptString) {
	s.CodeVerifier = val
}

// SetRedirectURI sets the value of RedirectURI.
func (s *OAuthTokenBody) SetRedirectURI(val OptString) {
	s.RedirectURI = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *OAuthTokenBody) SetRefreshToken(val OptString) {
	s.RefreshToken = val
}

type OAuthTokenBodyGrantType string

const (
	OAuthTokenBodyGrantTypeAuthorizationCode OAuthTokenBodyGrantType = "authorization_code"
	OAuthTokenBodyGrantTypeRefreshToken      OAuthTokenBodyGrantType = "refresh_token"
)

// AllValues returns all OAuthTokenBodyGrantType values.
func (OAuthTokenBodyGrantType) AllValues() []OAuthTokenBodyGrantType {
	return []OAuthTokenBodyGrantType{
		OAuthTokenBodyGrantTypeAuthorizationCode,
		OAuthTokenBodyGrantTypeRefreshToken,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OAuthTokenBodyGrantType) MarshalText() ([]byte, error) {
	switch s {
	case OAuthTokenBodyGrantTypeAuthorizationCode:
		return []byte(s), nil
	case OAuthTokenBodyGrantTypeRefreshToken:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OAuthTokenBodyGrantType) UnmarshalText(data []byte) error {
	switch OAuthTokenBodyGrantType(data) {
	case OAuthTokenBodyGrantTypeAuthorizationCode:
		*s = OAuthTokenBodyGrantTypeAuthorizationCode
		return nil
	case OAuthTokenBodyGrantTypeRefreshToken:
		*s = OAuthTokenBodyGrantTypeRefreshToken
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OAuthTokenResponse
type OAuthTokenResponse struct {
	TokenType    OAuthTokenResponseTokenType `json:"token_type"`
	AccessToken  string                      `json:"access_token"`
	RefreshToken string                      `json:"refresh_token"`
	ExpiresIn    float64                     `json:"expires_in"`
}

// GetTokenType returns the value of TokenType.
func (s *OAuthTokenResponse) GetTokenType() OAuthTokenResponseTokenType {
	return s.TokenType
}

// GetAccessToken returns the value of AccessToken.
func (s *OAuthTokenResponse) GetAccessToken() string {
	return s.AccessToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *OAuthTokenResponse) GetRefreshToken() string {
	return s.RefreshToken
}

// GetExpiresIn returns the value of ExpiresIn.
func (s *OAuthTokenResponse) GetExpiresIn() float64 {
	return s.ExpiresIn
}

// SetTokenType sets the value of TokenType.
func (s *OAuthTokenResponse) SetTokenType(val OAuthTokenResponseTokenType) {
	s.TokenType = val
}

// SetAccessToken sets the value of AccessToken.
func (s *OAuthTokenResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *OAuthTokenResponse) SetRefreshToken(val string) {
	s.RefreshToken = val
}

// SetExpiresIn sets the value of ExpiresIn.
func (s *OAuthTokenResponse) SetExpiresIn(val float64) {
	s.ExpiresIn = val
}

type OAuthTokenResponseTokenType string

const (
	OAuthTokenResponseTokenTypeBearer OAuthTokenResponseTokenType = "Bearer"
)

// AllValues returns all OAuthTokenResponseTokenType values.
func (OAuthTokenResponseTokenType) AllValues() []OAuthTokenResponseTokenType {
	return []OAuthTokenResponseTokenType{
		OAuthTokenResponseTokenTypeBearer,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OAuthTokenResponseTokenType) MarshalText() ([]byte, error) {
	switch s {
	case OAuthTokenResponseTokenTypeBearer:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OAuthTokenResponseTokenType) UnmarshalText(data []byte) error {
	switch OAuthTokenResponseTokenType(data) {
	case OAuthTokenResponseTokenTypeBearer:
		*s = OAuthTokenResponseTokenTypeBearer
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAttributeMapping returns new OptAttributeMapping with value set to v.
func NewOptAttributeMapping(v AttributeMapping) OptAttributeMapping {
	return OptAttributeMapping{
		Value: v,
		Set:   true,
	}
}

// OptAttributeMapping is optional AttributeMapping.
type OptAttributeMapping struct {
	Value AttributeMapping
	Set   bool
}

// IsSet returns true if OptAttributeMapping was set.
func (o OptAttributeMapping) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAttributeMapping) Reset() {
	var v AttributeMapping
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAttributeMapping) SetTo(v AttributeMapping) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAttributeMapping) Get() (v AttributeMapping, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAttributeMapping) Or(d AttributeMapping) AttributeMapping {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAttributeValueDefault returns new OptAttributeValueDefault with value set to v.
func NewOptAttributeValueDefault(v AttributeValueDefault) OptAttributeValueDefault {
	return OptAttributeValueDefault{
		Value: v,
		Set:   true,
	}
}

// OptAttributeValueDefault is optional AttributeValueDefault.
type OptAttributeValueDefault struct {
	Value AttributeValueDefault
	Set   bool
}

// IsSet returns true if OptAttributeValueDefault was set.
func (o OptAttributeValueDefault) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAttributeValueDefault) Reset() {
	var v AttributeValueDefault
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAttributeValueDefault) SetTo(v AttributeValueDefault) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAttributeValueDefault) Get() (v AttributeValueDefault, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAttributeValueDefault) Or(d AttributeValueDefault) AttributeValueDefault {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAuthorizeCodeChallengeMethod returns new OptAuthorizeCodeChallengeMethod with value set to v.
func NewOptAuthorizeCodeChallengeMethod(v AuthorizeCodeChallengeMethod) OptAuthorizeCodeChallengeMethod {
	return OptAuthorizeCodeChallengeMethod{
		Value: v,
		Set:   true,
	}
}

// OptAuthorizeCodeChallengeMethod is optional AuthorizeCodeChallengeMethod.
type OptAuthorizeCodeChallengeMethod struct {
	Value AuthorizeCodeChallengeMethod
	Set   bool
}

// IsSet returns true if OptAuthorizeCodeChallengeMethod was set.
func (o OptAuthorizeCodeChallengeMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthorizeCodeChallengeMethod) Reset() {
	var v AuthorizeCodeChallengeMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthorizeCodeChallengeMethod) SetTo(v AuthorizeCodeChallengeMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthorizeCodeChallengeMethod) Get() (v AuthorizeCodeChallengeMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAuthorizeCodeChallengeMethod) Or(d AuthorizeCodeChallengeMethod) AuthorizeCodeChallengeMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBillingPlanId returns new OptBillingPlanId with value set to v.
func NewOptBillingPlanId(v BillingPlanId) OptBillingPlanId {
	return OptBillingPlanId{
		Value: v,
		Set:   true,
	}
}

// OptBillingPlanId is optional BillingPlanId.
type OptBillingPlanId struct {
	Value BillingPlanId
	Set   bool
}

// IsSet returns true if OptBillingPlanId was set.
func (o OptBillingPlanId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBillingPlanId) Reset() {
	var v BillingPlanId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBillingPlanId) SetTo(v BillingPlanId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBillingPlanId) Get() (v BillingPlanId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBillingPlanId) Or(d BillingPlanId) BillingPlanId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError returns new OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError with value set to v.
func NewOptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError {
	return OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError{
		Value: v,
		Set:   true,
	}
}

// OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError is optional DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError.
type OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError struct {
	Value DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError
	Set   bool
}

// IsSet returns true if OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError was set.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) Reset() {
	var v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) SetTo(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) Get() (v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) Or(d DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError) DatabaseUpgradeStatusResponseDatabaseUpgradeStatusError {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress returns new OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress with value set to v.
func NewOptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress {
	return OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress{
		Value: v,
		Set:   true,
	}
}

// OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress is optional DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress.
type OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress struct {
	Value DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress
	Set   bool
}

// IsSet returns true if OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress was set.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) Reset() {
	var v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) SetTo(v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) Get() (v DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) Or(d DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress) DatabaseUpgradeStatusResponseDatabaseUpgradeStatusProgress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDesiredInstanceSize returns new OptDesiredInstanceSize with value set to v.
func NewOptDesiredInstanceSize(v DesiredInstanceSize) OptDesiredInstanceSize {
	return OptDesiredInstanceSize{
		Value: v,
		Set:   true,
	}
}

// OptDesiredInstanceSize is optional DesiredInstanceSize.
type OptDesiredInstanceSize struct {
	Value DesiredInstanceSize
	Set   bool
}

// IsSet returns true if OptDesiredInstanceSize was set.
func (o OptDesiredInstanceSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDesiredInstanceSize) Reset() {
	var v DesiredInstanceSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDesiredInstanceSize) SetTo(v DesiredInstanceSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDesiredInstanceSize) Get() (v DesiredInstanceSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDesiredInstanceSize) Or(d DesiredInstanceSize) DesiredInstanceSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNetworkRestrictionsRequest returns new OptNetworkRestrictionsRequest with value set to v.
func NewOptNetworkRestrictionsRequest(v NetworkRestrictionsRequest) OptNetworkRestrictionsRequest {
	return OptNetworkRestrictionsRequest{
		Value: v,
		Set:   true,
	}
}

// OptNetworkRestrictionsRequest is optional NetworkRestrictionsRequest.
type OptNetworkRestrictionsRequest struct {
	Value NetworkRestrictionsRequest
	Set   bool
}

// IsSet returns true if OptNetworkRestrictionsRequest was set.
func (o OptNetworkRestrictionsRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNetworkRestrictionsRequest) Reset() {
	var v NetworkRestrictionsRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNetworkRestrictionsRequest) SetTo(v NetworkRestrictionsRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNetworkRestrictionsRequest) Get() (v NetworkRestrictionsRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNetworkRestrictionsRequest) Or(d NetworkRestrictionsRequest) NetworkRestrictionsRequest {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostgresConfigResponseSessionReplicationRole returns new OptPostgresConfigResponseSessionReplicationRole with value set to v.
func NewOptPostgresConfigResponseSessionReplicationRole(v PostgresConfigResponseSessionReplicationRole) OptPostgresConfigResponseSessionReplicationRole {
	return OptPostgresConfigResponseSessionReplicationRole{
		Value: v,
		Set:   true,
	}
}

// OptPostgresConfigResponseSessionReplicationRole is optional PostgresConfigResponseSessionReplicationRole.
type OptPostgresConfigResponseSessionReplicationRole struct {
	Value PostgresConfigResponseSessionReplicationRole
	Set   bool
}

// IsSet returns true if OptPostgresConfigResponseSessionReplicationRole was set.
func (o OptPostgresConfigResponseSessionReplicationRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostgresConfigResponseSessionReplicationRole) Reset() {
	var v PostgresConfigResponseSessionReplicationRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostgresConfigResponseSessionReplicationRole) SetTo(v PostgresConfigResponseSessionReplicationRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostgresConfigResponseSessionReplicationRole) Get() (v PostgresConfigResponseSessionReplicationRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostgresConfigResponseSessionReplicationRole) Or(d PostgresConfigResponseSessionReplicationRole) PostgresConfigResponseSessionReplicationRole {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSamlDescriptor returns new OptSamlDescriptor with value set to v.
func NewOptSamlDescriptor(v SamlDescriptor) OptSamlDescriptor {
	return OptSamlDescriptor{
		Value: v,
		Set:   true,
	}
}

// OptSamlDescriptor is optional SamlDescriptor.
type OptSamlDescriptor struct {
	Value SamlDescriptor
	Set   bool
}

// IsSet returns true if OptSamlDescriptor was set.
func (o OptSamlDescriptor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSamlDescriptor) Reset() {
	var v SamlDescriptor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSamlDescriptor) SetTo(v SamlDescriptor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSamlDescriptor) Get() (v SamlDescriptor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSamlDescriptor) Or(d SamlDescriptor) SamlDescriptor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptThirdPartyAuthCustomJwks returns new OptThirdPartyAuthCustomJwks with value set to v.
func NewOptThirdPartyAuthCustomJwks(v *ThirdPartyAuthCustomJwks) OptThirdPartyAuthCustomJwks {
	return OptThirdPartyAuthCustomJwks{
		Value: v,
		Set:   true,
	}
}

// OptThirdPartyAuthCustomJwks is optional *ThirdPartyAuthCustomJwks.
type OptThirdPartyAuthCustomJwks struct {
	Value *ThirdPartyAuthCustomJwks
	Set   bool
}

// IsSet returns true if OptThirdPartyAuthCustomJwks was set.
func (o OptThirdPartyAuthCustomJwks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptThirdPartyAuthCustomJwks) Reset() {
	var v *ThirdPartyAuthCustomJwks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptThirdPartyAuthCustomJwks) SetTo(v *ThirdPartyAuthCustomJwks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptThirdPartyAuthCustomJwks) Get() (v *ThirdPartyAuthCustomJwks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptThirdPartyAuthCustomJwks) Or(d *ThirdPartyAuthCustomJwks) *ThirdPartyAuthCustomJwks {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptThirdPartyAuthResolvedJwks returns new OptThirdPartyAuthResolvedJwks with value set to v.
func NewOptThirdPartyAuthResolvedJwks(v *ThirdPartyAuthResolvedJwks) OptThirdPartyAuthResolvedJwks {
	return OptThirdPartyAuthResolvedJwks{
		Value: v,
		Set:   true,
	}
}

// OptThirdPartyAuthResolvedJwks is optional *ThirdPartyAuthResolvedJwks.
type OptThirdPartyAuthResolvedJwks struct {
	Value *ThirdPartyAuthResolvedJwks
	Set   bool
}

// IsSet returns true if OptThirdPartyAuthResolvedJwks was set.
func (o OptThirdPartyAuthResolvedJwks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptThirdPartyAuthResolvedJwks) Reset() {
	var v *ThirdPartyAuthResolvedJwks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptThirdPartyAuthResolvedJwks) SetTo(v *ThirdPartyAuthResolvedJwks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptThirdPartyAuthResolvedJwks) Get() (v *ThirdPartyAuthResolvedJwks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptThirdPartyAuthResolvedJwks) Or(d *ThirdPartyAuthResolvedJwks) *ThirdPartyAuthResolvedJwks {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAuthConfigBodyPasswordRequiredCharacters returns new OptUpdateAuthConfigBodyPasswordRequiredCharacters with value set to v.
func NewOptUpdateAuthConfigBodyPasswordRequiredCharacters(v UpdateAuthConfigBodyPasswordRequiredCharacters) OptUpdateAuthConfigBodyPasswordRequiredCharacters {
	return OptUpdateAuthConfigBodyPasswordRequiredCharacters{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAuthConfigBodyPasswordRequiredCharacters is optional UpdateAuthConfigBodyPasswordRequiredCharacters.
type OptUpdateAuthConfigBodyPasswordRequiredCharacters struct {
	Value UpdateAuthConfigBodyPasswordRequiredCharacters
	Set   bool
}

// IsSet returns true if OptUpdateAuthConfigBodyPasswordRequiredCharacters was set.
func (o OptUpdateAuthConfigBodyPasswordRequiredCharacters) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAuthConfigBodyPasswordRequiredCharacters) Reset() {
	var v UpdateAuthConfigBodyPasswordRequiredCharacters
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAuthConfigBodyPasswordRequiredCharacters) SetTo(v UpdateAuthConfigBodyPasswordRequiredCharacters) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAuthConfigBodyPasswordRequiredCharacters) Get() (v UpdateAuthConfigBodyPasswordRequiredCharacters, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAuthConfigBodyPasswordRequiredCharacters) Or(d UpdateAuthConfigBodyPasswordRequiredCharacters) UpdateAuthConfigBodyPasswordRequiredCharacters {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePostgresConfigBodySessionReplicationRole returns new OptUpdatePostgresConfigBodySessionReplicationRole with value set to v.
func NewOptUpdatePostgresConfigBodySessionReplicationRole(v UpdatePostgresConfigBodySessionReplicationRole) OptUpdatePostgresConfigBodySessionReplicationRole {
	return OptUpdatePostgresConfigBodySessionReplicationRole{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePostgresConfigBodySessionReplicationRole is optional UpdatePostgresConfigBodySessionReplicationRole.
type OptUpdatePostgresConfigBodySessionReplicationRole struct {
	Value UpdatePostgresConfigBodySessionReplicationRole
	Set   bool
}

// IsSet returns true if OptUpdatePostgresConfigBodySessionReplicationRole was set.
func (o OptUpdatePostgresConfigBodySessionReplicationRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePostgresConfigBodySessionReplicationRole) Reset() {
	var v UpdatePostgresConfigBodySessionReplicationRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePostgresConfigBodySessionReplicationRole) SetTo(v UpdatePostgresConfigBodySessionReplicationRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePostgresConfigBodySessionReplicationRole) Get() (v UpdatePostgresConfigBodySessionReplicationRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePostgresConfigBodySessionReplicationRole) Or(d UpdatePostgresConfigBodySessionReplicationRole) UpdatePostgresConfigBodySessionReplicationRole {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CreateProjectBodyPlan returns new OptV1CreateProjectBodyPlan with value set to v.
func NewOptV1CreateProjectBodyPlan(v V1CreateProjectBodyPlan) OptV1CreateProjectBodyPlan {
	return OptV1CreateProjectBodyPlan{
		Value: v,
		Set:   true,
	}
}

// OptV1CreateProjectBodyPlan is optional V1CreateProjectBodyPlan.
type OptV1CreateProjectBodyPlan struct {
	Value V1CreateProjectBodyPlan
	Set   bool
}

// IsSet returns true if OptV1CreateProjectBodyPlan was set.
func (o OptV1CreateProjectBodyPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CreateProjectBodyPlan) Reset() {
	var v V1CreateProjectBodyPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CreateProjectBodyPlan) SetTo(v V1CreateProjectBodyPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CreateProjectBodyPlan) Get() (v V1CreateProjectBodyPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CreateProjectBodyPlan) Or(d V1CreateProjectBodyPlan) V1CreateProjectBodyPlan {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1DatabaseResponse returns new OptV1DatabaseResponse with value set to v.
func NewOptV1DatabaseResponse(v V1DatabaseResponse) OptV1DatabaseResponse {
	return OptV1DatabaseResponse{
		Value: v,
		Set:   true,
	}
}

// OptV1DatabaseResponse is optional V1DatabaseResponse.
type OptV1DatabaseResponse struct {
	Value V1DatabaseResponse
	Set   bool
}

// IsSet returns true if OptV1DatabaseResponse was set.
func (o OptV1DatabaseResponse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1DatabaseResponse) Reset() {
	var v V1DatabaseResponse
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1DatabaseResponse) SetTo(v V1DatabaseResponse) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1DatabaseResponse) Get() (v V1DatabaseResponse, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1DatabaseResponse) Or(d V1DatabaseResponse) V1DatabaseResponse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1PgbouncerConfigResponsePoolMode returns new OptV1PgbouncerConfigResponsePoolMode with value set to v.
func NewOptV1PgbouncerConfigResponsePoolMode(v V1PgbouncerConfigResponsePoolMode) OptV1PgbouncerConfigResponsePoolMode {
	return OptV1PgbouncerConfigResponsePoolMode{
		Value: v,
		Set:   true,
	}
}

// OptV1PgbouncerConfigResponsePoolMode is optional V1PgbouncerConfigResponsePoolMode.
type OptV1PgbouncerConfigResponsePoolMode struct {
	Value V1PgbouncerConfigResponsePoolMode
	Set   bool
}

// IsSet returns true if OptV1PgbouncerConfigResponsePoolMode was set.
func (o OptV1PgbouncerConfigResponsePoolMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1PgbouncerConfigResponsePoolMode) Reset() {
	var v V1PgbouncerConfigResponsePoolMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1PgbouncerConfigResponsePoolMode) SetTo(v V1PgbouncerConfigResponsePoolMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1PgbouncerConfigResponsePoolMode) Get() (v V1PgbouncerConfigResponsePoolMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1PgbouncerConfigResponsePoolMode) Or(d V1PgbouncerConfigResponsePoolMode) V1PgbouncerConfigResponsePoolMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1ServiceHealthResponseInfo returns new OptV1ServiceHealthResponseInfo with value set to v.
func NewOptV1ServiceHealthResponseInfo(v V1ServiceHealthResponseInfo) OptV1ServiceHealthResponseInfo {
	return OptV1ServiceHealthResponseInfo{
		Value: v,
		Set:   true,
	}
}

// OptV1ServiceHealthResponseInfo is optional V1ServiceHealthResponseInfo.
type OptV1ServiceHealthResponseInfo struct {
	Value V1ServiceHealthResponseInfo
	Set   bool
}

// IsSet returns true if OptV1ServiceHealthResponseInfo was set.
func (o OptV1ServiceHealthResponseInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1ServiceHealthResponseInfo) Reset() {
	var v V1ServiceHealthResponseInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1ServiceHealthResponseInfo) SetTo(v V1ServiceHealthResponseInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1ServiceHealthResponseInfo) Get() (v V1ServiceHealthResponseInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1ServiceHealthResponseInfo) Or(d V1ServiceHealthResponseInfo) V1ServiceHealthResponseInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OrganizationResponseV1
type OrganizationResponseV1 struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *OrganizationResponseV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *OrganizationResponseV1) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *OrganizationResponseV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OrganizationResponseV1) SetName(val string) {
	s.Name = val
}

func (*OrganizationResponseV1) createOrganizationRes() {}

// Ref: #/components/schemas/PgsodiumConfigResponse
type PgsodiumConfigResponse struct {
	RootKey string `json:"root_key"`
}

// GetRootKey returns the value of RootKey.
func (s *PgsodiumConfigResponse) GetRootKey() string {
	return s.RootKey
}

// SetRootKey sets the value of RootKey.
func (s *PgsodiumConfigResponse) SetRootKey(val string) {
	s.RootKey = val
}

func (*PgsodiumConfigResponse) getPgsodiumConfigRes()    {}
func (*PgsodiumConfigResponse) updatePgsodiumConfigRes() {}

// Ref: #/components/schemas/PostgresConfigResponse
type PostgresConfigResponse struct {
	StatementTimeout              OptString                                       `json:"statement_timeout"`
	EffectiveCacheSize            OptString                                       `json:"effective_cache_size"`
	MaintenanceWorkMem            OptString                                       `json:"maintenance_work_mem"`
	MaxConnections                OptInt                                          `json:"max_connections"`
	MaxLocksPerTransaction        OptInt                                          `json:"max_locks_per_transaction"`
	MaxParallelMaintenanceWorkers OptInt                                          `json:"max_parallel_maintenance_workers"`
	MaxParallelWorkers            OptInt                                          `json:"max_parallel_workers"`
	MaxParallelWorkersPerGather   OptInt                                          `json:"max_parallel_workers_per_gather"`
	MaxStandbyArchiveDelay        OptString                                       `json:"max_standby_archive_delay"`
	MaxStandbyStreamingDelay      OptString                                       `json:"max_standby_streaming_delay"`
	MaxWorkerProcesses            OptInt                                          `json:"max_worker_processes"`
	SharedBuffers                 OptString                                       `json:"shared_buffers"`
	WorkMem                       OptString                                       `json:"work_mem"`
	SessionReplicationRole        OptPostgresConfigResponseSessionReplicationRole `json:"session_replication_role"`
}

// GetStatementTimeout returns the value of StatementTimeout.
func (s *PostgresConfigResponse) GetStatementTimeout() OptString {
	return s.StatementTimeout
}

// GetEffectiveCacheSize returns the value of EffectiveCacheSize.
func (s *PostgresConfigResponse) GetEffectiveCacheSize() OptString {
	return s.EffectiveCacheSize
}

// GetMaintenanceWorkMem returns the value of MaintenanceWorkMem.
func (s *PostgresConfigResponse) GetMaintenanceWorkMem() OptString {
	return s.MaintenanceWorkMem
}

// GetMaxConnections returns the value of MaxConnections.
func (s *PostgresConfigResponse) GetMaxConnections() OptInt {
	return s.MaxConnections
}

// GetMaxLocksPerTransaction returns the value of MaxLocksPerTransaction.
func (s *PostgresConfigResponse) GetMaxLocksPerTransaction() OptInt {
	return s.MaxLocksPerTransaction
}

// GetMaxParallelMaintenanceWorkers returns the value of MaxParallelMaintenanceWorkers.
func (s *PostgresConfigResponse) GetMaxParallelMaintenanceWorkers() OptInt {
	return s.MaxParallelMaintenanceWorkers
}

// GetMaxParallelWorkers returns the value of MaxParallelWorkers.
func (s *PostgresConfigResponse) GetMaxParallelWorkers() OptInt {
	return s.MaxParallelWorkers
}

// GetMaxParallelWorkersPerGather returns the value of MaxParallelWorkersPerGather.
func (s *PostgresConfigResponse) GetMaxParallelWorkersPerGather() OptInt {
	return s.MaxParallelWorkersPerGather
}

// GetMaxStandbyArchiveDelay returns the value of MaxStandbyArchiveDelay.
func (s *PostgresConfigResponse) GetMaxStandbyArchiveDelay() OptString {
	return s.MaxStandbyArchiveDelay
}

// GetMaxStandbyStreamingDelay returns the value of MaxStandbyStreamingDelay.
func (s *PostgresConfigResponse) GetMaxStandbyStreamingDelay() OptString {
	return s.MaxStandbyStreamingDelay
}

// GetMaxWorkerProcesses returns the value of MaxWorkerProcesses.
func (s *PostgresConfigResponse) GetMaxWorkerProcesses() OptInt {
	return s.MaxWorkerProcesses
}

// GetSharedBuffers returns the value of SharedBuffers.
func (s *PostgresConfigResponse) GetSharedBuffers() OptString {
	return s.SharedBuffers
}

// GetWorkMem returns the value of WorkMem.
func (s *PostgresConfigResponse) GetWorkMem() OptString {
	return s.WorkMem
}

// GetSessionReplicationRole returns the value of SessionReplicationRole.
func (s *PostgresConfigResponse) GetSessionReplicationRole() OptPostgresConfigResponseSessionReplicationRole {
	return s.SessionReplicationRole
}

// SetStatementTimeout sets the value of StatementTimeout.
func (s *PostgresConfigResponse) SetStatementTimeout(val OptString) {
	s.StatementTimeout = val
}

// SetEffectiveCacheSize sets the value of EffectiveCacheSize.
func (s *PostgresConfigResponse) SetEffectiveCacheSize(val OptString) {
	s.EffectiveCacheSize = val
}

// SetMaintenanceWorkMem sets the value of MaintenanceWorkMem.
func (s *PostgresConfigResponse) SetMaintenanceWorkMem(val OptString) {
	s.MaintenanceWorkMem = val
}

// SetMaxConnections sets the value of MaxConnections.
func (s *PostgresConfigResponse) SetMaxConnections(val OptInt) {
	s.MaxConnections = val
}

// SetMaxLocksPerTransaction sets the value of MaxLocksPerTransaction.
func (s *PostgresConfigResponse) SetMaxLocksPerTransaction(val OptInt) {
	s.MaxLocksPerTransaction = val
}

// SetMaxParallelMaintenanceWorkers sets the value of MaxParallelMaintenanceWorkers.
func (s *PostgresConfigResponse) SetMaxParallelMaintenanceWorkers(val OptInt) {
	s.MaxParallelMaintenanceWorkers = val
}

// SetMaxParallelWorkers sets the value of MaxParallelWorkers.
func (s *PostgresConfigResponse) SetMaxParallelWorkers(val OptInt) {
	s.MaxParallelWorkers = val
}

// SetMaxParallelWorkersPerGather sets the value of MaxParallelWorkersPerGather.
func (s *PostgresConfigResponse) SetMaxParallelWorkersPerGather(val OptInt) {
	s.MaxParallelWorkersPerGather = val
}

// SetMaxStandbyArchiveDelay sets the value of MaxStandbyArchiveDelay.
func (s *PostgresConfigResponse) SetMaxStandbyArchiveDelay(val OptString) {
	s.MaxStandbyArchiveDelay = val
}

// SetMaxStandbyStreamingDelay sets the value of MaxStandbyStreamingDelay.
func (s *PostgresConfigResponse) SetMaxStandbyStreamingDelay(val OptString) {
	s.MaxStandbyStreamingDelay = val
}

// SetMaxWorkerProcesses sets the value of MaxWorkerProcesses.
func (s *PostgresConfigResponse) SetMaxWorkerProcesses(val OptInt) {
	s.MaxWorkerProcesses = val
}

// SetSharedBuffers sets the value of SharedBuffers.
func (s *PostgresConfigResponse) SetSharedBuffers(val OptString) {
	s.SharedBuffers = val
}

// SetWorkMem sets the value of WorkMem.
func (s *PostgresConfigResponse) SetWorkMem(val OptString) {
	s.WorkMem = val
}

// SetSessionReplicationRole sets the value of SessionReplicationRole.
func (s *PostgresConfigResponse) SetSessionReplicationRole(val OptPostgresConfigResponseSessionReplicationRole) {
	s.SessionReplicationRole = val
}

func (*PostgresConfigResponse) getConfigRes()    {}
func (*PostgresConfigResponse) updateConfigRes() {}

type PostgresConfigResponseSessionReplicationRole string

const (
	PostgresConfigResponseSessionReplicationRoleOrigin  PostgresConfigResponseSessionReplicationRole = "origin"
	PostgresConfigResponseSessionReplicationRoleReplica PostgresConfigResponseSessionReplicationRole = "replica"
	PostgresConfigResponseSessionReplicationRoleLocal   PostgresConfigResponseSessionReplicationRole = "local"
)

// AllValues returns all PostgresConfigResponseSessionReplicationRole values.
func (PostgresConfigResponseSessionReplicationRole) AllValues() []PostgresConfigResponseSessionReplicationRole {
	return []PostgresConfigResponseSessionReplicationRole{
		PostgresConfigResponseSessionReplicationRoleOrigin,
		PostgresConfigResponseSessionReplicationRoleReplica,
		PostgresConfigResponseSessionReplicationRoleLocal,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PostgresConfigResponseSessionReplicationRole) MarshalText() ([]byte, error) {
	switch s {
	case PostgresConfigResponseSessionReplicationRoleOrigin:
		return []byte(s), nil
	case PostgresConfigResponseSessionReplicationRoleReplica:
		return []byte(s), nil
	case PostgresConfigResponseSessionReplicationRoleLocal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PostgresConfigResponseSessionReplicationRole) UnmarshalText(data []byte) error {
	switch PostgresConfigResponseSessionReplicationRole(data) {
	case PostgresConfigResponseSessionReplicationRoleOrigin:
		*s = PostgresConfigResponseSessionReplicationRoleOrigin
		return nil
	case PostgresConfigResponseSessionReplicationRoleReplica:
		*s = PostgresConfigResponseSessionReplicationRoleReplica
		return nil
	case PostgresConfigResponseSessionReplicationRoleLocal:
		*s = PostgresConfigResponseSessionReplicationRoleLocal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PostgrestConfigWithJWTSecretResponse
type PostgrestConfigWithJWTSecretResponse struct {
	MaxRows int `json:"max_rows"`
	// If `null`, the value is automatically configured based on compute size.
	DbPool            NilInt    `json:"db_pool"`
	DbSchema          string    `json:"db_schema"`
	DbExtraSearchPath string    `json:"db_extra_search_path"`
	JwtSecret         OptString `json:"jwt_secret"`
}

// GetMaxRows returns the value of MaxRows.
func (s *PostgrestConfigWithJWTSecretResponse) GetMaxRows() int {
	return s.MaxRows
}

// GetDbPool returns the value of DbPool.
func (s *PostgrestConfigWithJWTSecretResponse) GetDbPool() NilInt {
	return s.DbPool
}

// GetDbSchema returns the value of DbSchema.
func (s *PostgrestConfigWithJWTSecretResponse) GetDbSchema() string {
	return s.DbSchema
}

// GetDbExtraSearchPath returns the value of DbExtraSearchPath.
func (s *PostgrestConfigWithJWTSecretResponse) GetDbExtraSearchPath() string {
	return s.DbExtraSearchPath
}

// GetJwtSecret returns the value of JwtSecret.
func (s *PostgrestConfigWithJWTSecretResponse) GetJwtSecret() OptString {
	return s.JwtSecret
}

// SetMaxRows sets the value of MaxRows.
func (s *PostgrestConfigWithJWTSecretResponse) SetMaxRows(val int) {
	s.MaxRows = val
}

// SetDbPool sets the value of DbPool.
func (s *PostgrestConfigWithJWTSecretResponse) SetDbPool(val NilInt) {
	s.DbPool = val
}

// SetDbSchema sets the value of DbSchema.
func (s *PostgrestConfigWithJWTSecretResponse) SetDbSchema(val string) {
	s.DbSchema = val
}

// SetDbExtraSearchPath sets the value of DbExtraSearchPath.
func (s *PostgrestConfigWithJWTSecretResponse) SetDbExtraSearchPath(val string) {
	s.DbExtraSearchPath = val
}

// SetJwtSecret sets the value of JwtSecret.
func (s *PostgrestConfigWithJWTSecretResponse) SetJwtSecret(val OptString) {
	s.JwtSecret = val
}

func (*PostgrestConfigWithJWTSecretResponse) getPostgRESTConfigRes() {}

// Ref: #/components/schemas/ProjectUpgradeEligibilityResponse
type ProjectUpgradeEligibilityResponse struct {
	Eligible                  bool             `json:"eligible"`
	CurrentAppVersion         string           `json:"current_app_version"`
	LatestAppVersion          string           `json:"latest_app_version"`
	TargetUpgradeVersions     []ProjectVersion `json:"target_upgrade_versions"`
	PotentialBreakingChanges  []string         `json:"potential_breaking_changes"`
	DurationEstimateHours     float64          `json:"duration_estimate_hours"`
	LegacyAuthCustomRoles     []string         `json:"legacy_auth_custom_roles"`
	ExtensionDependentObjects []string         `json:"extension_dependent_objects"`
}

// GetEligible returns the value of Eligible.
func (s *ProjectUpgradeEligibilityResponse) GetEligible() bool {
	return s.Eligible
}

// GetCurrentAppVersion returns the value of CurrentAppVersion.
func (s *ProjectUpgradeEligibilityResponse) GetCurrentAppVersion() string {
	return s.CurrentAppVersion
}

// GetLatestAppVersion returns the value of LatestAppVersion.
func (s *ProjectUpgradeEligibilityResponse) GetLatestAppVersion() string {
	return s.LatestAppVersion
}

// GetTargetUpgradeVersions returns the value of TargetUpgradeVersions.
func (s *ProjectUpgradeEligibilityResponse) GetTargetUpgradeVersions() []ProjectVersion {
	return s.TargetUpgradeVersions
}

// GetPotentialBreakingChanges returns the value of PotentialBreakingChanges.
func (s *ProjectUpgradeEligibilityResponse) GetPotentialBreakingChanges() []string {
	return s.PotentialBreakingChanges
}

// GetDurationEstimateHours returns the value of DurationEstimateHours.
func (s *ProjectUpgradeEligibilityResponse) GetDurationEstimateHours() float64 {
	return s.DurationEstimateHours
}

// GetLegacyAuthCustomRoles returns the value of LegacyAuthCustomRoles.
func (s *ProjectUpgradeEligibilityResponse) GetLegacyAuthCustomRoles() []string {
	return s.LegacyAuthCustomRoles
}

// GetExtensionDependentObjects returns the value of ExtensionDependentObjects.
func (s *ProjectUpgradeEligibilityResponse) GetExtensionDependentObjects() []string {
	return s.ExtensionDependentObjects
}

// SetEligible sets the value of Eligible.
func (s *ProjectUpgradeEligibilityResponse) SetEligible(val bool) {
	s.Eligible = val
}

// SetCurrentAppVersion sets the value of CurrentAppVersion.
func (s *ProjectUpgradeEligibilityResponse) SetCurrentAppVersion(val string) {
	s.CurrentAppVersion = val
}

// SetLatestAppVersion sets the value of LatestAppVersion.
func (s *ProjectUpgradeEligibilityResponse) SetLatestAppVersion(val string) {
	s.LatestAppVersion = val
}

// SetTargetUpgradeVersions sets the value of TargetUpgradeVersions.
func (s *ProjectUpgradeEligibilityResponse) SetTargetUpgradeVersions(val []ProjectVersion) {
	s.TargetUpgradeVersions = val
}

// SetPotentialBreakingChanges sets the value of PotentialBreakingChanges.
func (s *ProjectUpgradeEligibilityResponse) SetPotentialBreakingChanges(val []string) {
	s.PotentialBreakingChanges = val
}

// SetDurationEstimateHours sets the value of DurationEstimateHours.
func (s *ProjectUpgradeEligibilityResponse) SetDurationEstimateHours(val float64) {
	s.DurationEstimateHours = val
}

// SetLegacyAuthCustomRoles sets the value of LegacyAuthCustomRoles.
func (s *ProjectUpgradeEligibilityResponse) SetLegacyAuthCustomRoles(val []string) {
	s.LegacyAuthCustomRoles = val
}

// SetExtensionDependentObjects sets the value of ExtensionDependentObjects.
func (s *ProjectUpgradeEligibilityResponse) SetExtensionDependentObjects(val []string) {
	s.ExtensionDependentObjects = val
}

func (*ProjectUpgradeEligibilityResponse) upgradeEligibilityInformationRes() {}

// Ref: #/components/schemas/ProjectUpgradeInitiateResponse
type ProjectUpgradeInitiateResponse struct {
	TrackingID string `json:"tracking_id"`
}

// GetTrackingID returns the value of TrackingID.
func (s *ProjectUpgradeInitiateResponse) GetTrackingID() string {
	return s.TrackingID
}

// SetTrackingID sets the value of TrackingID.
func (s *ProjectUpgradeInitiateResponse) SetTrackingID(val string) {
	s.TrackingID = val
}

func (*ProjectUpgradeInitiateResponse) upgradeProjectRes() {}

// Ref: #/components/schemas/ProjectVersion
type ProjectVersion struct {
	PostgresVersion float64 `json:"postgres_version"`
	AppVersion      string  `json:"app_version"`
}

// GetPostgresVersion returns the value of PostgresVersion.
func (s *ProjectVersion) GetPostgresVersion() float64 {
	return s.PostgresVersion
}

// GetAppVersion returns the value of AppVersion.
func (s *ProjectVersion) GetAppVersion() string {
	return s.AppVersion
}

// SetPostgresVersion sets the value of PostgresVersion.
func (s *ProjectVersion) SetPostgresVersion(val float64) {
	s.PostgresVersion = val
}

// SetAppVersion sets the value of AppVersion.
func (s *ProjectVersion) SetAppVersion(val string) {
	s.AppVersion = val
}

// Ref: #/components/schemas/Provider
type Provider struct {
	ID        string            `json:"id"`
	Saml      OptSamlDescriptor `json:"saml"`
	Domains   []Domain          `json:"domains"`
	CreatedAt OptString         `json:"created_at"`
	UpdatedAt OptString         `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Provider) GetID() string {
	return s.ID
}

// GetSaml returns the value of Saml.
func (s *Provider) GetSaml() OptSamlDescriptor {
	return s.Saml
}

// GetDomains returns the value of Domains.
func (s *Provider) GetDomains() []Domain {
	return s.Domains
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Provider) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Provider) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Provider) SetID(val string) {
	s.ID = val
}

// SetSaml sets the value of Saml.
func (s *Provider) SetSaml(val OptSamlDescriptor) {
	s.Saml = val
}

// SetDomains sets the value of Domains.
func (s *Provider) SetDomains(val []Domain) {
	s.Domains = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Provider) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Provider) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/ReadOnlyStatusResponse
type ReadOnlyStatusResponse struct {
	Enabled             bool   `json:"enabled"`
	OverrideEnabled     bool   `json:"override_enabled"`
	OverrideActiveUntil string `json:"override_active_until"`
}

// GetEnabled returns the value of Enabled.
func (s *ReadOnlyStatusResponse) GetEnabled() bool {
	return s.Enabled
}

// GetOverrideEnabled returns the value of OverrideEnabled.
func (s *ReadOnlyStatusResponse) GetOverrideEnabled() bool {
	return s.OverrideEnabled
}

// GetOverrideActiveUntil returns the value of OverrideActiveUntil.
func (s *ReadOnlyStatusResponse) GetOverrideActiveUntil() string {
	return s.OverrideActiveUntil
}

// SetEnabled sets the value of Enabled.
func (s *ReadOnlyStatusResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetOverrideEnabled sets the value of OverrideEnabled.
func (s *ReadOnlyStatusResponse) SetOverrideEnabled(val bool) {
	s.OverrideEnabled = val
}

// SetOverrideActiveUntil sets the value of OverrideActiveUntil.
func (s *ReadOnlyStatusResponse) SetOverrideActiveUntil(val string) {
	s.OverrideActiveUntil = val
}

func (*ReadOnlyStatusResponse) getReadOnlyModeStatusRes() {}

// Ref: #/components/schemas/RealtimeHealthResponse
type RealtimeHealthResponse struct {
	Healthy          bool    `json:"healthy"`
	DbConnected      bool    `json:"db_connected"`
	ConnectedCluster float64 `json:"connected_cluster"`
}

// GetHealthy returns the value of Healthy.
func (s *RealtimeHealthResponse) GetHealthy() bool {
	return s.Healthy
}

// GetDbConnected returns the value of DbConnected.
func (s *RealtimeHealthResponse) GetDbConnected() bool {
	return s.DbConnected
}

// GetConnectedCluster returns the value of ConnectedCluster.
func (s *RealtimeHealthResponse) GetConnectedCluster() float64 {
	return s.ConnectedCluster
}

// SetHealthy sets the value of Healthy.
func (s *RealtimeHealthResponse) SetHealthy(val bool) {
	s.Healthy = val
}

// SetDbConnected sets the value of DbConnected.
func (s *RealtimeHealthResponse) SetDbConnected(val bool) {
	s.DbConnected = val
}

// SetConnectedCluster sets the value of ConnectedCluster.
func (s *RealtimeHealthResponse) SetConnectedCluster(val float64) {
	s.ConnectedCluster = val
}

// RemoveCustomHostnameConfigForbidden is response for RemoveCustomHostnameConfig operation.
type RemoveCustomHostnameConfigForbidden struct{}

func (*RemoveCustomHostnameConfigForbidden) removeCustomHostnameConfigRes() {}

// RemoveCustomHostnameConfigInternalServerError is response for RemoveCustomHostnameConfig operation.
type RemoveCustomHostnameConfigInternalServerError struct{}

func (*RemoveCustomHostnameConfigInternalServerError) removeCustomHostnameConfigRes() {}

// RemoveCustomHostnameConfigOK is response for RemoveCustomHostnameConfig operation.
type RemoveCustomHostnameConfigOK struct{}

func (*RemoveCustomHostnameConfigOK) removeCustomHostnameConfigRes() {}

// RemoveNetworkBanForbidden is response for RemoveNetworkBan operation.
type RemoveNetworkBanForbidden struct{}

func (*RemoveNetworkBanForbidden) removeNetworkBanRes() {}

// RemoveNetworkBanInternalServerError is response for RemoveNetworkBan operation.
type RemoveNetworkBanInternalServerError struct{}

func (*RemoveNetworkBanInternalServerError) removeNetworkBanRes() {}

// RemoveNetworkBanOK is response for RemoveNetworkBan operation.
type RemoveNetworkBanOK struct{}

func (*RemoveNetworkBanOK) removeNetworkBanRes() {}

// Ref: #/components/schemas/RemoveNetworkBanRequest
type RemoveNetworkBanRequest struct {
	Ipv4Addresses []string `json:"ipv4_addresses"`
}

// GetIpv4Addresses returns the value of Ipv4Addresses.
func (s *RemoveNetworkBanRequest) GetIpv4Addresses() []string {
	return s.Ipv4Addresses
}

// SetIpv4Addresses sets the value of Ipv4Addresses.
func (s *RemoveNetworkBanRequest) SetIpv4Addresses(val []string) {
	s.Ipv4Addresses = val
}

// RemoveProviderByIdForbidden is response for RemoveProviderById operation.
type RemoveProviderByIdForbidden struct{}

func (*RemoveProviderByIdForbidden) removeProviderByIdRes() {}

// RemoveProviderByIdNotFound is response for RemoveProviderById operation.
type RemoveProviderByIdNotFound struct{}

func (*RemoveProviderByIdNotFound) removeProviderByIdRes() {}

// Ref: #/components/schemas/RemoveReadReplicaBody
type RemoveReadReplicaBody struct {
	DatabaseIdentifier string `json:"database_identifier"`
}

// GetDatabaseIdentifier returns the value of DatabaseIdentifier.
func (s *RemoveReadReplicaBody) GetDatabaseIdentifier() string {
	return s.DatabaseIdentifier
}

// SetDatabaseIdentifier sets the value of DatabaseIdentifier.
func (s *RemoveReadReplicaBody) SetDatabaseIdentifier(val string) {
	s.DatabaseIdentifier = val
}

// RemoveReadReplicaCreated is response for RemoveReadReplica operation.
type RemoveReadReplicaCreated struct{}

func (*RemoveReadReplicaCreated) removeReadReplicaRes() {}

// RemoveReadReplicaInternalServerError is response for RemoveReadReplica operation.
type RemoveReadReplicaInternalServerError struct{}

func (*RemoveReadReplicaInternalServerError) removeReadReplicaRes() {}

// RemoveVanitySubdomainConfigForbidden is response for RemoveVanitySubdomainConfig operation.
type RemoveVanitySubdomainConfigForbidden struct{}

func (*RemoveVanitySubdomainConfigForbidden) removeVanitySubdomainConfigRes() {}

// RemoveVanitySubdomainConfigInternalServerError is response for RemoveVanitySubdomainConfig operation.
type RemoveVanitySubdomainConfigInternalServerError struct{}

func (*RemoveVanitySubdomainConfigInternalServerError) removeVanitySubdomainConfigRes() {}

// RemoveVanitySubdomainConfigOK is response for RemoveVanitySubdomainConfig operation.
type RemoveVanitySubdomainConfigOK struct{}

func (*RemoveVanitySubdomainConfigOK) removeVanitySubdomainConfigRes() {}

// ResetBranchInternalServerError is response for ResetBranch operation.
type ResetBranchInternalServerError struct{}

func (*ResetBranchInternalServerError) resetBranchRes() {}

// ReverifyForbidden is response for Reverify operation.
type ReverifyForbidden struct{}

func (*ReverifyForbidden) reverifyRes() {}

// ReverifyInternalServerError is response for Reverify operation.
type ReverifyInternalServerError struct{}

func (*ReverifyInternalServerError) reverifyRes() {}

// Ref: #/components/schemas/SamlDescriptor
type SamlDescriptor struct {
	ID               string              `json:"id"`
	EntityID         string              `json:"entity_id"`
	MetadataURL      OptString           `json:"metadata_url"`
	MetadataXML      OptString           `json:"metadata_xml"`
	AttributeMapping OptAttributeMapping `json:"attribute_mapping"`
}

// GetID returns the value of ID.
func (s *SamlDescriptor) GetID() string {
	return s.ID
}

// GetEntityID returns the value of EntityID.
func (s *SamlDescriptor) GetEntityID() string {
	return s.EntityID
}

// GetMetadataURL returns the value of MetadataURL.
func (s *SamlDescriptor) GetMetadataURL() OptString {
	return s.MetadataURL
}

// GetMetadataXML returns the value of MetadataXML.
func (s *SamlDescriptor) GetMetadataXML() OptString {
	return s.MetadataXML
}

// GetAttributeMapping returns the value of AttributeMapping.
func (s *SamlDescriptor) GetAttributeMapping() OptAttributeMapping {
	return s.AttributeMapping
}

// SetID sets the value of ID.
func (s *SamlDescriptor) SetID(val string) {
	s.ID = val
}

// SetEntityID sets the value of EntityID.
func (s *SamlDescriptor) SetEntityID(val string) {
	s.EntityID = val
}

// SetMetadataURL sets the value of MetadataURL.
func (s *SamlDescriptor) SetMetadataURL(val OptString) {
	s.MetadataURL = val
}

// SetMetadataXML sets the value of MetadataXML.
func (s *SamlDescriptor) SetMetadataXML(val OptString) {
	s.MetadataXML = val
}

// SetAttributeMapping sets the value of AttributeMapping.
func (s *SamlDescriptor) SetAttributeMapping(val OptAttributeMapping) {
	s.AttributeMapping = val
}

// Ref: #/components/schemas/SecretResponse
type SecretResponse struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *SecretResponse) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *SecretResponse) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *SecretResponse) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *SecretResponse) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/SetUpReadReplicaBody
type SetUpReadReplicaBody struct {
	// Region you want your read replica to reside in.
	ReadReplicaRegion SetUpReadReplicaBodyReadReplicaRegion `json:"read_replica_region"`
}

// GetReadReplicaRegion returns the value of ReadReplicaRegion.
func (s *SetUpReadReplicaBody) GetReadReplicaRegion() SetUpReadReplicaBodyReadReplicaRegion {
	return s.ReadReplicaRegion
}

// SetReadReplicaRegion sets the value of ReadReplicaRegion.
func (s *SetUpReadReplicaBody) SetReadReplicaRegion(val SetUpReadReplicaBodyReadReplicaRegion) {
	s.ReadReplicaRegion = val
}

// Region you want your read replica to reside in.
type SetUpReadReplicaBodyReadReplicaRegion string

const (
	SetUpReadReplicaBodyReadReplicaRegionUsEast1      SetUpReadReplicaBodyReadReplicaRegion = "us-east-1"
	SetUpReadReplicaBodyReadReplicaRegionUsWest1      SetUpReadReplicaBodyReadReplicaRegion = "us-west-1"
	SetUpReadReplicaBodyReadReplicaRegionUsWest2      SetUpReadReplicaBodyReadReplicaRegion = "us-west-2"
	SetUpReadReplicaBodyReadReplicaRegionApEast1      SetUpReadReplicaBodyReadReplicaRegion = "ap-east-1"
	SetUpReadReplicaBodyReadReplicaRegionApSoutheast1 SetUpReadReplicaBodyReadReplicaRegion = "ap-southeast-1"
	SetUpReadReplicaBodyReadReplicaRegionApNortheast1 SetUpReadReplicaBodyReadReplicaRegion = "ap-northeast-1"
	SetUpReadReplicaBodyReadReplicaRegionApNortheast2 SetUpReadReplicaBodyReadReplicaRegion = "ap-northeast-2"
	SetUpReadReplicaBodyReadReplicaRegionApSoutheast2 SetUpReadReplicaBodyReadReplicaRegion = "ap-southeast-2"
	SetUpReadReplicaBodyReadReplicaRegionEuWest1      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-1"
	SetUpReadReplicaBodyReadReplicaRegionEuWest2      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-2"
	SetUpReadReplicaBodyReadReplicaRegionEuWest3      SetUpReadReplicaBodyReadReplicaRegion = "eu-west-3"
	SetUpReadReplicaBodyReadReplicaRegionEuCentral1   SetUpReadReplicaBodyReadReplicaRegion = "eu-central-1"
	SetUpReadReplicaBodyReadReplicaRegionCaCentral1   SetUpReadReplicaBodyReadReplicaRegion = "ca-central-1"
	SetUpReadReplicaBodyReadReplicaRegionApSouth1     SetUpReadReplicaBodyReadReplicaRegion = "ap-south-1"
	SetUpReadReplicaBodyReadReplicaRegionSaEast1      SetUpReadReplicaBodyReadReplicaRegion = "sa-east-1"
)

// AllValues returns all SetUpReadReplicaBodyReadReplicaRegion values.
func (SetUpReadReplicaBodyReadReplicaRegion) AllValues() []SetUpReadReplicaBodyReadReplicaRegion {
	return []SetUpReadReplicaBodyReadReplicaRegion{
		SetUpReadReplicaBodyReadReplicaRegionUsEast1,
		SetUpReadReplicaBodyReadReplicaRegionUsWest1,
		SetUpReadReplicaBodyReadReplicaRegionUsWest2,
		SetUpReadReplicaBodyReadReplicaRegionApEast1,
		SetUpReadReplicaBodyReadReplicaRegionApSoutheast1,
		SetUpReadReplicaBodyReadReplicaRegionApNortheast1,
		SetUpReadReplicaBodyReadReplicaRegionApNortheast2,
		SetUpReadReplicaBodyReadReplicaRegionApSoutheast2,
		SetUpReadReplicaBodyReadReplicaRegionEuWest1,
		SetUpReadReplicaBodyReadReplicaRegionEuWest2,
		SetUpReadReplicaBodyReadReplicaRegionEuWest3,
		SetUpReadReplicaBodyReadReplicaRegionEuCentral1,
		SetUpReadReplicaBodyReadReplicaRegionCaCentral1,
		SetUpReadReplicaBodyReadReplicaRegionApSouth1,
		SetUpReadReplicaBodyReadReplicaRegionSaEast1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SetUpReadReplicaBodyReadReplicaRegion) MarshalText() ([]byte, error) {
	switch s {
	case SetUpReadReplicaBodyReadReplicaRegionUsEast1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionUsWest1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionUsWest2:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApEast1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApSoutheast1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApNortheast1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApNortheast2:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApSoutheast2:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest2:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest3:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionEuCentral1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionCaCentral1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionApSouth1:
		return []byte(s), nil
	case SetUpReadReplicaBodyReadReplicaRegionSaEast1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SetUpReadReplicaBodyReadReplicaRegion) UnmarshalText(data []byte) error {
	switch SetUpReadReplicaBodyReadReplicaRegion(data) {
	case SetUpReadReplicaBodyReadReplicaRegionUsEast1:
		*s = SetUpReadReplicaBodyReadReplicaRegionUsEast1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionUsWest1:
		*s = SetUpReadReplicaBodyReadReplicaRegionUsWest1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionUsWest2:
		*s = SetUpReadReplicaBodyReadReplicaRegionUsWest2
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApEast1:
		*s = SetUpReadReplicaBodyReadReplicaRegionApEast1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApSoutheast1:
		*s = SetUpReadReplicaBodyReadReplicaRegionApSoutheast1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApNortheast1:
		*s = SetUpReadReplicaBodyReadReplicaRegionApNortheast1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApNortheast2:
		*s = SetUpReadReplicaBodyReadReplicaRegionApNortheast2
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApSoutheast2:
		*s = SetUpReadReplicaBodyReadReplicaRegionApSoutheast2
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest1:
		*s = SetUpReadReplicaBodyReadReplicaRegionEuWest1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest2:
		*s = SetUpReadReplicaBodyReadReplicaRegionEuWest2
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionEuWest3:
		*s = SetUpReadReplicaBodyReadReplicaRegionEuWest3
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionEuCentral1:
		*s = SetUpReadReplicaBodyReadReplicaRegionEuCentral1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionCaCentral1:
		*s = SetUpReadReplicaBodyReadReplicaRegionCaCentral1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionApSouth1:
		*s = SetUpReadReplicaBodyReadReplicaRegionApSouth1
		return nil
	case SetUpReadReplicaBodyReadReplicaRegionSaEast1:
		*s = SetUpReadReplicaBodyReadReplicaRegionSaEast1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// SetUpReadReplicaCreated is response for SetUpReadReplica operation.
type SetUpReadReplicaCreated struct{}

func (*SetUpReadReplicaCreated) setUpReadReplicaRes() {}

// SetUpReadReplicaInternalServerError is response for SetUpReadReplica operation.
type SetUpReadReplicaInternalServerError struct{}

func (*SetUpReadReplicaInternalServerError) setUpReadReplicaRes() {}

// Ref: #/components/schemas/SnippetContent
type SnippetContent struct {
	Favorite      bool   `json:"favorite"`
	SchemaVersion string `json:"schema_version"`
	SQL           string `json:"sql"`
}

// GetFavorite returns the value of Favorite.
func (s *SnippetContent) GetFavorite() bool {
	return s.Favorite
}

// GetSchemaVersion returns the value of SchemaVersion.
func (s *SnippetContent) GetSchemaVersion() string {
	return s.SchemaVersion
}

// GetSQL returns the value of SQL.
func (s *SnippetContent) GetSQL() string {
	return s.SQL
}

// SetFavorite sets the value of Favorite.
func (s *SnippetContent) SetFavorite(val bool) {
	s.Favorite = val
}

// SetSchemaVersion sets the value of SchemaVersion.
func (s *SnippetContent) SetSchemaVersion(val string) {
	s.SchemaVersion = val
}

// SetSQL sets the value of SQL.
func (s *SnippetContent) SetSQL(val string) {
	s.SQL = val
}

// Ref: #/components/schemas/SnippetList
type SnippetList struct {
	Data []SnippetMeta `json:"data"`
}

// GetData returns the value of Data.
func (s *SnippetList) GetData() []SnippetMeta {
	return s.Data
}

// SetData sets the value of Data.
func (s *SnippetList) SetData(val []SnippetMeta) {
	s.Data = val
}

func (*SnippetList) listSnippetsRes() {}

// Ref: #/components/schemas/SnippetMeta
type SnippetMeta struct {
	ID          string                `json:"id"`
	InsertedAt  string                `json:"inserted_at"`
	UpdatedAt   string                `json:"updated_at"`
	Type        SnippetMetaType       `json:"type"`
	Visibility  SnippetMetaVisibility `json:"visibility"`
	Name        string                `json:"name"`
	Description NilString             `json:"description"`
	Project     SnippetProject        `json:"project"`
	Owner       SnippetUser           `json:"owner"`
	UpdatedBy   SnippetUser           `json:"updated_by"`
}

// GetID returns the value of ID.
func (s *SnippetMeta) GetID() string {
	return s.ID
}

// GetInsertedAt returns the value of InsertedAt.
func (s *SnippetMeta) GetInsertedAt() string {
	return s.InsertedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SnippetMeta) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetType returns the value of Type.
func (s *SnippetMeta) GetType() SnippetMetaType {
	return s.Type
}

// GetVisibility returns the value of Visibility.
func (s *SnippetMeta) GetVisibility() SnippetMetaVisibility {
	return s.Visibility
}

// GetName returns the value of Name.
func (s *SnippetMeta) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *SnippetMeta) GetDescription() NilString {
	return s.Description
}

// GetProject returns the value of Project.
func (s *SnippetMeta) GetProject() SnippetProject {
	return s.Project
}

// GetOwner returns the value of Owner.
func (s *SnippetMeta) GetOwner() SnippetUser {
	return s.Owner
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SnippetMeta) GetUpdatedBy() SnippetUser {
	return s.UpdatedBy
}

// SetID sets the value of ID.
func (s *SnippetMeta) SetID(val string) {
	s.ID = val
}

// SetInsertedAt sets the value of InsertedAt.
func (s *SnippetMeta) SetInsertedAt(val string) {
	s.InsertedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SnippetMeta) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetType sets the value of Type.
func (s *SnippetMeta) SetType(val SnippetMetaType) {
	s.Type = val
}

// SetVisibility sets the value of Visibility.
func (s *SnippetMeta) SetVisibility(val SnippetMetaVisibility) {
	s.Visibility = val
}

// SetName sets the value of Name.
func (s *SnippetMeta) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *SnippetMeta) SetDescription(val NilString) {
	s.Description = val
}

// SetProject sets the value of Project.
func (s *SnippetMeta) SetProject(val SnippetProject) {
	s.Project = val
}

// SetOwner sets the value of Owner.
func (s *SnippetMeta) SetOwner(val SnippetUser) {
	s.Owner = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SnippetMeta) SetUpdatedBy(val SnippetUser) {
	s.UpdatedBy = val
}

type SnippetMetaType string

const (
	SnippetMetaTypeSQL SnippetMetaType = "sql"
)

// AllValues returns all SnippetMetaType values.
func (SnippetMetaType) AllValues() []SnippetMetaType {
	return []SnippetMetaType{
		SnippetMetaTypeSQL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SnippetMetaType) MarshalText() ([]byte, error) {
	switch s {
	case SnippetMetaTypeSQL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SnippetMetaType) UnmarshalText(data []byte) error {
	switch SnippetMetaType(data) {
	case SnippetMetaTypeSQL:
		*s = SnippetMetaTypeSQL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SnippetMetaVisibility string

const (
	SnippetMetaVisibilityUser    SnippetMetaVisibility = "user"
	SnippetMetaVisibilityProject SnippetMetaVisibility = "project"
	SnippetMetaVisibilityOrg     SnippetMetaVisibility = "org"
	SnippetMetaVisibilityPublic  SnippetMetaVisibility = "public"
)

// AllValues returns all SnippetMetaVisibility values.
func (SnippetMetaVisibility) AllValues() []SnippetMetaVisibility {
	return []SnippetMetaVisibility{
		SnippetMetaVisibilityUser,
		SnippetMetaVisibilityProject,
		SnippetMetaVisibilityOrg,
		SnippetMetaVisibilityPublic,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SnippetMetaVisibility) MarshalText() ([]byte, error) {
	switch s {
	case SnippetMetaVisibilityUser:
		return []byte(s), nil
	case SnippetMetaVisibilityProject:
		return []byte(s), nil
	case SnippetMetaVisibilityOrg:
		return []byte(s), nil
	case SnippetMetaVisibilityPublic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SnippetMetaVisibility) UnmarshalText(data []byte) error {
	switch SnippetMetaVisibility(data) {
	case SnippetMetaVisibilityUser:
		*s = SnippetMetaVisibilityUser
		return nil
	case SnippetMetaVisibilityProject:
		*s = SnippetMetaVisibilityProject
		return nil
	case SnippetMetaVisibilityOrg:
		*s = SnippetMetaVisibilityOrg
		return nil
	case SnippetMetaVisibilityPublic:
		*s = SnippetMetaVisibilityPublic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SnippetProject
type SnippetProject struct {
	ID   float64 `json:"id"`
	Name string  `json:"name"`
}

// GetID returns the value of ID.
func (s *SnippetProject) GetID() float64 {
	return s.ID
}

// GetName returns the value of Name.
func (s *SnippetProject) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *SnippetProject) SetID(val float64) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SnippetProject) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/SnippetResponse
type SnippetResponse struct {
	ID          string                    `json:"id"`
	InsertedAt  string                    `json:"inserted_at"`
	UpdatedAt   string                    `json:"updated_at"`
	Type        SnippetResponseType       `json:"type"`
	Visibility  SnippetResponseVisibility `json:"visibility"`
	Name        string                    `json:"name"`
	Description NilString                 `json:"description"`
	Project     SnippetProject            `json:"project"`
	Owner       SnippetUser               `json:"owner"`
	UpdatedBy   SnippetUser               `json:"updated_by"`
	Content     SnippetContent            `json:"content"`
}

// GetID returns the value of ID.
func (s *SnippetResponse) GetID() string {
	return s.ID
}

// GetInsertedAt returns the value of InsertedAt.
func (s *SnippetResponse) GetInsertedAt() string {
	return s.InsertedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SnippetResponse) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetType returns the value of Type.
func (s *SnippetResponse) GetType() SnippetResponseType {
	return s.Type
}

// GetVisibility returns the value of Visibility.
func (s *SnippetResponse) GetVisibility() SnippetResponseVisibility {
	return s.Visibility
}

// GetName returns the value of Name.
func (s *SnippetResponse) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *SnippetResponse) GetDescription() NilString {
	return s.Description
}

// GetProject returns the value of Project.
func (s *SnippetResponse) GetProject() SnippetProject {
	return s.Project
}

// GetOwner returns the value of Owner.
func (s *SnippetResponse) GetOwner() SnippetUser {
	return s.Owner
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SnippetResponse) GetUpdatedBy() SnippetUser {
	return s.UpdatedBy
}

// GetContent returns the value of Content.
func (s *SnippetResponse) GetContent() SnippetContent {
	return s.Content
}

// SetID sets the value of ID.
func (s *SnippetResponse) SetID(val string) {
	s.ID = val
}

// SetInsertedAt sets the value of InsertedAt.
func (s *SnippetResponse) SetInsertedAt(val string) {
	s.InsertedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SnippetResponse) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetType sets the value of Type.
func (s *SnippetResponse) SetType(val SnippetResponseType) {
	s.Type = val
}

// SetVisibility sets the value of Visibility.
func (s *SnippetResponse) SetVisibility(val SnippetResponseVisibility) {
	s.Visibility = val
}

// SetName sets the value of Name.
func (s *SnippetResponse) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *SnippetResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetProject sets the value of Project.
func (s *SnippetResponse) SetProject(val SnippetProject) {
	s.Project = val
}

// SetOwner sets the value of Owner.
func (s *SnippetResponse) SetOwner(val SnippetUser) {
	s.Owner = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SnippetResponse) SetUpdatedBy(val SnippetUser) {
	s.UpdatedBy = val
}

// SetContent sets the value of Content.
func (s *SnippetResponse) SetContent(val SnippetContent) {
	s.Content = val
}

func (*SnippetResponse) getSnippetRes() {}

type SnippetResponseType string

const (
	SnippetResponseTypeSQL SnippetResponseType = "sql"
)

// AllValues returns all SnippetResponseType values.
func (SnippetResponseType) AllValues() []SnippetResponseType {
	return []SnippetResponseType{
		SnippetResponseTypeSQL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SnippetResponseType) MarshalText() ([]byte, error) {
	switch s {
	case SnippetResponseTypeSQL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SnippetResponseType) UnmarshalText(data []byte) error {
	switch SnippetResponseType(data) {
	case SnippetResponseTypeSQL:
		*s = SnippetResponseTypeSQL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SnippetResponseVisibility string

const (
	SnippetResponseVisibilityUser    SnippetResponseVisibility = "user"
	SnippetResponseVisibilityProject SnippetResponseVisibility = "project"
	SnippetResponseVisibilityOrg     SnippetResponseVisibility = "org"
	SnippetResponseVisibilityPublic  SnippetResponseVisibility = "public"
)

// AllValues returns all SnippetResponseVisibility values.
func (SnippetResponseVisibility) AllValues() []SnippetResponseVisibility {
	return []SnippetResponseVisibility{
		SnippetResponseVisibilityUser,
		SnippetResponseVisibilityProject,
		SnippetResponseVisibilityOrg,
		SnippetResponseVisibilityPublic,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SnippetResponseVisibility) MarshalText() ([]byte, error) {
	switch s {
	case SnippetResponseVisibilityUser:
		return []byte(s), nil
	case SnippetResponseVisibilityProject:
		return []byte(s), nil
	case SnippetResponseVisibilityOrg:
		return []byte(s), nil
	case SnippetResponseVisibilityPublic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SnippetResponseVisibility) UnmarshalText(data []byte) error {
	switch SnippetResponseVisibility(data) {
	case SnippetResponseVisibilityUser:
		*s = SnippetResponseVisibilityUser
		return nil
	case SnippetResponseVisibilityProject:
		*s = SnippetResponseVisibilityProject
		return nil
	case SnippetResponseVisibilityOrg:
		*s = SnippetResponseVisibilityOrg
		return nil
	case SnippetResponseVisibilityPublic:
		*s = SnippetResponseVisibilityPublic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SnippetUser
type SnippetUser struct {
	ID       float64 `json:"id"`
	Username string  `json:"username"`
}

// GetID returns the value of ID.
func (s *SnippetUser) GetID() float64 {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *SnippetUser) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *SnippetUser) SetID(val float64) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *SnippetUser) SetUsername(val string) {
	s.Username = val
}

// Ref: #/components/schemas/SslEnforcementRequest
type SslEnforcementRequest struct {
	RequestedConfig SslEnforcements `json:"requestedConfig"`
}

// GetRequestedConfig returns the value of RequestedConfig.
func (s *SslEnforcementRequest) GetRequestedConfig() SslEnforcements {
	return s.RequestedConfig
}

// SetRequestedConfig sets the value of RequestedConfig.
func (s *SslEnforcementRequest) SetRequestedConfig(val SslEnforcements) {
	s.RequestedConfig = val
}

// Ref: #/components/schemas/SslEnforcementResponse
type SslEnforcementResponse struct {
	CurrentConfig       SslEnforcements `json:"currentConfig"`
	AppliedSuccessfully bool            `json:"appliedSuccessfully"`
}

// GetCurrentConfig returns the value of CurrentConfig.
func (s *SslEnforcementResponse) GetCurrentConfig() SslEnforcements {
	return s.CurrentConfig
}

// GetAppliedSuccessfully returns the value of AppliedSuccessfully.
func (s *SslEnforcementResponse) GetAppliedSuccessfully() bool {
	return s.AppliedSuccessfully
}

// SetCurrentConfig sets the value of CurrentConfig.
func (s *SslEnforcementResponse) SetCurrentConfig(val SslEnforcements) {
	s.CurrentConfig = val
}

// SetAppliedSuccessfully sets the value of AppliedSuccessfully.
func (s *SslEnforcementResponse) SetAppliedSuccessfully(val bool) {
	s.AppliedSuccessfully = val
}

func (*SslEnforcementResponse) getSslEnforcementConfigRes()    {}
func (*SslEnforcementResponse) updateSslEnforcementConfigRes() {}

// Ref: #/components/schemas/SslEnforcements
type SslEnforcements struct {
	Database bool `json:"database"`
}

// GetDatabase returns the value of Database.
func (s *SslEnforcements) GetDatabase() bool {
	return s.Database
}

// SetDatabase sets the value of Database.
func (s *SslEnforcements) SetDatabase(val bool) {
	s.Database = val
}

// Ref: #/components/schemas/SubdomainAvailabilityResponse
type SubdomainAvailabilityResponse struct {
	Available bool `json:"available"`
}

// GetAvailable returns the value of Available.
func (s *SubdomainAvailabilityResponse) GetAvailable() bool {
	return s.Available
}

// SetAvailable sets the value of Available.
func (s *SubdomainAvailabilityResponse) SetAvailable(val bool) {
	s.Available = val
}

func (*SubdomainAvailabilityResponse) checkVanitySubdomainAvailabilityRes() {}

// TemporarilyDisableReadonlyModeCreated is response for TemporarilyDisableReadonlyMode operation.
type TemporarilyDisableReadonlyModeCreated struct{}

func (*TemporarilyDisableReadonlyModeCreated) temporarilyDisableReadonlyModeRes() {}

// TemporarilyDisableReadonlyModeInternalServerError is response for TemporarilyDisableReadonlyMode operation.
type TemporarilyDisableReadonlyModeInternalServerError struct{}

func (*TemporarilyDisableReadonlyModeInternalServerError) temporarilyDisableReadonlyModeRes() {}

// Ref: #/components/schemas/ThirdPartyAuth
type ThirdPartyAuth struct {
	ID            string                        `json:"id"`
	Type          string                        `json:"type"`
	OidcIssuerURL OptNilString                  `json:"oidc_issuer_url"`
	JwksURL       OptNilString                  `json:"jwks_url"`
	CustomJwks    OptThirdPartyAuthCustomJwks   `json:"custom_jwks"`
	ResolvedJwks  OptThirdPartyAuthResolvedJwks `json:"resolved_jwks"`
	InsertedAt    string                        `json:"inserted_at"`
	UpdatedAt     string                        `json:"updated_at"`
	ResolvedAt    OptNilString                  `json:"resolved_at"`
}

// GetID returns the value of ID.
func (s *ThirdPartyAuth) GetID() string {
	return s.ID
}

// GetType returns the value of Type.
func (s *ThirdPartyAuth) GetType() string {
	return s.Type
}

// GetOidcIssuerURL returns the value of OidcIssuerURL.
func (s *ThirdPartyAuth) GetOidcIssuerURL() OptNilString {
	return s.OidcIssuerURL
}

// GetJwksURL returns the value of JwksURL.
func (s *ThirdPartyAuth) GetJwksURL() OptNilString {
	return s.JwksURL
}

// GetCustomJwks returns the value of CustomJwks.
func (s *ThirdPartyAuth) GetCustomJwks() OptThirdPartyAuthCustomJwks {
	return s.CustomJwks
}

// GetResolvedJwks returns the value of ResolvedJwks.
func (s *ThirdPartyAuth) GetResolvedJwks() OptThirdPartyAuthResolvedJwks {
	return s.ResolvedJwks
}

// GetInsertedAt returns the value of InsertedAt.
func (s *ThirdPartyAuth) GetInsertedAt() string {
	return s.InsertedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ThirdPartyAuth) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetResolvedAt returns the value of ResolvedAt.
func (s *ThirdPartyAuth) GetResolvedAt() OptNilString {
	return s.ResolvedAt
}

// SetID sets the value of ID.
func (s *ThirdPartyAuth) SetID(val string) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *ThirdPartyAuth) SetType(val string) {
	s.Type = val
}

// SetOidcIssuerURL sets the value of OidcIssuerURL.
func (s *ThirdPartyAuth) SetOidcIssuerURL(val OptNilString) {
	s.OidcIssuerURL = val
}

// SetJwksURL sets the value of JwksURL.
func (s *ThirdPartyAuth) SetJwksURL(val OptNilString) {
	s.JwksURL = val
}

// SetCustomJwks sets the value of CustomJwks.
func (s *ThirdPartyAuth) SetCustomJwks(val OptThirdPartyAuthCustomJwks) {
	s.CustomJwks = val
}

// SetResolvedJwks sets the value of ResolvedJwks.
func (s *ThirdPartyAuth) SetResolvedJwks(val OptThirdPartyAuthResolvedJwks) {
	s.ResolvedJwks = val
}

// SetInsertedAt sets the value of InsertedAt.
func (s *ThirdPartyAuth) SetInsertedAt(val string) {
	s.InsertedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ThirdPartyAuth) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetResolvedAt sets the value of ResolvedAt.
func (s *ThirdPartyAuth) SetResolvedAt(val OptNilString) {
	s.ResolvedAt = val
}

func (*ThirdPartyAuth) createTPAForProjectRes() {}
func (*ThirdPartyAuth) deleteTPAForProjectRes() {}
func (*ThirdPartyAuth) getTPAForProjectRes()    {}

type ThirdPartyAuthCustomJwks struct{}

type ThirdPartyAuthResolvedJwks struct{}

// Ref: #/components/schemas/TypescriptResponse
type TypescriptResponse struct {
	Types string `json:"types"`
}

// GetTypes returns the value of Types.
func (s *TypescriptResponse) GetTypes() string {
	return s.Types
}

// SetTypes sets the value of Types.
func (s *TypescriptResponse) SetTypes(val string) {
	s.Types = val
}

func (*TypescriptResponse) getTypescriptTypesRes() {}

// Ref: #/components/schemas/UpdateAuthConfigBody
type UpdateAuthConfigBody struct {
	SiteURL                                       OptString                                         `json:"site_url"`
	DisableSignup                                 OptBool                                           `json:"disable_signup"`
	JwtExp                                        OptFloat64                                        `json:"jwt_exp"`
	SMTPAdminEmail                                OptString                                         `json:"smtp_admin_email"`
	SMTPHost                                      OptString                                         `json:"smtp_host"`
	SMTPPort                                      OptString                                         `json:"smtp_port"`
	SMTPUser                                      OptString                                         `json:"smtp_user"`
	SMTPPass                                      OptString                                         `json:"smtp_pass"`
	SMTPMaxFrequency                              OptFloat64                                        `json:"smtp_max_frequency"`
	SMTPSenderName                                OptString                                         `json:"smtp_sender_name"`
	MailerAllowUnverifiedEmailSignIns             OptBool                                           `json:"mailer_allow_unverified_email_sign_ins"`
	MailerAutoconfirm                             OptBool                                           `json:"mailer_autoconfirm"`
	MailerSubjectsInvite                          OptString                                         `json:"mailer_subjects_invite"`
	MailerSubjectsConfirmation                    OptString                                         `json:"mailer_subjects_confirmation"`
	MailerSubjectsRecovery                        OptString                                         `json:"mailer_subjects_recovery"`
	MailerSubjectsEmailChange                     OptString                                         `json:"mailer_subjects_email_change"`
	MailerSubjectsMagicLink                       OptString                                         `json:"mailer_subjects_magic_link"`
	MailerSubjectsReauthentication                OptString                                         `json:"mailer_subjects_reauthentication"`
	MailerTemplatesInviteContent                  OptString                                         `json:"mailer_templates_invite_content"`
	MailerTemplatesConfirmationContent            OptString                                         `json:"mailer_templates_confirmation_content"`
	MailerTemplatesRecoveryContent                OptString                                         `json:"mailer_templates_recovery_content"`
	MailerTemplatesEmailChangeContent             OptString                                         `json:"mailer_templates_email_change_content"`
	MailerTemplatesMagicLinkContent               OptString                                         `json:"mailer_templates_magic_link_content"`
	MailerTemplatesReauthenticationContent        OptString                                         `json:"mailer_templates_reauthentication_content"`
	MfaMaxEnrolledFactors                         OptFloat64                                        `json:"mfa_max_enrolled_factors"`
	URIAllowList                                  OptString                                         `json:"uri_allow_list"`
	ExternalAnonymousUsersEnabled                 OptBool                                           `json:"external_anonymous_users_enabled"`
	ExternalEmailEnabled                          OptBool                                           `json:"external_email_enabled"`
	ExternalPhoneEnabled                          OptBool                                           `json:"external_phone_enabled"`
	SamlEnabled                                   OptBool                                           `json:"saml_enabled"`
	SecurityCaptchaEnabled                        OptBool                                           `json:"security_captcha_enabled"`
	SecurityCaptchaProvider                       OptString                                         `json:"security_captcha_provider"`
	SecurityCaptchaSecret                         OptString                                         `json:"security_captcha_secret"`
	SessionsTimebox                               OptFloat64                                        `json:"sessions_timebox"`
	SessionsInactivityTimeout                     OptFloat64                                        `json:"sessions_inactivity_timeout"`
	SessionsSinglePerUser                         OptBool                                           `json:"sessions_single_per_user"`
	SessionsTags                                  OptString                                         `json:"sessions_tags"`
	RateLimitAnonymousUsers                       OptFloat64                                        `json:"rate_limit_anonymous_users"`
	RateLimitEmailSent                            OptFloat64                                        `json:"rate_limit_email_sent"`
	RateLimitSMSSent                              OptFloat64                                        `json:"rate_limit_sms_sent"`
	RateLimitVerify                               OptFloat64                                        `json:"rate_limit_verify"`
	RateLimitTokenRefresh                         OptFloat64                                        `json:"rate_limit_token_refresh"`
	MailerSecureEmailChangeEnabled                OptBool                                           `json:"mailer_secure_email_change_enabled"`
	RefreshTokenRotationEnabled                   OptBool                                           `json:"refresh_token_rotation_enabled"`
	PasswordHibpEnabled                           OptBool                                           `json:"password_hibp_enabled"`
	PasswordMinLength                             OptFloat64                                        `json:"password_min_length"`
	PasswordRequiredCharacters                    OptUpdateAuthConfigBodyPasswordRequiredCharacters `json:"password_required_characters"`
	SecurityManualLinkingEnabled                  OptBool                                           `json:"security_manual_linking_enabled"`
	SecurityUpdatePasswordRequireReauthentication OptBool                                           `json:"security_update_password_require_reauthentication"`
	SecurityRefreshTokenReuseInterval             OptFloat64                                        `json:"security_refresh_token_reuse_interval"`
	MailerOtpExp                                  OptFloat64                                        `json:"mailer_otp_exp"`
	SMSAutoconfirm                                OptBool                                           `json:"sms_autoconfirm"`
	SMSMaxFrequency                               OptFloat64                                        `json:"sms_max_frequency"`
	SMSOtpExp                                     OptFloat64                                        `json:"sms_otp_exp"`
	SMSOtpLength                                  OptFloat64                                        `json:"sms_otp_length"`
	SMSProvider                                   OptString                                         `json:"sms_provider"`
	SMSMessagebirdAccessKey                       OptString                                         `json:"sms_messagebird_access_key"`
	SMSMessagebirdOriginator                      OptString                                         `json:"sms_messagebird_originator"`
	SMSTestOtp                                    OptString                                         `json:"sms_test_otp"`
	SMSTestOtpValidUntil                          OptString                                         `json:"sms_test_otp_valid_until"`
	SMSTextlocalAPIKey                            OptString                                         `json:"sms_textlocal_api_key"`
	SMSTextlocalSender                            OptString                                         `json:"sms_textlocal_sender"`
	SMSTwilioAccountSid                           OptString                                         `json:"sms_twilio_account_sid"`
	SMSTwilioAuthToken                            OptString                                         `json:"sms_twilio_auth_token"`
	SMSTwilioContentSid                           OptString                                         `json:"sms_twilio_content_sid"`
	SMSTwilioMessageServiceSid                    OptString                                         `json:"sms_twilio_message_service_sid"`
	SMSTwilioVerifyAccountSid                     OptString                                         `json:"sms_twilio_verify_account_sid"`
	SMSTwilioVerifyAuthToken                      OptString                                         `json:"sms_twilio_verify_auth_token"`
	SMSTwilioVerifyMessageServiceSid              OptString                                         `json:"sms_twilio_verify_message_service_sid"`
	SMSVonageAPIKey                               OptString                                         `json:"sms_vonage_api_key"`
	SMSVonageAPISecret                            OptString                                         `json:"sms_vonage_api_secret"`
	SMSVonageFrom                                 OptString                                         `json:"sms_vonage_from"`
	SMSTemplate                                   OptString                                         `json:"sms_template"`
	HookMfaVerificationAttemptEnabled             OptBool                                           `json:"hook_mfa_verification_attempt_enabled"`
	HookMfaVerificationAttemptURI                 OptString                                         `json:"hook_mfa_verification_attempt_uri"`
	HookPasswordVerificationAttemptEnabled        OptBool                                           `json:"hook_password_verification_attempt_enabled"`
	HookPasswordVerificationAttemptURI            OptString                                         `json:"hook_password_verification_attempt_uri"`
	HookCustomAccessTokenEnabled                  OptBool                                           `json:"hook_custom_access_token_enabled"`
	HookCustomAccessTokenURI                      OptString                                         `json:"hook_custom_access_token_uri"`
	HookSendSMSEnabled                            OptBool                                           `json:"hook_send_sms_enabled"`
	HookSendSMSURI                                OptString                                         `json:"hook_send_sms_uri"`
	HookSendEmailEnabled                          OptBool                                           `json:"hook_send_email_enabled"`
	HookSendEmailURI                              OptString                                         `json:"hook_send_email_uri"`
	ExternalAppleEnabled                          OptBool                                           `json:"external_apple_enabled"`
	ExternalAppleClientID                         OptString                                         `json:"external_apple_client_id"`
	ExternalAppleSecret                           OptString                                         `json:"external_apple_secret"`
	ExternalAppleAdditionalClientIds              OptString                                         `json:"external_apple_additional_client_ids"`
	ExternalAzureEnabled                          OptBool                                           `json:"external_azure_enabled"`
	ExternalAzureClientID                         OptString                                         `json:"external_azure_client_id"`
	ExternalAzureSecret                           OptString                                         `json:"external_azure_secret"`
	ExternalAzureURL                              OptString                                         `json:"external_azure_url"`
	ExternalBitbucketEnabled                      OptBool                                           `json:"external_bitbucket_enabled"`
	ExternalBitbucketClientID                     OptString                                         `json:"external_bitbucket_client_id"`
	ExternalBitbucketSecret                       OptString                                         `json:"external_bitbucket_secret"`
	ExternalDiscordEnabled                        OptBool                                           `json:"external_discord_enabled"`
	ExternalDiscordClientID                       OptString                                         `json:"external_discord_client_id"`
	ExternalDiscordSecret                         OptString                                         `json:"external_discord_secret"`
	ExternalFacebookEnabled                       OptBool                                           `json:"external_facebook_enabled"`
	ExternalFacebookClientID                      OptString                                         `json:"external_facebook_client_id"`
	ExternalFacebookSecret                        OptString                                         `json:"external_facebook_secret"`
	ExternalFigmaEnabled                          OptBool                                           `json:"external_figma_enabled"`
	ExternalFigmaClientID                         OptString                                         `json:"external_figma_client_id"`
	ExternalFigmaSecret                           OptString                                         `json:"external_figma_secret"`
	ExternalGithubEnabled                         OptBool                                           `json:"external_github_enabled"`
	ExternalGithubClientID                        OptString                                         `json:"external_github_client_id"`
	ExternalGithubSecret                          OptString                                         `json:"external_github_secret"`
	ExternalGitlabEnabled                         OptBool                                           `json:"external_gitlab_enabled"`
	ExternalGitlabClientID                        OptString                                         `json:"external_gitlab_client_id"`
	ExternalGitlabSecret                          OptString                                         `json:"external_gitlab_secret"`
	ExternalGitlabURL                             OptString                                         `json:"external_gitlab_url"`
	ExternalGoogleEnabled                         OptBool                                           `json:"external_google_enabled"`
	ExternalGoogleClientID                        OptString                                         `json:"external_google_client_id"`
	ExternalGoogleSecret                          OptString                                         `json:"external_google_secret"`
	ExternalGoogleAdditionalClientIds             OptString                                         `json:"external_google_additional_client_ids"`
	ExternalGoogleSkipNonceCheck                  OptBool                                           `json:"external_google_skip_nonce_check"`
	ExternalKakaoEnabled                          OptBool                                           `json:"external_kakao_enabled"`
	ExternalKakaoClientID                         OptString                                         `json:"external_kakao_client_id"`
	ExternalKakaoSecret                           OptString                                         `json:"external_kakao_secret"`
	ExternalKeycloakEnabled                       OptBool                                           `json:"external_keycloak_enabled"`
	ExternalKeycloakClientID                      OptString                                         `json:"external_keycloak_client_id"`
	ExternalKeycloakSecret                        OptString                                         `json:"external_keycloak_secret"`
	ExternalKeycloakURL                           OptString                                         `json:"external_keycloak_url"`
	ExternalLinkedinOidcEnabled                   OptBool                                           `json:"external_linkedin_oidc_enabled"`
	ExternalLinkedinOidcClientID                  OptString                                         `json:"external_linkedin_oidc_client_id"`
	ExternalLinkedinOidcSecret                    OptString                                         `json:"external_linkedin_oidc_secret"`
	ExternalNotionEnabled                         OptBool                                           `json:"external_notion_enabled"`
	ExternalNotionClientID                        OptString                                         `json:"external_notion_client_id"`
	ExternalNotionSecret                          OptString                                         `json:"external_notion_secret"`
	ExternalSlackEnabled                          OptBool                                           `json:"external_slack_enabled"`
	ExternalSlackClientID                         OptString                                         `json:"external_slack_client_id"`
	ExternalSlackSecret                           OptString                                         `json:"external_slack_secret"`
	ExternalSpotifyEnabled                        OptBool                                           `json:"external_spotify_enabled"`
	ExternalSpotifyClientID                       OptString                                         `json:"external_spotify_client_id"`
	ExternalSpotifySecret                         OptString                                         `json:"external_spotify_secret"`
	ExternalTwitchEnabled                         OptBool                                           `json:"external_twitch_enabled"`
	ExternalTwitchClientID                        OptString                                         `json:"external_twitch_client_id"`
	ExternalTwitchSecret                          OptString                                         `json:"external_twitch_secret"`
	ExternalTwitterEnabled                        OptBool                                           `json:"external_twitter_enabled"`
	ExternalTwitterClientID                       OptString                                         `json:"external_twitter_client_id"`
	ExternalTwitterSecret                         OptString                                         `json:"external_twitter_secret"`
	ExternalWorkosEnabled                         OptBool                                           `json:"external_workos_enabled"`
	ExternalWorkosClientID                        OptString                                         `json:"external_workos_client_id"`
	ExternalWorkosSecret                          OptString                                         `json:"external_workos_secret"`
	ExternalWorkosURL                             OptString                                         `json:"external_workos_url"`
	ExternalZoomEnabled                           OptBool                                           `json:"external_zoom_enabled"`
	ExternalZoomClientID                          OptString                                         `json:"external_zoom_client_id"`
	ExternalZoomSecret                            OptString                                         `json:"external_zoom_secret"`
}

// GetSiteURL returns the value of SiteURL.
func (s *UpdateAuthConfigBody) GetSiteURL() OptString {
	return s.SiteURL
}

// GetDisableSignup returns the value of DisableSignup.
func (s *UpdateAuthConfigBody) GetDisableSignup() OptBool {
	return s.DisableSignup
}

// GetJwtExp returns the value of JwtExp.
func (s *UpdateAuthConfigBody) GetJwtExp() OptFloat64 {
	return s.JwtExp
}

// GetSMTPAdminEmail returns the value of SMTPAdminEmail.
func (s *UpdateAuthConfigBody) GetSMTPAdminEmail() OptString {
	return s.SMTPAdminEmail
}

// GetSMTPHost returns the value of SMTPHost.
func (s *UpdateAuthConfigBody) GetSMTPHost() OptString {
	return s.SMTPHost
}

// GetSMTPPort returns the value of SMTPPort.
func (s *UpdateAuthConfigBody) GetSMTPPort() OptString {
	return s.SMTPPort
}

// GetSMTPUser returns the value of SMTPUser.
func (s *UpdateAuthConfigBody) GetSMTPUser() OptString {
	return s.SMTPUser
}

// GetSMTPPass returns the value of SMTPPass.
func (s *UpdateAuthConfigBody) GetSMTPPass() OptString {
	return s.SMTPPass
}

// GetSMTPMaxFrequency returns the value of SMTPMaxFrequency.
func (s *UpdateAuthConfigBody) GetSMTPMaxFrequency() OptFloat64 {
	return s.SMTPMaxFrequency
}

// GetSMTPSenderName returns the value of SMTPSenderName.
func (s *UpdateAuthConfigBody) GetSMTPSenderName() OptString {
	return s.SMTPSenderName
}

// GetMailerAllowUnverifiedEmailSignIns returns the value of MailerAllowUnverifiedEmailSignIns.
func (s *UpdateAuthConfigBody) GetMailerAllowUnverifiedEmailSignIns() OptBool {
	return s.MailerAllowUnverifiedEmailSignIns
}

// GetMailerAutoconfirm returns the value of MailerAutoconfirm.
func (s *UpdateAuthConfigBody) GetMailerAutoconfirm() OptBool {
	return s.MailerAutoconfirm
}

// GetMailerSubjectsInvite returns the value of MailerSubjectsInvite.
func (s *UpdateAuthConfigBody) GetMailerSubjectsInvite() OptString {
	return s.MailerSubjectsInvite
}

// GetMailerSubjectsConfirmation returns the value of MailerSubjectsConfirmation.
func (s *UpdateAuthConfigBody) GetMailerSubjectsConfirmation() OptString {
	return s.MailerSubjectsConfirmation
}

// GetMailerSubjectsRecovery returns the value of MailerSubjectsRecovery.
func (s *UpdateAuthConfigBody) GetMailerSubjectsRecovery() OptString {
	return s.MailerSubjectsRecovery
}

// GetMailerSubjectsEmailChange returns the value of MailerSubjectsEmailChange.
func (s *UpdateAuthConfigBody) GetMailerSubjectsEmailChange() OptString {
	return s.MailerSubjectsEmailChange
}

// GetMailerSubjectsMagicLink returns the value of MailerSubjectsMagicLink.
func (s *UpdateAuthConfigBody) GetMailerSubjectsMagicLink() OptString {
	return s.MailerSubjectsMagicLink
}

// GetMailerSubjectsReauthentication returns the value of MailerSubjectsReauthentication.
func (s *UpdateAuthConfigBody) GetMailerSubjectsReauthentication() OptString {
	return s.MailerSubjectsReauthentication
}

// GetMailerTemplatesInviteContent returns the value of MailerTemplatesInviteContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesInviteContent() OptString {
	return s.MailerTemplatesInviteContent
}

// GetMailerTemplatesConfirmationContent returns the value of MailerTemplatesConfirmationContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesConfirmationContent() OptString {
	return s.MailerTemplatesConfirmationContent
}

// GetMailerTemplatesRecoveryContent returns the value of MailerTemplatesRecoveryContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesRecoveryContent() OptString {
	return s.MailerTemplatesRecoveryContent
}

// GetMailerTemplatesEmailChangeContent returns the value of MailerTemplatesEmailChangeContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesEmailChangeContent() OptString {
	return s.MailerTemplatesEmailChangeContent
}

// GetMailerTemplatesMagicLinkContent returns the value of MailerTemplatesMagicLinkContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesMagicLinkContent() OptString {
	return s.MailerTemplatesMagicLinkContent
}

// GetMailerTemplatesReauthenticationContent returns the value of MailerTemplatesReauthenticationContent.
func (s *UpdateAuthConfigBody) GetMailerTemplatesReauthenticationContent() OptString {
	return s.MailerTemplatesReauthenticationContent
}

// GetMfaMaxEnrolledFactors returns the value of MfaMaxEnrolledFactors.
func (s *UpdateAuthConfigBody) GetMfaMaxEnrolledFactors() OptFloat64 {
	return s.MfaMaxEnrolledFactors
}

// GetURIAllowList returns the value of URIAllowList.
func (s *UpdateAuthConfigBody) GetURIAllowList() OptString {
	return s.URIAllowList
}

// GetExternalAnonymousUsersEnabled returns the value of ExternalAnonymousUsersEnabled.
func (s *UpdateAuthConfigBody) GetExternalAnonymousUsersEnabled() OptBool {
	return s.ExternalAnonymousUsersEnabled
}

// GetExternalEmailEnabled returns the value of ExternalEmailEnabled.
func (s *UpdateAuthConfigBody) GetExternalEmailEnabled() OptBool {
	return s.ExternalEmailEnabled
}

// GetExternalPhoneEnabled returns the value of ExternalPhoneEnabled.
func (s *UpdateAuthConfigBody) GetExternalPhoneEnabled() OptBool {
	return s.ExternalPhoneEnabled
}

// GetSamlEnabled returns the value of SamlEnabled.
func (s *UpdateAuthConfigBody) GetSamlEnabled() OptBool {
	return s.SamlEnabled
}

// GetSecurityCaptchaEnabled returns the value of SecurityCaptchaEnabled.
func (s *UpdateAuthConfigBody) GetSecurityCaptchaEnabled() OptBool {
	return s.SecurityCaptchaEnabled
}

// GetSecurityCaptchaProvider returns the value of SecurityCaptchaProvider.
func (s *UpdateAuthConfigBody) GetSecurityCaptchaProvider() OptString {
	return s.SecurityCaptchaProvider
}

// GetSecurityCaptchaSecret returns the value of SecurityCaptchaSecret.
func (s *UpdateAuthConfigBody) GetSecurityCaptchaSecret() OptString {
	return s.SecurityCaptchaSecret
}

// GetSessionsTimebox returns the value of SessionsTimebox.
func (s *UpdateAuthConfigBody) GetSessionsTimebox() OptFloat64 {
	return s.SessionsTimebox
}

// GetSessionsInactivityTimeout returns the value of SessionsInactivityTimeout.
func (s *UpdateAuthConfigBody) GetSessionsInactivityTimeout() OptFloat64 {
	return s.SessionsInactivityTimeout
}

// GetSessionsSinglePerUser returns the value of SessionsSinglePerUser.
func (s *UpdateAuthConfigBody) GetSessionsSinglePerUser() OptBool {
	return s.SessionsSinglePerUser
}

// GetSessionsTags returns the value of SessionsTags.
func (s *UpdateAuthConfigBody) GetSessionsTags() OptString {
	return s.SessionsTags
}

// GetRateLimitAnonymousUsers returns the value of RateLimitAnonymousUsers.
func (s *UpdateAuthConfigBody) GetRateLimitAnonymousUsers() OptFloat64 {
	return s.RateLimitAnonymousUsers
}

// GetRateLimitEmailSent returns the value of RateLimitEmailSent.
func (s *UpdateAuthConfigBody) GetRateLimitEmailSent() OptFloat64 {
	return s.RateLimitEmailSent
}

// GetRateLimitSMSSent returns the value of RateLimitSMSSent.
func (s *UpdateAuthConfigBody) GetRateLimitSMSSent() OptFloat64 {
	return s.RateLimitSMSSent
}

// GetRateLimitVerify returns the value of RateLimitVerify.
func (s *UpdateAuthConfigBody) GetRateLimitVerify() OptFloat64 {
	return s.RateLimitVerify
}

// GetRateLimitTokenRefresh returns the value of RateLimitTokenRefresh.
func (s *UpdateAuthConfigBody) GetRateLimitTokenRefresh() OptFloat64 {
	return s.RateLimitTokenRefresh
}

// GetMailerSecureEmailChangeEnabled returns the value of MailerSecureEmailChangeEnabled.
func (s *UpdateAuthConfigBody) GetMailerSecureEmailChangeEnabled() OptBool {
	return s.MailerSecureEmailChangeEnabled
}

// GetRefreshTokenRotationEnabled returns the value of RefreshTokenRotationEnabled.
func (s *UpdateAuthConfigBody) GetRefreshTokenRotationEnabled() OptBool {
	return s.RefreshTokenRotationEnabled
}

// GetPasswordHibpEnabled returns the value of PasswordHibpEnabled.
func (s *UpdateAuthConfigBody) GetPasswordHibpEnabled() OptBool {
	return s.PasswordHibpEnabled
}

// GetPasswordMinLength returns the value of PasswordMinLength.
func (s *UpdateAuthConfigBody) GetPasswordMinLength() OptFloat64 {
	return s.PasswordMinLength
}

// GetPasswordRequiredCharacters returns the value of PasswordRequiredCharacters.
func (s *UpdateAuthConfigBody) GetPasswordRequiredCharacters() OptUpdateAuthConfigBodyPasswordRequiredCharacters {
	return s.PasswordRequiredCharacters
}

// GetSecurityManualLinkingEnabled returns the value of SecurityManualLinkingEnabled.
func (s *UpdateAuthConfigBody) GetSecurityManualLinkingEnabled() OptBool {
	return s.SecurityManualLinkingEnabled
}

// GetSecurityUpdatePasswordRequireReauthentication returns the value of SecurityUpdatePasswordRequireReauthentication.
func (s *UpdateAuthConfigBody) GetSecurityUpdatePasswordRequireReauthentication() OptBool {
	return s.SecurityUpdatePasswordRequireReauthentication
}

// GetSecurityRefreshTokenReuseInterval returns the value of SecurityRefreshTokenReuseInterval.
func (s *UpdateAuthConfigBody) GetSecurityRefreshTokenReuseInterval() OptFloat64 {
	return s.SecurityRefreshTokenReuseInterval
}

// GetMailerOtpExp returns the value of MailerOtpExp.
func (s *UpdateAuthConfigBody) GetMailerOtpExp() OptFloat64 {
	return s.MailerOtpExp
}

// GetSMSAutoconfirm returns the value of SMSAutoconfirm.
func (s *UpdateAuthConfigBody) GetSMSAutoconfirm() OptBool {
	return s.SMSAutoconfirm
}

// GetSMSMaxFrequency returns the value of SMSMaxFrequency.
func (s *UpdateAuthConfigBody) GetSMSMaxFrequency() OptFloat64 {
	return s.SMSMaxFrequency
}

// GetSMSOtpExp returns the value of SMSOtpExp.
func (s *UpdateAuthConfigBody) GetSMSOtpExp() OptFloat64 {
	return s.SMSOtpExp
}

// GetSMSOtpLength returns the value of SMSOtpLength.
func (s *UpdateAuthConfigBody) GetSMSOtpLength() OptFloat64 {
	return s.SMSOtpLength
}

// GetSMSProvider returns the value of SMSProvider.
func (s *UpdateAuthConfigBody) GetSMSProvider() OptString {
	return s.SMSProvider
}

// GetSMSMessagebirdAccessKey returns the value of SMSMessagebirdAccessKey.
func (s *UpdateAuthConfigBody) GetSMSMessagebirdAccessKey() OptString {
	return s.SMSMessagebirdAccessKey
}

// GetSMSMessagebirdOriginator returns the value of SMSMessagebirdOriginator.
func (s *UpdateAuthConfigBody) GetSMSMessagebirdOriginator() OptString {
	return s.SMSMessagebirdOriginator
}

// GetSMSTestOtp returns the value of SMSTestOtp.
func (s *UpdateAuthConfigBody) GetSMSTestOtp() OptString {
	return s.SMSTestOtp
}

// GetSMSTestOtpValidUntil returns the value of SMSTestOtpValidUntil.
func (s *UpdateAuthConfigBody) GetSMSTestOtpValidUntil() OptString {
	return s.SMSTestOtpValidUntil
}

// GetSMSTextlocalAPIKey returns the value of SMSTextlocalAPIKey.
func (s *UpdateAuthConfigBody) GetSMSTextlocalAPIKey() OptString {
	return s.SMSTextlocalAPIKey
}

// GetSMSTextlocalSender returns the value of SMSTextlocalSender.
func (s *UpdateAuthConfigBody) GetSMSTextlocalSender() OptString {
	return s.SMSTextlocalSender
}

// GetSMSTwilioAccountSid returns the value of SMSTwilioAccountSid.
func (s *UpdateAuthConfigBody) GetSMSTwilioAccountSid() OptString {
	return s.SMSTwilioAccountSid
}

// GetSMSTwilioAuthToken returns the value of SMSTwilioAuthToken.
func (s *UpdateAuthConfigBody) GetSMSTwilioAuthToken() OptString {
	return s.SMSTwilioAuthToken
}

// GetSMSTwilioContentSid returns the value of SMSTwilioContentSid.
func (s *UpdateAuthConfigBody) GetSMSTwilioContentSid() OptString {
	return s.SMSTwilioContentSid
}

// GetSMSTwilioMessageServiceSid returns the value of SMSTwilioMessageServiceSid.
func (s *UpdateAuthConfigBody) GetSMSTwilioMessageServiceSid() OptString {
	return s.SMSTwilioMessageServiceSid
}

// GetSMSTwilioVerifyAccountSid returns the value of SMSTwilioVerifyAccountSid.
func (s *UpdateAuthConfigBody) GetSMSTwilioVerifyAccountSid() OptString {
	return s.SMSTwilioVerifyAccountSid
}

// GetSMSTwilioVerifyAuthToken returns the value of SMSTwilioVerifyAuthToken.
func (s *UpdateAuthConfigBody) GetSMSTwilioVerifyAuthToken() OptString {
	return s.SMSTwilioVerifyAuthToken
}

// GetSMSTwilioVerifyMessageServiceSid returns the value of SMSTwilioVerifyMessageServiceSid.
func (s *UpdateAuthConfigBody) GetSMSTwilioVerifyMessageServiceSid() OptString {
	return s.SMSTwilioVerifyMessageServiceSid
}

// GetSMSVonageAPIKey returns the value of SMSVonageAPIKey.
func (s *UpdateAuthConfigBody) GetSMSVonageAPIKey() OptString {
	return s.SMSVonageAPIKey
}

// GetSMSVonageAPISecret returns the value of SMSVonageAPISecret.
func (s *UpdateAuthConfigBody) GetSMSVonageAPISecret() OptString {
	return s.SMSVonageAPISecret
}

// GetSMSVonageFrom returns the value of SMSVonageFrom.
func (s *UpdateAuthConfigBody) GetSMSVonageFrom() OptString {
	return s.SMSVonageFrom
}

// GetSMSTemplate returns the value of SMSTemplate.
func (s *UpdateAuthConfigBody) GetSMSTemplate() OptString {
	return s.SMSTemplate
}

// GetHookMfaVerificationAttemptEnabled returns the value of HookMfaVerificationAttemptEnabled.
func (s *UpdateAuthConfigBody) GetHookMfaVerificationAttemptEnabled() OptBool {
	return s.HookMfaVerificationAttemptEnabled
}

// GetHookMfaVerificationAttemptURI returns the value of HookMfaVerificationAttemptURI.
func (s *UpdateAuthConfigBody) GetHookMfaVerificationAttemptURI() OptString {
	return s.HookMfaVerificationAttemptURI
}

// GetHookPasswordVerificationAttemptEnabled returns the value of HookPasswordVerificationAttemptEnabled.
func (s *UpdateAuthConfigBody) GetHookPasswordVerificationAttemptEnabled() OptBool {
	return s.HookPasswordVerificationAttemptEnabled
}

// GetHookPasswordVerificationAttemptURI returns the value of HookPasswordVerificationAttemptURI.
func (s *UpdateAuthConfigBody) GetHookPasswordVerificationAttemptURI() OptString {
	return s.HookPasswordVerificationAttemptURI
}

// GetHookCustomAccessTokenEnabled returns the value of HookCustomAccessTokenEnabled.
func (s *UpdateAuthConfigBody) GetHookCustomAccessTokenEnabled() OptBool {
	return s.HookCustomAccessTokenEnabled
}

// GetHookCustomAccessTokenURI returns the value of HookCustomAccessTokenURI.
func (s *UpdateAuthConfigBody) GetHookCustomAccessTokenURI() OptString {
	return s.HookCustomAccessTokenURI
}

// GetHookSendSMSEnabled returns the value of HookSendSMSEnabled.
func (s *UpdateAuthConfigBody) GetHookSendSMSEnabled() OptBool {
	return s.HookSendSMSEnabled
}

// GetHookSendSMSURI returns the value of HookSendSMSURI.
func (s *UpdateAuthConfigBody) GetHookSendSMSURI() OptString {
	return s.HookSendSMSURI
}

// GetHookSendEmailEnabled returns the value of HookSendEmailEnabled.
func (s *UpdateAuthConfigBody) GetHookSendEmailEnabled() OptBool {
	return s.HookSendEmailEnabled
}

// GetHookSendEmailURI returns the value of HookSendEmailURI.
func (s *UpdateAuthConfigBody) GetHookSendEmailURI() OptString {
	return s.HookSendEmailURI
}

// GetExternalAppleEnabled returns the value of ExternalAppleEnabled.
func (s *UpdateAuthConfigBody) GetExternalAppleEnabled() OptBool {
	return s.ExternalAppleEnabled
}

// GetExternalAppleClientID returns the value of ExternalAppleClientID.
func (s *UpdateAuthConfigBody) GetExternalAppleClientID() OptString {
	return s.ExternalAppleClientID
}

// GetExternalAppleSecret returns the value of ExternalAppleSecret.
func (s *UpdateAuthConfigBody) GetExternalAppleSecret() OptString {
	return s.ExternalAppleSecret
}

// GetExternalAppleAdditionalClientIds returns the value of ExternalAppleAdditionalClientIds.
func (s *UpdateAuthConfigBody) GetExternalAppleAdditionalClientIds() OptString {
	return s.ExternalAppleAdditionalClientIds
}

// GetExternalAzureEnabled returns the value of ExternalAzureEnabled.
func (s *UpdateAuthConfigBody) GetExternalAzureEnabled() OptBool {
	return s.ExternalAzureEnabled
}

// GetExternalAzureClientID returns the value of ExternalAzureClientID.
func (s *UpdateAuthConfigBody) GetExternalAzureClientID() OptString {
	return s.ExternalAzureClientID
}

// GetExternalAzureSecret returns the value of ExternalAzureSecret.
func (s *UpdateAuthConfigBody) GetExternalAzureSecret() OptString {
	return s.ExternalAzureSecret
}

// GetExternalAzureURL returns the value of ExternalAzureURL.
func (s *UpdateAuthConfigBody) GetExternalAzureURL() OptString {
	return s.ExternalAzureURL
}

// GetExternalBitbucketEnabled returns the value of ExternalBitbucketEnabled.
func (s *UpdateAuthConfigBody) GetExternalBitbucketEnabled() OptBool {
	return s.ExternalBitbucketEnabled
}

// GetExternalBitbucketClientID returns the value of ExternalBitbucketClientID.
func (s *UpdateAuthConfigBody) GetExternalBitbucketClientID() OptString {
	return s.ExternalBitbucketClientID
}

// GetExternalBitbucketSecret returns the value of ExternalBitbucketSecret.
func (s *UpdateAuthConfigBody) GetExternalBitbucketSecret() OptString {
	return s.ExternalBitbucketSecret
}

// GetExternalDiscordEnabled returns the value of ExternalDiscordEnabled.
func (s *UpdateAuthConfigBody) GetExternalDiscordEnabled() OptBool {
	return s.ExternalDiscordEnabled
}

// GetExternalDiscordClientID returns the value of ExternalDiscordClientID.
func (s *UpdateAuthConfigBody) GetExternalDiscordClientID() OptString {
	return s.ExternalDiscordClientID
}

// GetExternalDiscordSecret returns the value of ExternalDiscordSecret.
func (s *UpdateAuthConfigBody) GetExternalDiscordSecret() OptString {
	return s.ExternalDiscordSecret
}

// GetExternalFacebookEnabled returns the value of ExternalFacebookEnabled.
func (s *UpdateAuthConfigBody) GetExternalFacebookEnabled() OptBool {
	return s.ExternalFacebookEnabled
}

// GetExternalFacebookClientID returns the value of ExternalFacebookClientID.
func (s *UpdateAuthConfigBody) GetExternalFacebookClientID() OptString {
	return s.ExternalFacebookClientID
}

// GetExternalFacebookSecret returns the value of ExternalFacebookSecret.
func (s *UpdateAuthConfigBody) GetExternalFacebookSecret() OptString {
	return s.ExternalFacebookSecret
}

// GetExternalFigmaEnabled returns the value of ExternalFigmaEnabled.
func (s *UpdateAuthConfigBody) GetExternalFigmaEnabled() OptBool {
	return s.ExternalFigmaEnabled
}

// GetExternalFigmaClientID returns the value of ExternalFigmaClientID.
func (s *UpdateAuthConfigBody) GetExternalFigmaClientID() OptString {
	return s.ExternalFigmaClientID
}

// GetExternalFigmaSecret returns the value of ExternalFigmaSecret.
func (s *UpdateAuthConfigBody) GetExternalFigmaSecret() OptString {
	return s.ExternalFigmaSecret
}

// GetExternalGithubEnabled returns the value of ExternalGithubEnabled.
func (s *UpdateAuthConfigBody) GetExternalGithubEnabled() OptBool {
	return s.ExternalGithubEnabled
}

// GetExternalGithubClientID returns the value of ExternalGithubClientID.
func (s *UpdateAuthConfigBody) GetExternalGithubClientID() OptString {
	return s.ExternalGithubClientID
}

// GetExternalGithubSecret returns the value of ExternalGithubSecret.
func (s *UpdateAuthConfigBody) GetExternalGithubSecret() OptString {
	return s.ExternalGithubSecret
}

// GetExternalGitlabEnabled returns the value of ExternalGitlabEnabled.
func (s *UpdateAuthConfigBody) GetExternalGitlabEnabled() OptBool {
	return s.ExternalGitlabEnabled
}

// GetExternalGitlabClientID returns the value of ExternalGitlabClientID.
func (s *UpdateAuthConfigBody) GetExternalGitlabClientID() OptString {
	return s.ExternalGitlabClientID
}

// GetExternalGitlabSecret returns the value of ExternalGitlabSecret.
func (s *UpdateAuthConfigBody) GetExternalGitlabSecret() OptString {
	return s.ExternalGitlabSecret
}

// GetExternalGitlabURL returns the value of ExternalGitlabURL.
func (s *UpdateAuthConfigBody) GetExternalGitlabURL() OptString {
	return s.ExternalGitlabURL
}

// GetExternalGoogleEnabled returns the value of ExternalGoogleEnabled.
func (s *UpdateAuthConfigBody) GetExternalGoogleEnabled() OptBool {
	return s.ExternalGoogleEnabled
}

// GetExternalGoogleClientID returns the value of ExternalGoogleClientID.
func (s *UpdateAuthConfigBody) GetExternalGoogleClientID() OptString {
	return s.ExternalGoogleClientID
}

// GetExternalGoogleSecret returns the value of ExternalGoogleSecret.
func (s *UpdateAuthConfigBody) GetExternalGoogleSecret() OptString {
	return s.ExternalGoogleSecret
}

// GetExternalGoogleAdditionalClientIds returns the value of ExternalGoogleAdditionalClientIds.
func (s *UpdateAuthConfigBody) GetExternalGoogleAdditionalClientIds() OptString {
	return s.ExternalGoogleAdditionalClientIds
}

// GetExternalGoogleSkipNonceCheck returns the value of ExternalGoogleSkipNonceCheck.
func (s *UpdateAuthConfigBody) GetExternalGoogleSkipNonceCheck() OptBool {
	return s.ExternalGoogleSkipNonceCheck
}

// GetExternalKakaoEnabled returns the value of ExternalKakaoEnabled.
func (s *UpdateAuthConfigBody) GetExternalKakaoEnabled() OptBool {
	return s.ExternalKakaoEnabled
}

// GetExternalKakaoClientID returns the value of ExternalKakaoClientID.
func (s *UpdateAuthConfigBody) GetExternalKakaoClientID() OptString {
	return s.ExternalKakaoClientID
}

// GetExternalKakaoSecret returns the value of ExternalKakaoSecret.
func (s *UpdateAuthConfigBody) GetExternalKakaoSecret() OptString {
	return s.ExternalKakaoSecret
}

// GetExternalKeycloakEnabled returns the value of ExternalKeycloakEnabled.
func (s *UpdateAuthConfigBody) GetExternalKeycloakEnabled() OptBool {
	return s.ExternalKeycloakEnabled
}

// GetExternalKeycloakClientID returns the value of ExternalKeycloakClientID.
func (s *UpdateAuthConfigBody) GetExternalKeycloakClientID() OptString {
	return s.ExternalKeycloakClientID
}

// GetExternalKeycloakSecret returns the value of ExternalKeycloakSecret.
func (s *UpdateAuthConfigBody) GetExternalKeycloakSecret() OptString {
	return s.ExternalKeycloakSecret
}

// GetExternalKeycloakURL returns the value of ExternalKeycloakURL.
func (s *UpdateAuthConfigBody) GetExternalKeycloakURL() OptString {
	return s.ExternalKeycloakURL
}

// GetExternalLinkedinOidcEnabled returns the value of ExternalLinkedinOidcEnabled.
func (s *UpdateAuthConfigBody) GetExternalLinkedinOidcEnabled() OptBool {
	return s.ExternalLinkedinOidcEnabled
}

// GetExternalLinkedinOidcClientID returns the value of ExternalLinkedinOidcClientID.
func (s *UpdateAuthConfigBody) GetExternalLinkedinOidcClientID() OptString {
	return s.ExternalLinkedinOidcClientID
}

// GetExternalLinkedinOidcSecret returns the value of ExternalLinkedinOidcSecret.
func (s *UpdateAuthConfigBody) GetExternalLinkedinOidcSecret() OptString {
	return s.ExternalLinkedinOidcSecret
}

// GetExternalNotionEnabled returns the value of ExternalNotionEnabled.
func (s *UpdateAuthConfigBody) GetExternalNotionEnabled() OptBool {
	return s.ExternalNotionEnabled
}

// GetExternalNotionClientID returns the value of ExternalNotionClientID.
func (s *UpdateAuthConfigBody) GetExternalNotionClientID() OptString {
	return s.ExternalNotionClientID
}

// GetExternalNotionSecret returns the value of ExternalNotionSecret.
func (s *UpdateAuthConfigBody) GetExternalNotionSecret() OptString {
	return s.ExternalNotionSecret
}

// GetExternalSlackEnabled returns the value of ExternalSlackEnabled.
func (s *UpdateAuthConfigBody) GetExternalSlackEnabled() OptBool {
	return s.ExternalSlackEnabled
}

// GetExternalSlackClientID returns the value of ExternalSlackClientID.
func (s *UpdateAuthConfigBody) GetExternalSlackClientID() OptString {
	return s.ExternalSlackClientID
}

// GetExternalSlackSecret returns the value of ExternalSlackSecret.
func (s *UpdateAuthConfigBody) GetExternalSlackSecret() OptString {
	return s.ExternalSlackSecret
}

// GetExternalSpotifyEnabled returns the value of ExternalSpotifyEnabled.
func (s *UpdateAuthConfigBody) GetExternalSpotifyEnabled() OptBool {
	return s.ExternalSpotifyEnabled
}

// GetExternalSpotifyClientID returns the value of ExternalSpotifyClientID.
func (s *UpdateAuthConfigBody) GetExternalSpotifyClientID() OptString {
	return s.ExternalSpotifyClientID
}

// GetExternalSpotifySecret returns the value of ExternalSpotifySecret.
func (s *UpdateAuthConfigBody) GetExternalSpotifySecret() OptString {
	return s.ExternalSpotifySecret
}

// GetExternalTwitchEnabled returns the value of ExternalTwitchEnabled.
func (s *UpdateAuthConfigBody) GetExternalTwitchEnabled() OptBool {
	return s.ExternalTwitchEnabled
}

// GetExternalTwitchClientID returns the value of ExternalTwitchClientID.
func (s *UpdateAuthConfigBody) GetExternalTwitchClientID() OptString {
	return s.ExternalTwitchClientID
}

// GetExternalTwitchSecret returns the value of ExternalTwitchSecret.
func (s *UpdateAuthConfigBody) GetExternalTwitchSecret() OptString {
	return s.ExternalTwitchSecret
}

// GetExternalTwitterEnabled returns the value of ExternalTwitterEnabled.
func (s *UpdateAuthConfigBody) GetExternalTwitterEnabled() OptBool {
	return s.ExternalTwitterEnabled
}

// GetExternalTwitterClientID returns the value of ExternalTwitterClientID.
func (s *UpdateAuthConfigBody) GetExternalTwitterClientID() OptString {
	return s.ExternalTwitterClientID
}

// GetExternalTwitterSecret returns the value of ExternalTwitterSecret.
func (s *UpdateAuthConfigBody) GetExternalTwitterSecret() OptString {
	return s.ExternalTwitterSecret
}

// GetExternalWorkosEnabled returns the value of ExternalWorkosEnabled.
func (s *UpdateAuthConfigBody) GetExternalWorkosEnabled() OptBool {
	return s.ExternalWorkosEnabled
}

// GetExternalWorkosClientID returns the value of ExternalWorkosClientID.
func (s *UpdateAuthConfigBody) GetExternalWorkosClientID() OptString {
	return s.ExternalWorkosClientID
}

// GetExternalWorkosSecret returns the value of ExternalWorkosSecret.
func (s *UpdateAuthConfigBody) GetExternalWorkosSecret() OptString {
	return s.ExternalWorkosSecret
}

// GetExternalWorkosURL returns the value of ExternalWorkosURL.
func (s *UpdateAuthConfigBody) GetExternalWorkosURL() OptString {
	return s.ExternalWorkosURL
}

// GetExternalZoomEnabled returns the value of ExternalZoomEnabled.
func (s *UpdateAuthConfigBody) GetExternalZoomEnabled() OptBool {
	return s.ExternalZoomEnabled
}

// GetExternalZoomClientID returns the value of ExternalZoomClientID.
func (s *UpdateAuthConfigBody) GetExternalZoomClientID() OptString {
	return s.ExternalZoomClientID
}

// GetExternalZoomSecret returns the value of ExternalZoomSecret.
func (s *UpdateAuthConfigBody) GetExternalZoomSecret() OptString {
	return s.ExternalZoomSecret
}

// SetSiteURL sets the value of SiteURL.
func (s *UpdateAuthConfigBody) SetSiteURL(val OptString) {
	s.SiteURL = val
}

// SetDisableSignup sets the value of DisableSignup.
func (s *UpdateAuthConfigBody) SetDisableSignup(val OptBool) {
	s.DisableSignup = val
}

// SetJwtExp sets the value of JwtExp.
func (s *UpdateAuthConfigBody) SetJwtExp(val OptFloat64) {
	s.JwtExp = val
}

// SetSMTPAdminEmail sets the value of SMTPAdminEmail.
func (s *UpdateAuthConfigBody) SetSMTPAdminEmail(val OptString) {
	s.SMTPAdminEmail = val
}

// SetSMTPHost sets the value of SMTPHost.
func (s *UpdateAuthConfigBody) SetSMTPHost(val OptString) {
	s.SMTPHost = val
}

// SetSMTPPort sets the value of SMTPPort.
func (s *UpdateAuthConfigBody) SetSMTPPort(val OptString) {
	s.SMTPPort = val
}

// SetSMTPUser sets the value of SMTPUser.
func (s *UpdateAuthConfigBody) SetSMTPUser(val OptString) {
	s.SMTPUser = val
}

// SetSMTPPass sets the value of SMTPPass.
func (s *UpdateAuthConfigBody) SetSMTPPass(val OptString) {
	s.SMTPPass = val
}

// SetSMTPMaxFrequency sets the value of SMTPMaxFrequency.
func (s *UpdateAuthConfigBody) SetSMTPMaxFrequency(val OptFloat64) {
	s.SMTPMaxFrequency = val
}

// SetSMTPSenderName sets the value of SMTPSenderName.
func (s *UpdateAuthConfigBody) SetSMTPSenderName(val OptString) {
	s.SMTPSenderName = val
}

// SetMailerAllowUnverifiedEmailSignIns sets the value of MailerAllowUnverifiedEmailSignIns.
func (s *UpdateAuthConfigBody) SetMailerAllowUnverifiedEmailSignIns(val OptBool) {
	s.MailerAllowUnverifiedEmailSignIns = val
}

// SetMailerAutoconfirm sets the value of MailerAutoconfirm.
func (s *UpdateAuthConfigBody) SetMailerAutoconfirm(val OptBool) {
	s.MailerAutoconfirm = val
}

// SetMailerSubjectsInvite sets the value of MailerSubjectsInvite.
func (s *UpdateAuthConfigBody) SetMailerSubjectsInvite(val OptString) {
	s.MailerSubjectsInvite = val
}

// SetMailerSubjectsConfirmation sets the value of MailerSubjectsConfirmation.
func (s *UpdateAuthConfigBody) SetMailerSubjectsConfirmation(val OptString) {
	s.MailerSubjectsConfirmation = val
}

// SetMailerSubjectsRecovery sets the value of MailerSubjectsRecovery.
func (s *UpdateAuthConfigBody) SetMailerSubjectsRecovery(val OptString) {
	s.MailerSubjectsRecovery = val
}

// SetMailerSubjectsEmailChange sets the value of MailerSubjectsEmailChange.
func (s *UpdateAuthConfigBody) SetMailerSubjectsEmailChange(val OptString) {
	s.MailerSubjectsEmailChange = val
}

// SetMailerSubjectsMagicLink sets the value of MailerSubjectsMagicLink.
func (s *UpdateAuthConfigBody) SetMailerSubjectsMagicLink(val OptString) {
	s.MailerSubjectsMagicLink = val
}

// SetMailerSubjectsReauthentication sets the value of MailerSubjectsReauthentication.
func (s *UpdateAuthConfigBody) SetMailerSubjectsReauthentication(val OptString) {
	s.MailerSubjectsReauthentication = val
}

// SetMailerTemplatesInviteContent sets the value of MailerTemplatesInviteContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesInviteContent(val OptString) {
	s.MailerTemplatesInviteContent = val
}

// SetMailerTemplatesConfirmationContent sets the value of MailerTemplatesConfirmationContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesConfirmationContent(val OptString) {
	s.MailerTemplatesConfirmationContent = val
}

// SetMailerTemplatesRecoveryContent sets the value of MailerTemplatesRecoveryContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesRecoveryContent(val OptString) {
	s.MailerTemplatesRecoveryContent = val
}

// SetMailerTemplatesEmailChangeContent sets the value of MailerTemplatesEmailChangeContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesEmailChangeContent(val OptString) {
	s.MailerTemplatesEmailChangeContent = val
}

// SetMailerTemplatesMagicLinkContent sets the value of MailerTemplatesMagicLinkContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesMagicLinkContent(val OptString) {
	s.MailerTemplatesMagicLinkContent = val
}

// SetMailerTemplatesReauthenticationContent sets the value of MailerTemplatesReauthenticationContent.
func (s *UpdateAuthConfigBody) SetMailerTemplatesReauthenticationContent(val OptString) {
	s.MailerTemplatesReauthenticationContent = val
}

// SetMfaMaxEnrolledFactors sets the value of MfaMaxEnrolledFactors.
func (s *UpdateAuthConfigBody) SetMfaMaxEnrolledFactors(val OptFloat64) {
	s.MfaMaxEnrolledFactors = val
}

// SetURIAllowList sets the value of URIAllowList.
func (s *UpdateAuthConfigBody) SetURIAllowList(val OptString) {
	s.URIAllowList = val
}

// SetExternalAnonymousUsersEnabled sets the value of ExternalAnonymousUsersEnabled.
func (s *UpdateAuthConfigBody) SetExternalAnonymousUsersEnabled(val OptBool) {
	s.ExternalAnonymousUsersEnabled = val
}

// SetExternalEmailEnabled sets the value of ExternalEmailEnabled.
func (s *UpdateAuthConfigBody) SetExternalEmailEnabled(val OptBool) {
	s.ExternalEmailEnabled = val
}

// SetExternalPhoneEnabled sets the value of ExternalPhoneEnabled.
func (s *UpdateAuthConfigBody) SetExternalPhoneEnabled(val OptBool) {
	s.ExternalPhoneEnabled = val
}

// SetSamlEnabled sets the value of SamlEnabled.
func (s *UpdateAuthConfigBody) SetSamlEnabled(val OptBool) {
	s.SamlEnabled = val
}

// SetSecurityCaptchaEnabled sets the value of SecurityCaptchaEnabled.
func (s *UpdateAuthConfigBody) SetSecurityCaptchaEnabled(val OptBool) {
	s.SecurityCaptchaEnabled = val
}

// SetSecurityCaptchaProvider sets the value of SecurityCaptchaProvider.
func (s *UpdateAuthConfigBody) SetSecurityCaptchaProvider(val OptString) {
	s.SecurityCaptchaProvider = val
}

// SetSecurityCaptchaSecret sets the value of SecurityCaptchaSecret.
func (s *UpdateAuthConfigBody) SetSecurityCaptchaSecret(val OptString) {
	s.SecurityCaptchaSecret = val
}

// SetSessionsTimebox sets the value of SessionsTimebox.
func (s *UpdateAuthConfigBody) SetSessionsTimebox(val OptFloat64) {
	s.SessionsTimebox = val
}

// SetSessionsInactivityTimeout sets the value of SessionsInactivityTimeout.
func (s *UpdateAuthConfigBody) SetSessionsInactivityTimeout(val OptFloat64) {
	s.SessionsInactivityTimeout = val
}

// SetSessionsSinglePerUser sets the value of SessionsSinglePerUser.
func (s *UpdateAuthConfigBody) SetSessionsSinglePerUser(val OptBool) {
	s.SessionsSinglePerUser = val
}

// SetSessionsTags sets the value of SessionsTags.
func (s *UpdateAuthConfigBody) SetSessionsTags(val OptString) {
	s.SessionsTags = val
}

// SetRateLimitAnonymousUsers sets the value of RateLimitAnonymousUsers.
func (s *UpdateAuthConfigBody) SetRateLimitAnonymousUsers(val OptFloat64) {
	s.RateLimitAnonymousUsers = val
}

// SetRateLimitEmailSent sets the value of RateLimitEmailSent.
func (s *UpdateAuthConfigBody) SetRateLimitEmailSent(val OptFloat64) {
	s.RateLimitEmailSent = val
}

// SetRateLimitSMSSent sets the value of RateLimitSMSSent.
func (s *UpdateAuthConfigBody) SetRateLimitSMSSent(val OptFloat64) {
	s.RateLimitSMSSent = val
}

// SetRateLimitVerify sets the value of RateLimitVerify.
func (s *UpdateAuthConfigBody) SetRateLimitVerify(val OptFloat64) {
	s.RateLimitVerify = val
}

// SetRateLimitTokenRefresh sets the value of RateLimitTokenRefresh.
func (s *UpdateAuthConfigBody) SetRateLimitTokenRefresh(val OptFloat64) {
	s.RateLimitTokenRefresh = val
}

// SetMailerSecureEmailChangeEnabled sets the value of MailerSecureEmailChangeEnabled.
func (s *UpdateAuthConfigBody) SetMailerSecureEmailChangeEnabled(val OptBool) {
	s.MailerSecureEmailChangeEnabled = val
}

// SetRefreshTokenRotationEnabled sets the value of RefreshTokenRotationEnabled.
func (s *UpdateAuthConfigBody) SetRefreshTokenRotationEnabled(val OptBool) {
	s.RefreshTokenRotationEnabled = val
}

// SetPasswordHibpEnabled sets the value of PasswordHibpEnabled.
func (s *UpdateAuthConfigBody) SetPasswordHibpEnabled(val OptBool) {
	s.PasswordHibpEnabled = val
}

// SetPasswordMinLength sets the value of PasswordMinLength.
func (s *UpdateAuthConfigBody) SetPasswordMinLength(val OptFloat64) {
	s.PasswordMinLength = val
}

// SetPasswordRequiredCharacters sets the value of PasswordRequiredCharacters.
func (s *UpdateAuthConfigBody) SetPasswordRequiredCharacters(val OptUpdateAuthConfigBodyPasswordRequiredCharacters) {
	s.PasswordRequiredCharacters = val
}

// SetSecurityManualLinkingEnabled sets the value of SecurityManualLinkingEnabled.
func (s *UpdateAuthConfigBody) SetSecurityManualLinkingEnabled(val OptBool) {
	s.SecurityManualLinkingEnabled = val
}

// SetSecurityUpdatePasswordRequireReauthentication sets the value of SecurityUpdatePasswordRequireReauthentication.
func (s *UpdateAuthConfigBody) SetSecurityUpdatePasswordRequireReauthentication(val OptBool) {
	s.SecurityUpdatePasswordRequireReauthentication = val
}

// SetSecurityRefreshTokenReuseInterval sets the value of SecurityRefreshTokenReuseInterval.
func (s *UpdateAuthConfigBody) SetSecurityRefreshTokenReuseInterval(val OptFloat64) {
	s.SecurityRefreshTokenReuseInterval = val
}

// SetMailerOtpExp sets the value of MailerOtpExp.
func (s *UpdateAuthConfigBody) SetMailerOtpExp(val OptFloat64) {
	s.MailerOtpExp = val
}

// SetSMSAutoconfirm sets the value of SMSAutoconfirm.
func (s *UpdateAuthConfigBody) SetSMSAutoconfirm(val OptBool) {
	s.SMSAutoconfirm = val
}

// SetSMSMaxFrequency sets the value of SMSMaxFrequency.
func (s *UpdateAuthConfigBody) SetSMSMaxFrequency(val OptFloat64) {
	s.SMSMaxFrequency = val
}

// SetSMSOtpExp sets the value of SMSOtpExp.
func (s *UpdateAuthConfigBody) SetSMSOtpExp(val OptFloat64) {
	s.SMSOtpExp = val
}

// SetSMSOtpLength sets the value of SMSOtpLength.
func (s *UpdateAuthConfigBody) SetSMSOtpLength(val OptFloat64) {
	s.SMSOtpLength = val
}

// SetSMSProvider sets the value of SMSProvider.
func (s *UpdateAuthConfigBody) SetSMSProvider(val OptString) {
	s.SMSProvider = val
}

// SetSMSMessagebirdAccessKey sets the value of SMSMessagebirdAccessKey.
func (s *UpdateAuthConfigBody) SetSMSMessagebirdAccessKey(val OptString) {
	s.SMSMessagebirdAccessKey = val
}

// SetSMSMessagebirdOriginator sets the value of SMSMessagebirdOriginator.
func (s *UpdateAuthConfigBody) SetSMSMessagebirdOriginator(val OptString) {
	s.SMSMessagebirdOriginator = val
}

// SetSMSTestOtp sets the value of SMSTestOtp.
func (s *UpdateAuthConfigBody) SetSMSTestOtp(val OptString) {
	s.SMSTestOtp = val
}

// SetSMSTestOtpValidUntil sets the value of SMSTestOtpValidUntil.
func (s *UpdateAuthConfigBody) SetSMSTestOtpValidUntil(val OptString) {
	s.SMSTestOtpValidUntil = val
}

// SetSMSTextlocalAPIKey sets the value of SMSTextlocalAPIKey.
func (s *UpdateAuthConfigBody) SetSMSTextlocalAPIKey(val OptString) {
	s.SMSTextlocalAPIKey = val
}

// SetSMSTextlocalSender sets the value of SMSTextlocalSender.
func (s *UpdateAuthConfigBody) SetSMSTextlocalSender(val OptString) {
	s.SMSTextlocalSender = val
}

// SetSMSTwilioAccountSid sets the value of SMSTwilioAccountSid.
func (s *UpdateAuthConfigBody) SetSMSTwilioAccountSid(val OptString) {
	s.SMSTwilioAccountSid = val
}

// SetSMSTwilioAuthToken sets the value of SMSTwilioAuthToken.
func (s *UpdateAuthConfigBody) SetSMSTwilioAuthToken(val OptString) {
	s.SMSTwilioAuthToken = val
}

// SetSMSTwilioContentSid sets the value of SMSTwilioContentSid.
func (s *UpdateAuthConfigBody) SetSMSTwilioContentSid(val OptString) {
	s.SMSTwilioContentSid = val
}

// SetSMSTwilioMessageServiceSid sets the value of SMSTwilioMessageServiceSid.
func (s *UpdateAuthConfigBody) SetSMSTwilioMessageServiceSid(val OptString) {
	s.SMSTwilioMessageServiceSid = val
}

// SetSMSTwilioVerifyAccountSid sets the value of SMSTwilioVerifyAccountSid.
func (s *UpdateAuthConfigBody) SetSMSTwilioVerifyAccountSid(val OptString) {
	s.SMSTwilioVerifyAccountSid = val
}

// SetSMSTwilioVerifyAuthToken sets the value of SMSTwilioVerifyAuthToken.
func (s *UpdateAuthConfigBody) SetSMSTwilioVerifyAuthToken(val OptString) {
	s.SMSTwilioVerifyAuthToken = val
}

// SetSMSTwilioVerifyMessageServiceSid sets the value of SMSTwilioVerifyMessageServiceSid.
func (s *UpdateAuthConfigBody) SetSMSTwilioVerifyMessageServiceSid(val OptString) {
	s.SMSTwilioVerifyMessageServiceSid = val
}

// SetSMSVonageAPIKey sets the value of SMSVonageAPIKey.
func (s *UpdateAuthConfigBody) SetSMSVonageAPIKey(val OptString) {
	s.SMSVonageAPIKey = val
}

// SetSMSVonageAPISecret sets the value of SMSVonageAPISecret.
func (s *UpdateAuthConfigBody) SetSMSVonageAPISecret(val OptString) {
	s.SMSVonageAPISecret = val
}

// SetSMSVonageFrom sets the value of SMSVonageFrom.
func (s *UpdateAuthConfigBody) SetSMSVonageFrom(val OptString) {
	s.SMSVonageFrom = val
}

// SetSMSTemplate sets the value of SMSTemplate.
func (s *UpdateAuthConfigBody) SetSMSTemplate(val OptString) {
	s.SMSTemplate = val
}

// SetHookMfaVerificationAttemptEnabled sets the value of HookMfaVerificationAttemptEnabled.
func (s *UpdateAuthConfigBody) SetHookMfaVerificationAttemptEnabled(val OptBool) {
	s.HookMfaVerificationAttemptEnabled = val
}

// SetHookMfaVerificationAttemptURI sets the value of HookMfaVerificationAttemptURI.
func (s *UpdateAuthConfigBody) SetHookMfaVerificationAttemptURI(val OptString) {
	s.HookMfaVerificationAttemptURI = val
}

// SetHookPasswordVerificationAttemptEnabled sets the value of HookPasswordVerificationAttemptEnabled.
func (s *UpdateAuthConfigBody) SetHookPasswordVerificationAttemptEnabled(val OptBool) {
	s.HookPasswordVerificationAttemptEnabled = val
}

// SetHookPasswordVerificationAttemptURI sets the value of HookPasswordVerificationAttemptURI.
func (s *UpdateAuthConfigBody) SetHookPasswordVerificationAttemptURI(val OptString) {
	s.HookPasswordVerificationAttemptURI = val
}

// SetHookCustomAccessTokenEnabled sets the value of HookCustomAccessTokenEnabled.
func (s *UpdateAuthConfigBody) SetHookCustomAccessTokenEnabled(val OptBool) {
	s.HookCustomAccessTokenEnabled = val
}

// SetHookCustomAccessTokenURI sets the value of HookCustomAccessTokenURI.
func (s *UpdateAuthConfigBody) SetHookCustomAccessTokenURI(val OptString) {
	s.HookCustomAccessTokenURI = val
}

// SetHookSendSMSEnabled sets the value of HookSendSMSEnabled.
func (s *UpdateAuthConfigBody) SetHookSendSMSEnabled(val OptBool) {
	s.HookSendSMSEnabled = val
}

// SetHookSendSMSURI sets the value of HookSendSMSURI.
func (s *UpdateAuthConfigBody) SetHookSendSMSURI(val OptString) {
	s.HookSendSMSURI = val
}

// SetHookSendEmailEnabled sets the value of HookSendEmailEnabled.
func (s *UpdateAuthConfigBody) SetHookSendEmailEnabled(val OptBool) {
	s.HookSendEmailEnabled = val
}

// SetHookSendEmailURI sets the value of HookSendEmailURI.
func (s *UpdateAuthConfigBody) SetHookSendEmailURI(val OptString) {
	s.HookSendEmailURI = val
}

// SetExternalAppleEnabled sets the value of ExternalAppleEnabled.
func (s *UpdateAuthConfigBody) SetExternalAppleEnabled(val OptBool) {
	s.ExternalAppleEnabled = val
}

// SetExternalAppleClientID sets the value of ExternalAppleClientID.
func (s *UpdateAuthConfigBody) SetExternalAppleClientID(val OptString) {
	s.ExternalAppleClientID = val
}

// SetExternalAppleSecret sets the value of ExternalAppleSecret.
func (s *UpdateAuthConfigBody) SetExternalAppleSecret(val OptString) {
	s.ExternalAppleSecret = val
}

// SetExternalAppleAdditionalClientIds sets the value of ExternalAppleAdditionalClientIds.
func (s *UpdateAuthConfigBody) SetExternalAppleAdditionalClientIds(val OptString) {
	s.ExternalAppleAdditionalClientIds = val
}

// SetExternalAzureEnabled sets the value of ExternalAzureEnabled.
func (s *UpdateAuthConfigBody) SetExternalAzureEnabled(val OptBool) {
	s.ExternalAzureEnabled = val
}

// SetExternalAzureClientID sets the value of ExternalAzureClientID.
func (s *UpdateAuthConfigBody) SetExternalAzureClientID(val OptString) {
	s.ExternalAzureClientID = val
}

// SetExternalAzureSecret sets the value of ExternalAzureSecret.
func (s *UpdateAuthConfigBody) SetExternalAzureSecret(val OptString) {
	s.ExternalAzureSecret = val
}

// SetExternalAzureURL sets the value of ExternalAzureURL.
func (s *UpdateAuthConfigBody) SetExternalAzureURL(val OptString) {
	s.ExternalAzureURL = val
}

// SetExternalBitbucketEnabled sets the value of ExternalBitbucketEnabled.
func (s *UpdateAuthConfigBody) SetExternalBitbucketEnabled(val OptBool) {
	s.ExternalBitbucketEnabled = val
}

// SetExternalBitbucketClientID sets the value of ExternalBitbucketClientID.
func (s *UpdateAuthConfigBody) SetExternalBitbucketClientID(val OptString) {
	s.ExternalBitbucketClientID = val
}

// SetExternalBitbucketSecret sets the value of ExternalBitbucketSecret.
func (s *UpdateAuthConfigBody) SetExternalBitbucketSecret(val OptString) {
	s.ExternalBitbucketSecret = val
}

// SetExternalDiscordEnabled sets the value of ExternalDiscordEnabled.
func (s *UpdateAuthConfigBody) SetExternalDiscordEnabled(val OptBool) {
	s.ExternalDiscordEnabled = val
}

// SetExternalDiscordClientID sets the value of ExternalDiscordClientID.
func (s *UpdateAuthConfigBody) SetExternalDiscordClientID(val OptString) {
	s.ExternalDiscordClientID = val
}

// SetExternalDiscordSecret sets the value of ExternalDiscordSecret.
func (s *UpdateAuthConfigBody) SetExternalDiscordSecret(val OptString) {
	s.ExternalDiscordSecret = val
}

// SetExternalFacebookEnabled sets the value of ExternalFacebookEnabled.
func (s *UpdateAuthConfigBody) SetExternalFacebookEnabled(val OptBool) {
	s.ExternalFacebookEnabled = val
}

// SetExternalFacebookClientID sets the value of ExternalFacebookClientID.
func (s *UpdateAuthConfigBody) SetExternalFacebookClientID(val OptString) {
	s.ExternalFacebookClientID = val
}

// SetExternalFacebookSecret sets the value of ExternalFacebookSecret.
func (s *UpdateAuthConfigBody) SetExternalFacebookSecret(val OptString) {
	s.ExternalFacebookSecret = val
}

// SetExternalFigmaEnabled sets the value of ExternalFigmaEnabled.
func (s *UpdateAuthConfigBody) SetExternalFigmaEnabled(val OptBool) {
	s.ExternalFigmaEnabled = val
}

// SetExternalFigmaClientID sets the value of ExternalFigmaClientID.
func (s *UpdateAuthConfigBody) SetExternalFigmaClientID(val OptString) {
	s.ExternalFigmaClientID = val
}

// SetExternalFigmaSecret sets the value of ExternalFigmaSecret.
func (s *UpdateAuthConfigBody) SetExternalFigmaSecret(val OptString) {
	s.ExternalFigmaSecret = val
}

// SetExternalGithubEnabled sets the value of ExternalGithubEnabled.
func (s *UpdateAuthConfigBody) SetExternalGithubEnabled(val OptBool) {
	s.ExternalGithubEnabled = val
}

// SetExternalGithubClientID sets the value of ExternalGithubClientID.
func (s *UpdateAuthConfigBody) SetExternalGithubClientID(val OptString) {
	s.ExternalGithubClientID = val
}

// SetExternalGithubSecret sets the value of ExternalGithubSecret.
func (s *UpdateAuthConfigBody) SetExternalGithubSecret(val OptString) {
	s.ExternalGithubSecret = val
}

// SetExternalGitlabEnabled sets the value of ExternalGitlabEnabled.
func (s *UpdateAuthConfigBody) SetExternalGitlabEnabled(val OptBool) {
	s.ExternalGitlabEnabled = val
}

// SetExternalGitlabClientID sets the value of ExternalGitlabClientID.
func (s *UpdateAuthConfigBody) SetExternalGitlabClientID(val OptString) {
	s.ExternalGitlabClientID = val
}

// SetExternalGitlabSecret sets the value of ExternalGitlabSecret.
func (s *UpdateAuthConfigBody) SetExternalGitlabSecret(val OptString) {
	s.ExternalGitlabSecret = val
}

// SetExternalGitlabURL sets the value of ExternalGitlabURL.
func (s *UpdateAuthConfigBody) SetExternalGitlabURL(val OptString) {
	s.ExternalGitlabURL = val
}

// SetExternalGoogleEnabled sets the value of ExternalGoogleEnabled.
func (s *UpdateAuthConfigBody) SetExternalGoogleEnabled(val OptBool) {
	s.ExternalGoogleEnabled = val
}

// SetExternalGoogleClientID sets the value of ExternalGoogleClientID.
func (s *UpdateAuthConfigBody) SetExternalGoogleClientID(val OptString) {
	s.ExternalGoogleClientID = val
}

// SetExternalGoogleSecret sets the value of ExternalGoogleSecret.
func (s *UpdateAuthConfigBody) SetExternalGoogleSecret(val OptString) {
	s.ExternalGoogleSecret = val
}

// SetExternalGoogleAdditionalClientIds sets the value of ExternalGoogleAdditionalClientIds.
func (s *UpdateAuthConfigBody) SetExternalGoogleAdditionalClientIds(val OptString) {
	s.ExternalGoogleAdditionalClientIds = val
}

// SetExternalGoogleSkipNonceCheck sets the value of ExternalGoogleSkipNonceCheck.
func (s *UpdateAuthConfigBody) SetExternalGoogleSkipNonceCheck(val OptBool) {
	s.ExternalGoogleSkipNonceCheck = val
}

// SetExternalKakaoEnabled sets the value of ExternalKakaoEnabled.
func (s *UpdateAuthConfigBody) SetExternalKakaoEnabled(val OptBool) {
	s.ExternalKakaoEnabled = val
}

// SetExternalKakaoClientID sets the value of ExternalKakaoClientID.
func (s *UpdateAuthConfigBody) SetExternalKakaoClientID(val OptString) {
	s.ExternalKakaoClientID = val
}

// SetExternalKakaoSecret sets the value of ExternalKakaoSecret.
func (s *UpdateAuthConfigBody) SetExternalKakaoSecret(val OptString) {
	s.ExternalKakaoSecret = val
}

// SetExternalKeycloakEnabled sets the value of ExternalKeycloakEnabled.
func (s *UpdateAuthConfigBody) SetExternalKeycloakEnabled(val OptBool) {
	s.ExternalKeycloakEnabled = val
}

// SetExternalKeycloakClientID sets the value of ExternalKeycloakClientID.
func (s *UpdateAuthConfigBody) SetExternalKeycloakClientID(val OptString) {
	s.ExternalKeycloakClientID = val
}

// SetExternalKeycloakSecret sets the value of ExternalKeycloakSecret.
func (s *UpdateAuthConfigBody) SetExternalKeycloakSecret(val OptString) {
	s.ExternalKeycloakSecret = val
}

// SetExternalKeycloakURL sets the value of ExternalKeycloakURL.
func (s *UpdateAuthConfigBody) SetExternalKeycloakURL(val OptString) {
	s.ExternalKeycloakURL = val
}

// SetExternalLinkedinOidcEnabled sets the value of ExternalLinkedinOidcEnabled.
func (s *UpdateAuthConfigBody) SetExternalLinkedinOidcEnabled(val OptBool) {
	s.ExternalLinkedinOidcEnabled = val
}

// SetExternalLinkedinOidcClientID sets the value of ExternalLinkedinOidcClientID.
func (s *UpdateAuthConfigBody) SetExternalLinkedinOidcClientID(val OptString) {
	s.ExternalLinkedinOidcClientID = val
}

// SetExternalLinkedinOidcSecret sets the value of ExternalLinkedinOidcSecret.
func (s *UpdateAuthConfigBody) SetExternalLinkedinOidcSecret(val OptString) {
	s.ExternalLinkedinOidcSecret = val
}

// SetExternalNotionEnabled sets the value of ExternalNotionEnabled.
func (s *UpdateAuthConfigBody) SetExternalNotionEnabled(val OptBool) {
	s.ExternalNotionEnabled = val
}

// SetExternalNotionClientID sets the value of ExternalNotionClientID.
func (s *UpdateAuthConfigBody) SetExternalNotionClientID(val OptString) {
	s.ExternalNotionClientID = val
}

// SetExternalNotionSecret sets the value of ExternalNotionSecret.
func (s *UpdateAuthConfigBody) SetExternalNotionSecret(val OptString) {
	s.ExternalNotionSecret = val
}

// SetExternalSlackEnabled sets the value of ExternalSlackEnabled.
func (s *UpdateAuthConfigBody) SetExternalSlackEnabled(val OptBool) {
	s.ExternalSlackEnabled = val
}

// SetExternalSlackClientID sets the value of ExternalSlackClientID.
func (s *UpdateAuthConfigBody) SetExternalSlackClientID(val OptString) {
	s.ExternalSlackClientID = val
}

// SetExternalSlackSecret sets the value of ExternalSlackSecret.
func (s *UpdateAuthConfigBody) SetExternalSlackSecret(val OptString) {
	s.ExternalSlackSecret = val
}

// SetExternalSpotifyEnabled sets the value of ExternalSpotifyEnabled.
func (s *UpdateAuthConfigBody) SetExternalSpotifyEnabled(val OptBool) {
	s.ExternalSpotifyEnabled = val
}

// SetExternalSpotifyClientID sets the value of ExternalSpotifyClientID.
func (s *UpdateAuthConfigBody) SetExternalSpotifyClientID(val OptString) {
	s.ExternalSpotifyClientID = val
}

// SetExternalSpotifySecret sets the value of ExternalSpotifySecret.
func (s *UpdateAuthConfigBody) SetExternalSpotifySecret(val OptString) {
	s.ExternalSpotifySecret = val
}

// SetExternalTwitchEnabled sets the value of ExternalTwitchEnabled.
func (s *UpdateAuthConfigBody) SetExternalTwitchEnabled(val OptBool) {
	s.ExternalTwitchEnabled = val
}

// SetExternalTwitchClientID sets the value of ExternalTwitchClientID.
func (s *UpdateAuthConfigBody) SetExternalTwitchClientID(val OptString) {
	s.ExternalTwitchClientID = val
}

// SetExternalTwitchSecret sets the value of ExternalTwitchSecret.
func (s *UpdateAuthConfigBody) SetExternalTwitchSecret(val OptString) {
	s.ExternalTwitchSecret = val
}

// SetExternalTwitterEnabled sets the value of ExternalTwitterEnabled.
func (s *UpdateAuthConfigBody) SetExternalTwitterEnabled(val OptBool) {
	s.ExternalTwitterEnabled = val
}

// SetExternalTwitterClientID sets the value of ExternalTwitterClientID.
func (s *UpdateAuthConfigBody) SetExternalTwitterClientID(val OptString) {
	s.ExternalTwitterClientID = val
}

// SetExternalTwitterSecret sets the value of ExternalTwitterSecret.
func (s *UpdateAuthConfigBody) SetExternalTwitterSecret(val OptString) {
	s.ExternalTwitterSecret = val
}

// SetExternalWorkosEnabled sets the value of ExternalWorkosEnabled.
func (s *UpdateAuthConfigBody) SetExternalWorkosEnabled(val OptBool) {
	s.ExternalWorkosEnabled = val
}

// SetExternalWorkosClientID sets the value of ExternalWorkosClientID.
func (s *UpdateAuthConfigBody) SetExternalWorkosClientID(val OptString) {
	s.ExternalWorkosClientID = val
}

// SetExternalWorkosSecret sets the value of ExternalWorkosSecret.
func (s *UpdateAuthConfigBody) SetExternalWorkosSecret(val OptString) {
	s.ExternalWorkosSecret = val
}

// SetExternalWorkosURL sets the value of ExternalWorkosURL.
func (s *UpdateAuthConfigBody) SetExternalWorkosURL(val OptString) {
	s.ExternalWorkosURL = val
}

// SetExternalZoomEnabled sets the value of ExternalZoomEnabled.
func (s *UpdateAuthConfigBody) SetExternalZoomEnabled(val OptBool) {
	s.ExternalZoomEnabled = val
}

// SetExternalZoomClientID sets the value of ExternalZoomClientID.
func (s *UpdateAuthConfigBody) SetExternalZoomClientID(val OptString) {
	s.ExternalZoomClientID = val
}

// SetExternalZoomSecret sets the value of ExternalZoomSecret.
func (s *UpdateAuthConfigBody) SetExternalZoomSecret(val OptString) {
	s.ExternalZoomSecret = val
}

type UpdateAuthConfigBodyPasswordRequiredCharacters string

const (
	UpdateAuthConfigBodyPasswordRequiredCharacters_0 UpdateAuthConfigBodyPasswordRequiredCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"
	UpdateAuthConfigBodyPasswordRequiredCharacters_1 UpdateAuthConfigBodyPasswordRequiredCharacters = "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"
	UpdateAuthConfigBodyPasswordRequiredCharacters_2 UpdateAuthConfigBodyPasswordRequiredCharacters = "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\"|<>?,./`~"
	UpdateAuthConfigBodyPasswordRequiredCharacters_3 UpdateAuthConfigBodyPasswordRequiredCharacters = ""
)

// AllValues returns all UpdateAuthConfigBodyPasswordRequiredCharacters values.
func (UpdateAuthConfigBodyPasswordRequiredCharacters) AllValues() []UpdateAuthConfigBodyPasswordRequiredCharacters {
	return []UpdateAuthConfigBodyPasswordRequiredCharacters{
		UpdateAuthConfigBodyPasswordRequiredCharacters_0,
		UpdateAuthConfigBodyPasswordRequiredCharacters_1,
		UpdateAuthConfigBodyPasswordRequiredCharacters_2,
		UpdateAuthConfigBodyPasswordRequiredCharacters_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateAuthConfigBodyPasswordRequiredCharacters) MarshalText() ([]byte, error) {
	switch s {
	case UpdateAuthConfigBodyPasswordRequiredCharacters_0:
		return []byte(s), nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_1:
		return []byte(s), nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_2:
		return []byte(s), nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateAuthConfigBodyPasswordRequiredCharacters) UnmarshalText(data []byte) error {
	switch UpdateAuthConfigBodyPasswordRequiredCharacters(data) {
	case UpdateAuthConfigBodyPasswordRequiredCharacters_0:
		*s = UpdateAuthConfigBodyPasswordRequiredCharacters_0
		return nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_1:
		*s = UpdateAuthConfigBodyPasswordRequiredCharacters_1
		return nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_2:
		*s = UpdateAuthConfigBodyPasswordRequiredCharacters_2
		return nil
	case UpdateAuthConfigBodyPasswordRequiredCharacters_3:
		*s = UpdateAuthConfigBodyPasswordRequiredCharacters_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateBranchBody
type UpdateBranchBody struct {
	BranchName  OptString `json:"branch_name"`
	GitBranch   OptString `json:"git_branch"`
	ResetOnPush OptBool   `json:"reset_on_push"`
	Persistent  OptBool   `json:"persistent"`
}

// GetBranchName returns the value of BranchName.
func (s *UpdateBranchBody) GetBranchName() OptString {
	return s.BranchName
}

// GetGitBranch returns the value of GitBranch.
func (s *UpdateBranchBody) GetGitBranch() OptString {
	return s.GitBranch
}

// GetResetOnPush returns the value of ResetOnPush.
func (s *UpdateBranchBody) GetResetOnPush() OptBool {
	return s.ResetOnPush
}

// GetPersistent returns the value of Persistent.
func (s *UpdateBranchBody) GetPersistent() OptBool {
	return s.Persistent
}

// SetBranchName sets the value of BranchName.
func (s *UpdateBranchBody) SetBranchName(val OptString) {
	s.BranchName = val
}

// SetGitBranch sets the value of GitBranch.
func (s *UpdateBranchBody) SetGitBranch(val OptString) {
	s.GitBranch = val
}

// SetResetOnPush sets the value of ResetOnPush.
func (s *UpdateBranchBody) SetResetOnPush(val OptBool) {
	s.ResetOnPush = val
}

// SetPersistent sets the value of Persistent.
func (s *UpdateBranchBody) SetPersistent(val OptBool) {
	s.Persistent = val
}

// UpdateBranchInternalServerError is response for UpdateBranch operation.
type UpdateBranchInternalServerError struct{}

func (*UpdateBranchInternalServerError) updateBranchRes() {}

// UpdateConfigInternalServerError is response for UpdateConfig operation.
type UpdateConfigInternalServerError struct{}

func (*UpdateConfigInternalServerError) updateConfigRes() {}

// Ref: #/components/schemas/UpdateCustomHostnameBody
type UpdateCustomHostnameBody struct {
	CustomHostname string `json:"custom_hostname"`
}

// GetCustomHostname returns the value of CustomHostname.
func (s *UpdateCustomHostnameBody) GetCustomHostname() string {
	return s.CustomHostname
}

// SetCustomHostname sets the value of CustomHostname.
func (s *UpdateCustomHostnameBody) SetCustomHostname(val string) {
	s.CustomHostname = val
}

// Ref: #/components/schemas/UpdateCustomHostnameResponse
type UpdateCustomHostnameResponse struct {
	Status         UpdateCustomHostnameResponseStatus `json:"status"`
	CustomHostname string                             `json:"custom_hostname"`
	Data           UpdateCustomHostnameResponseData   `json:"data"`
}

// GetStatus returns the value of Status.
func (s *UpdateCustomHostnameResponse) GetStatus() UpdateCustomHostnameResponseStatus {
	return s.Status
}

// GetCustomHostname returns the value of CustomHostname.
func (s *UpdateCustomHostnameResponse) GetCustomHostname() string {
	return s.CustomHostname
}

// GetData returns the value of Data.
func (s *UpdateCustomHostnameResponse) GetData() UpdateCustomHostnameResponseData {
	return s.Data
}

// SetStatus sets the value of Status.
func (s *UpdateCustomHostnameResponse) SetStatus(val UpdateCustomHostnameResponseStatus) {
	s.Status = val
}

// SetCustomHostname sets the value of CustomHostname.
func (s *UpdateCustomHostnameResponse) SetCustomHostname(val string) {
	s.CustomHostname = val
}

// SetData sets the value of Data.
func (s *UpdateCustomHostnameResponse) SetData(val UpdateCustomHostnameResponseData) {
	s.Data = val
}

func (*UpdateCustomHostnameResponse) activateRes()                   {}
func (*UpdateCustomHostnameResponse) createCustomHostnameConfigRes() {}
func (*UpdateCustomHostnameResponse) getCustomHostnameConfigRes()    {}
func (*UpdateCustomHostnameResponse) reverifyRes()                   {}

type UpdateCustomHostnameResponseData struct{}

type UpdateCustomHostnameResponseStatus string

const (
	UpdateCustomHostnameResponseStatus1NotStarted           UpdateCustomHostnameResponseStatus = "1_not_started"
	UpdateCustomHostnameResponseStatus2Initiated            UpdateCustomHostnameResponseStatus = "2_initiated"
	UpdateCustomHostnameResponseStatus3ChallengeVerified    UpdateCustomHostnameResponseStatus = "3_challenge_verified"
	UpdateCustomHostnameResponseStatus4OriginSetupCompleted UpdateCustomHostnameResponseStatus = "4_origin_setup_completed"
	UpdateCustomHostnameResponseStatus5ServicesReconfigured UpdateCustomHostnameResponseStatus = "5_services_reconfigured"
)

// AllValues returns all UpdateCustomHostnameResponseStatus values.
func (UpdateCustomHostnameResponseStatus) AllValues() []UpdateCustomHostnameResponseStatus {
	return []UpdateCustomHostnameResponseStatus{
		UpdateCustomHostnameResponseStatus1NotStarted,
		UpdateCustomHostnameResponseStatus2Initiated,
		UpdateCustomHostnameResponseStatus3ChallengeVerified,
		UpdateCustomHostnameResponseStatus4OriginSetupCompleted,
		UpdateCustomHostnameResponseStatus5ServicesReconfigured,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateCustomHostnameResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case UpdateCustomHostnameResponseStatus1NotStarted:
		return []byte(s), nil
	case UpdateCustomHostnameResponseStatus2Initiated:
		return []byte(s), nil
	case UpdateCustomHostnameResponseStatus3ChallengeVerified:
		return []byte(s), nil
	case UpdateCustomHostnameResponseStatus4OriginSetupCompleted:
		return []byte(s), nil
	case UpdateCustomHostnameResponseStatus5ServicesReconfigured:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateCustomHostnameResponseStatus) UnmarshalText(data []byte) error {
	switch UpdateCustomHostnameResponseStatus(data) {
	case UpdateCustomHostnameResponseStatus1NotStarted:
		*s = UpdateCustomHostnameResponseStatus1NotStarted
		return nil
	case UpdateCustomHostnameResponseStatus2Initiated:
		*s = UpdateCustomHostnameResponseStatus2Initiated
		return nil
	case UpdateCustomHostnameResponseStatus3ChallengeVerified:
		*s = UpdateCustomHostnameResponseStatus3ChallengeVerified
		return nil
	case UpdateCustomHostnameResponseStatus4OriginSetupCompleted:
		*s = UpdateCustomHostnameResponseStatus4OriginSetupCompleted
		return nil
	case UpdateCustomHostnameResponseStatus5ServicesReconfigured:
		*s = UpdateCustomHostnameResponseStatus5ServicesReconfigured
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// UpdateFunctionForbidden is response for UpdateFunction operation.
type UpdateFunctionForbidden struct{}

func (*UpdateFunctionForbidden) updateFunctionRes() {}

// UpdateFunctionInternalServerError is response for UpdateFunction operation.
type UpdateFunctionInternalServerError struct{}

func (*UpdateFunctionInternalServerError) updateFunctionRes() {}

// Ref: #/components/schemas/UpdatePgsodiumConfigBody
type UpdatePgsodiumConfigBody struct {
	RootKey string `json:"root_key"`
}

// GetRootKey returns the value of RootKey.
func (s *UpdatePgsodiumConfigBody) GetRootKey() string {
	return s.RootKey
}

// SetRootKey sets the value of RootKey.
func (s *UpdatePgsodiumConfigBody) SetRootKey(val string) {
	s.RootKey = val
}

// UpdatePgsodiumConfigForbidden is response for UpdatePgsodiumConfig operation.
type UpdatePgsodiumConfigForbidden struct{}

func (*UpdatePgsodiumConfigForbidden) updatePgsodiumConfigRes() {}

// UpdatePgsodiumConfigInternalServerError is response for UpdatePgsodiumConfig operation.
type UpdatePgsodiumConfigInternalServerError struct{}

func (*UpdatePgsodiumConfigInternalServerError) updatePgsodiumConfigRes() {}

// UpdatePostgRESTConfigForbidden is response for UpdatePostgRESTConfig operation.
type UpdatePostgRESTConfigForbidden struct{}

func (*UpdatePostgRESTConfigForbidden) updatePostgRESTConfigRes() {}

// UpdatePostgRESTConfigInternalServerError is response for UpdatePostgRESTConfig operation.
type UpdatePostgRESTConfigInternalServerError struct{}

func (*UpdatePostgRESTConfigInternalServerError) updatePostgRESTConfigRes() {}

// Ref: #/components/schemas/UpdatePostgresConfigBody
type UpdatePostgresConfigBody struct {
	StatementTimeout              OptString                                         `json:"statement_timeout"`
	EffectiveCacheSize            OptString                                         `json:"effective_cache_size"`
	MaintenanceWorkMem            OptString                                         `json:"maintenance_work_mem"`
	MaxConnections                OptInt                                            `json:"max_connections"`
	MaxLocksPerTransaction        OptInt                                            `json:"max_locks_per_transaction"`
	MaxParallelMaintenanceWorkers OptInt                                            `json:"max_parallel_maintenance_workers"`
	MaxParallelWorkers            OptInt                                            `json:"max_parallel_workers"`
	MaxParallelWorkersPerGather   OptInt                                            `json:"max_parallel_workers_per_gather"`
	MaxStandbyArchiveDelay        OptString                                         `json:"max_standby_archive_delay"`
	MaxStandbyStreamingDelay      OptString                                         `json:"max_standby_streaming_delay"`
	MaxWorkerProcesses            OptInt                                            `json:"max_worker_processes"`
	SharedBuffers                 OptString                                         `json:"shared_buffers"`
	WorkMem                       OptString                                         `json:"work_mem"`
	SessionReplicationRole        OptUpdatePostgresConfigBodySessionReplicationRole `json:"session_replication_role"`
}

// GetStatementTimeout returns the value of StatementTimeout.
func (s *UpdatePostgresConfigBody) GetStatementTimeout() OptString {
	return s.StatementTimeout
}

// GetEffectiveCacheSize returns the value of EffectiveCacheSize.
func (s *UpdatePostgresConfigBody) GetEffectiveCacheSize() OptString {
	return s.EffectiveCacheSize
}

// GetMaintenanceWorkMem returns the value of MaintenanceWorkMem.
func (s *UpdatePostgresConfigBody) GetMaintenanceWorkMem() OptString {
	return s.MaintenanceWorkMem
}

// GetMaxConnections returns the value of MaxConnections.
func (s *UpdatePostgresConfigBody) GetMaxConnections() OptInt {
	return s.MaxConnections
}

// GetMaxLocksPerTransaction returns the value of MaxLocksPerTransaction.
func (s *UpdatePostgresConfigBody) GetMaxLocksPerTransaction() OptInt {
	return s.MaxLocksPerTransaction
}

// GetMaxParallelMaintenanceWorkers returns the value of MaxParallelMaintenanceWorkers.
func (s *UpdatePostgresConfigBody) GetMaxParallelMaintenanceWorkers() OptInt {
	return s.MaxParallelMaintenanceWorkers
}

// GetMaxParallelWorkers returns the value of MaxParallelWorkers.
func (s *UpdatePostgresConfigBody) GetMaxParallelWorkers() OptInt {
	return s.MaxParallelWorkers
}

// GetMaxParallelWorkersPerGather returns the value of MaxParallelWorkersPerGather.
func (s *UpdatePostgresConfigBody) GetMaxParallelWorkersPerGather() OptInt {
	return s.MaxParallelWorkersPerGather
}

// GetMaxStandbyArchiveDelay returns the value of MaxStandbyArchiveDelay.
func (s *UpdatePostgresConfigBody) GetMaxStandbyArchiveDelay() OptString {
	return s.MaxStandbyArchiveDelay
}

// GetMaxStandbyStreamingDelay returns the value of MaxStandbyStreamingDelay.
func (s *UpdatePostgresConfigBody) GetMaxStandbyStreamingDelay() OptString {
	return s.MaxStandbyStreamingDelay
}

// GetMaxWorkerProcesses returns the value of MaxWorkerProcesses.
func (s *UpdatePostgresConfigBody) GetMaxWorkerProcesses() OptInt {
	return s.MaxWorkerProcesses
}

// GetSharedBuffers returns the value of SharedBuffers.
func (s *UpdatePostgresConfigBody) GetSharedBuffers() OptString {
	return s.SharedBuffers
}

// GetWorkMem returns the value of WorkMem.
func (s *UpdatePostgresConfigBody) GetWorkMem() OptString {
	return s.WorkMem
}

// GetSessionReplicationRole returns the value of SessionReplicationRole.
func (s *UpdatePostgresConfigBody) GetSessionReplicationRole() OptUpdatePostgresConfigBodySessionReplicationRole {
	return s.SessionReplicationRole
}

// SetStatementTimeout sets the value of StatementTimeout.
func (s *UpdatePostgresConfigBody) SetStatementTimeout(val OptString) {
	s.StatementTimeout = val
}

// SetEffectiveCacheSize sets the value of EffectiveCacheSize.
func (s *UpdatePostgresConfigBody) SetEffectiveCacheSize(val OptString) {
	s.EffectiveCacheSize = val
}

// SetMaintenanceWorkMem sets the value of MaintenanceWorkMem.
func (s *UpdatePostgresConfigBody) SetMaintenanceWorkMem(val OptString) {
	s.MaintenanceWorkMem = val
}

// SetMaxConnections sets the value of MaxConnections.
func (s *UpdatePostgresConfigBody) SetMaxConnections(val OptInt) {
	s.MaxConnections = val
}

// SetMaxLocksPerTransaction sets the value of MaxLocksPerTransaction.
func (s *UpdatePostgresConfigBody) SetMaxLocksPerTransaction(val OptInt) {
	s.MaxLocksPerTransaction = val
}

// SetMaxParallelMaintenanceWorkers sets the value of MaxParallelMaintenanceWorkers.
func (s *UpdatePostgresConfigBody) SetMaxParallelMaintenanceWorkers(val OptInt) {
	s.MaxParallelMaintenanceWorkers = val
}

// SetMaxParallelWorkers sets the value of MaxParallelWorkers.
func (s *UpdatePostgresConfigBody) SetMaxParallelWorkers(val OptInt) {
	s.MaxParallelWorkers = val
}

// SetMaxParallelWorkersPerGather sets the value of MaxParallelWorkersPerGather.
func (s *UpdatePostgresConfigBody) SetMaxParallelWorkersPerGather(val OptInt) {
	s.MaxParallelWorkersPerGather = val
}

// SetMaxStandbyArchiveDelay sets the value of MaxStandbyArchiveDelay.
func (s *UpdatePostgresConfigBody) SetMaxStandbyArchiveDelay(val OptString) {
	s.MaxStandbyArchiveDelay = val
}

// SetMaxStandbyStreamingDelay sets the value of MaxStandbyStreamingDelay.
func (s *UpdatePostgresConfigBody) SetMaxStandbyStreamingDelay(val OptString) {
	s.MaxStandbyStreamingDelay = val
}

// SetMaxWorkerProcesses sets the value of MaxWorkerProcesses.
func (s *UpdatePostgresConfigBody) SetMaxWorkerProcesses(val OptInt) {
	s.MaxWorkerProcesses = val
}

// SetSharedBuffers sets the value of SharedBuffers.
func (s *UpdatePostgresConfigBody) SetSharedBuffers(val OptString) {
	s.SharedBuffers = val
}

// SetWorkMem sets the value of WorkMem.
func (s *UpdatePostgresConfigBody) SetWorkMem(val OptString) {
	s.WorkMem = val
}

// SetSessionReplicationRole sets the value of SessionReplicationRole.
func (s *UpdatePostgresConfigBody) SetSessionReplicationRole(val OptUpdatePostgresConfigBodySessionReplicationRole) {
	s.SessionReplicationRole = val
}

type UpdatePostgresConfigBodySessionReplicationRole string

const (
	UpdatePostgresConfigBodySessionReplicationRoleOrigin  UpdatePostgresConfigBodySessionReplicationRole = "origin"
	UpdatePostgresConfigBodySessionReplicationRoleReplica UpdatePostgresConfigBodySessionReplicationRole = "replica"
	UpdatePostgresConfigBodySessionReplicationRoleLocal   UpdatePostgresConfigBodySessionReplicationRole = "local"
)

// AllValues returns all UpdatePostgresConfigBodySessionReplicationRole values.
func (UpdatePostgresConfigBodySessionReplicationRole) AllValues() []UpdatePostgresConfigBodySessionReplicationRole {
	return []UpdatePostgresConfigBodySessionReplicationRole{
		UpdatePostgresConfigBodySessionReplicationRoleOrigin,
		UpdatePostgresConfigBodySessionReplicationRoleReplica,
		UpdatePostgresConfigBodySessionReplicationRoleLocal,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdatePostgresConfigBodySessionReplicationRole) MarshalText() ([]byte, error) {
	switch s {
	case UpdatePostgresConfigBodySessionReplicationRoleOrigin:
		return []byte(s), nil
	case UpdatePostgresConfigBodySessionReplicationRoleReplica:
		return []byte(s), nil
	case UpdatePostgresConfigBodySessionReplicationRoleLocal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdatePostgresConfigBodySessionReplicationRole) UnmarshalText(data []byte) error {
	switch UpdatePostgresConfigBodySessionReplicationRole(data) {
	case UpdatePostgresConfigBodySessionReplicationRoleOrigin:
		*s = UpdatePostgresConfigBodySessionReplicationRoleOrigin
		return nil
	case UpdatePostgresConfigBodySessionReplicationRoleReplica:
		*s = UpdatePostgresConfigBodySessionReplicationRoleReplica
		return nil
	case UpdatePostgresConfigBodySessionReplicationRoleLocal:
		*s = UpdatePostgresConfigBodySessionReplicationRoleLocal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdatePostgrestConfigBody
type UpdatePostgrestConfigBody struct {
	MaxRows           OptInt    `json:"max_rows"`
	DbPool            OptInt    `json:"db_pool"`
	DbExtraSearchPath OptString `json:"db_extra_search_path"`
	DbSchema          OptString `json:"db_schema"`
}

// GetMaxRows returns the value of MaxRows.
func (s *UpdatePostgrestConfigBody) GetMaxRows() OptInt {
	return s.MaxRows
}

// GetDbPool returns the value of DbPool.
func (s *UpdatePostgrestConfigBody) GetDbPool() OptInt {
	return s.DbPool
}

// GetDbExtraSearchPath returns the value of DbExtraSearchPath.
func (s *UpdatePostgrestConfigBody) GetDbExtraSearchPath() OptString {
	return s.DbExtraSearchPath
}

// GetDbSchema returns the value of DbSchema.
func (s *UpdatePostgrestConfigBody) GetDbSchema() OptString {
	return s.DbSchema
}

// SetMaxRows sets the value of MaxRows.
func (s *UpdatePostgrestConfigBody) SetMaxRows(val OptInt) {
	s.MaxRows = val
}

// SetDbPool sets the value of DbPool.
func (s *UpdatePostgrestConfigBody) SetDbPool(val OptInt) {
	s.DbPool = val
}

// SetDbExtraSearchPath sets the value of DbExtraSearchPath.
func (s *UpdatePostgrestConfigBody) SetDbExtraSearchPath(val OptString) {
	s.DbExtraSearchPath = val
}

// SetDbSchema sets the value of DbSchema.
func (s *UpdatePostgrestConfigBody) SetDbSchema(val OptString) {
	s.DbSchema = val
}

// Ref: #/components/schemas/UpdateProviderBody
type UpdateProviderBody struct {
	MetadataXML      OptString           `json:"metadata_xml"`
	MetadataURL      OptString           `json:"metadata_url"`
	Domains          []string            `json:"domains"`
	AttributeMapping OptAttributeMapping `json:"attribute_mapping"`
}

// GetMetadataXML returns the value of MetadataXML.
func (s *UpdateProviderBody) GetMetadataXML() OptString {
	return s.MetadataXML
}

// GetMetadataURL returns the value of MetadataURL.
func (s *UpdateProviderBody) GetMetadataURL() OptString {
	return s.MetadataURL
}

// GetDomains returns the value of Domains.
func (s *UpdateProviderBody) GetDomains() []string {
	return s.Domains
}

// GetAttributeMapping returns the value of AttributeMapping.
func (s *UpdateProviderBody) GetAttributeMapping() OptAttributeMapping {
	return s.AttributeMapping
}

// SetMetadataXML sets the value of MetadataXML.
func (s *UpdateProviderBody) SetMetadataXML(val OptString) {
	s.MetadataXML = val
}

// SetMetadataURL sets the value of MetadataURL.
func (s *UpdateProviderBody) SetMetadataURL(val OptString) {
	s.MetadataURL = val
}

// SetDomains sets the value of Domains.
func (s *UpdateProviderBody) SetDomains(val []string) {
	s.Domains = val
}

// SetAttributeMapping sets the value of AttributeMapping.
func (s *UpdateProviderBody) SetAttributeMapping(val OptAttributeMapping) {
	s.AttributeMapping = val
}

// UpdateProviderByIdForbidden is response for UpdateProviderById operation.
type UpdateProviderByIdForbidden struct{}

func (*UpdateProviderByIdForbidden) updateProviderByIdRes() {}

// UpdateProviderByIdNotFound is response for UpdateProviderById operation.
type UpdateProviderByIdNotFound struct{}

func (*UpdateProviderByIdNotFound) updateProviderByIdRes() {}

// Ref: #/components/schemas/UpdateProviderResponse
type UpdateProviderResponse struct {
	ID        string            `json:"id"`
	Saml      OptSamlDescriptor `json:"saml"`
	Domains   []Domain          `json:"domains"`
	CreatedAt OptString         `json:"created_at"`
	UpdatedAt OptString         `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *UpdateProviderResponse) GetID() string {
	return s.ID
}

// GetSaml returns the value of Saml.
func (s *UpdateProviderResponse) GetSaml() OptSamlDescriptor {
	return s.Saml
}

// GetDomains returns the value of Domains.
func (s *UpdateProviderResponse) GetDomains() []Domain {
	return s.Domains
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UpdateProviderResponse) GetCreatedAt() OptString {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateProviderResponse) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *UpdateProviderResponse) SetID(val string) {
	s.ID = val
}

// SetSaml sets the value of Saml.
func (s *UpdateProviderResponse) SetSaml(val OptSamlDescriptor) {
	s.Saml = val
}

// SetDomains sets the value of Domains.
func (s *UpdateProviderResponse) SetDomains(val []Domain) {
	s.Domains = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UpdateProviderResponse) SetCreatedAt(val OptString) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateProviderResponse) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

func (*UpdateProviderResponse) updateProviderByIdRes() {}

// UpdateSslEnforcementConfigForbidden is response for UpdateSslEnforcementConfig operation.
type UpdateSslEnforcementConfigForbidden struct{}

func (*UpdateSslEnforcementConfigForbidden) updateSslEnforcementConfigRes() {}

// UpdateSslEnforcementConfigInternalServerError is response for UpdateSslEnforcementConfig operation.
type UpdateSslEnforcementConfigInternalServerError struct{}

func (*UpdateSslEnforcementConfigInternalServerError) updateSslEnforcementConfigRes() {}

// UpdateV1AuthConfigForbidden is response for UpdateV1AuthConfig operation.
type UpdateV1AuthConfigForbidden struct{}

func (*UpdateV1AuthConfigForbidden) updateV1AuthConfigRes() {}

// UpdateV1AuthConfigInternalServerError is response for UpdateV1AuthConfig operation.
type UpdateV1AuthConfigInternalServerError struct{}

func (*UpdateV1AuthConfigInternalServerError) updateV1AuthConfigRes() {}

// Ref: #/components/schemas/UpgradeDatabaseBody
type UpgradeDatabaseBody struct {
	TargetVersion float64 `json:"target_version"`
}

// GetTargetVersion returns the value of TargetVersion.
func (s *UpgradeDatabaseBody) GetTargetVersion() float64 {
	return s.TargetVersion
}

// SetTargetVersion sets the value of TargetVersion.
func (s *UpgradeDatabaseBody) SetTargetVersion(val float64) {
	s.TargetVersion = val
}

// UpgradeEligibilityInformationForbidden is response for UpgradeEligibilityInformation operation.
type UpgradeEligibilityInformationForbidden struct{}

func (*UpgradeEligibilityInformationForbidden) upgradeEligibilityInformationRes() {}

// UpgradeEligibilityInformationInternalServerError is response for UpgradeEligibilityInformation operation.
type UpgradeEligibilityInformationInternalServerError struct{}

func (*UpgradeEligibilityInformationInternalServerError) upgradeEligibilityInformationRes() {}

// UpgradeProjectForbidden is response for UpgradeProject operation.
type UpgradeProjectForbidden struct{}

func (*UpgradeProjectForbidden) upgradeProjectRes() {}

// UpgradeProjectInternalServerError is response for UpgradeProject operation.
type UpgradeProjectInternalServerError struct{}

func (*UpgradeProjectInternalServerError) upgradeProjectRes() {}

// Ref: #/components/schemas/V1Backup
type V1Backup struct {
	Status           V1BackupStatus `json:"status"`
	IsPhysicalBackup bool           `json:"is_physical_backup"`
	InsertedAt       string         `json:"inserted_at"`
}

// GetStatus returns the value of Status.
func (s *V1Backup) GetStatus() V1BackupStatus {
	return s.Status
}

// GetIsPhysicalBackup returns the value of IsPhysicalBackup.
func (s *V1Backup) GetIsPhysicalBackup() bool {
	return s.IsPhysicalBackup
}

// GetInsertedAt returns the value of InsertedAt.
func (s *V1Backup) GetInsertedAt() string {
	return s.InsertedAt
}

// SetStatus sets the value of Status.
func (s *V1Backup) SetStatus(val V1BackupStatus) {
	s.Status = val
}

// SetIsPhysicalBackup sets the value of IsPhysicalBackup.
func (s *V1Backup) SetIsPhysicalBackup(val bool) {
	s.IsPhysicalBackup = val
}

// SetInsertedAt sets the value of InsertedAt.
func (s *V1Backup) SetInsertedAt(val string) {
	s.InsertedAt = val
}

type V1BackupStatus string

const (
	V1BackupStatusCOMPLETED V1BackupStatus = "COMPLETED"
	V1BackupStatusFAILED    V1BackupStatus = "FAILED"
	V1BackupStatusPENDING   V1BackupStatus = "PENDING"
	V1BackupStatusREMOVED   V1BackupStatus = "REMOVED"
	V1BackupStatusARCHIVED  V1BackupStatus = "ARCHIVED"
)

// AllValues returns all V1BackupStatus values.
func (V1BackupStatus) AllValues() []V1BackupStatus {
	return []V1BackupStatus{
		V1BackupStatusCOMPLETED,
		V1BackupStatusFAILED,
		V1BackupStatusPENDING,
		V1BackupStatusREMOVED,
		V1BackupStatusARCHIVED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1BackupStatus) MarshalText() ([]byte, error) {
	switch s {
	case V1BackupStatusCOMPLETED:
		return []byte(s), nil
	case V1BackupStatusFAILED:
		return []byte(s), nil
	case V1BackupStatusPENDING:
		return []byte(s), nil
	case V1BackupStatusREMOVED:
		return []byte(s), nil
	case V1BackupStatusARCHIVED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1BackupStatus) UnmarshalText(data []byte) error {
	switch V1BackupStatus(data) {
	case V1BackupStatusCOMPLETED:
		*s = V1BackupStatusCOMPLETED
		return nil
	case V1BackupStatusFAILED:
		*s = V1BackupStatusFAILED
		return nil
	case V1BackupStatusPENDING:
		*s = V1BackupStatusPENDING
		return nil
	case V1BackupStatusREMOVED:
		*s = V1BackupStatusREMOVED
		return nil
	case V1BackupStatusARCHIVED:
		*s = V1BackupStatusARCHIVED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1BackupsResponse
type V1BackupsResponse struct {
	Region             string           `json:"region"`
	WalgEnabled        bool             `json:"walg_enabled"`
	PitrEnabled        bool             `json:"pitr_enabled"`
	Backups            []V1Backup       `json:"backups"`
	PhysicalBackupData V1PhysicalBackup `json:"physical_backup_data"`
}

// GetRegion returns the value of Region.
func (s *V1BackupsResponse) GetRegion() string {
	return s.Region
}

// GetWalgEnabled returns the value of WalgEnabled.
func (s *V1BackupsResponse) GetWalgEnabled() bool {
	return s.WalgEnabled
}

// GetPitrEnabled returns the value of PitrEnabled.
func (s *V1BackupsResponse) GetPitrEnabled() bool {
	return s.PitrEnabled
}

// GetBackups returns the value of Backups.
func (s *V1BackupsResponse) GetBackups() []V1Backup {
	return s.Backups
}

// GetPhysicalBackupData returns the value of PhysicalBackupData.
func (s *V1BackupsResponse) GetPhysicalBackupData() V1PhysicalBackup {
	return s.PhysicalBackupData
}

// SetRegion sets the value of Region.
func (s *V1BackupsResponse) SetRegion(val string) {
	s.Region = val
}

// SetWalgEnabled sets the value of WalgEnabled.
func (s *V1BackupsResponse) SetWalgEnabled(val bool) {
	s.WalgEnabled = val
}

// SetPitrEnabled sets the value of PitrEnabled.
func (s *V1BackupsResponse) SetPitrEnabled(val bool) {
	s.PitrEnabled = val
}

// SetBackups sets the value of Backups.
func (s *V1BackupsResponse) SetBackups(val []V1Backup) {
	s.Backups = val
}

// SetPhysicalBackupData sets the value of PhysicalBackupData.
func (s *V1BackupsResponse) SetPhysicalBackupData(val V1PhysicalBackup) {
	s.PhysicalBackupData = val
}

func (*V1BackupsResponse) getBackupsRes() {}

// Ref: #/components/schemas/V1CreateFunctionBody
type V1CreateFunctionBody struct {
	Slug      string  `json:"slug"`
	Name      string  `json:"name"`
	Body      string  `json:"body"`
	VerifyJwt OptBool `json:"verify_jwt"`
}

// GetSlug returns the value of Slug.
func (s *V1CreateFunctionBody) GetSlug() string {
	return s.Slug
}

// GetName returns the value of Name.
func (s *V1CreateFunctionBody) GetName() string {
	return s.Name
}

// GetBody returns the value of Body.
func (s *V1CreateFunctionBody) GetBody() string {
	return s.Body
}

// GetVerifyJwt returns the value of VerifyJwt.
func (s *V1CreateFunctionBody) GetVerifyJwt() OptBool {
	return s.VerifyJwt
}

// SetSlug sets the value of Slug.
func (s *V1CreateFunctionBody) SetSlug(val string) {
	s.Slug = val
}

// SetName sets the value of Name.
func (s *V1CreateFunctionBody) SetName(val string) {
	s.Name = val
}

// SetBody sets the value of Body.
func (s *V1CreateFunctionBody) SetBody(val string) {
	s.Body = val
}

// SetVerifyJwt sets the value of VerifyJwt.
func (s *V1CreateFunctionBody) SetVerifyJwt(val OptBool) {
	s.VerifyJwt = val
}

// Ref: #/components/schemas/V1CreateProjectBody
type V1CreateProjectBody struct {
	// Database password.
	DbPass string `json:"db_pass"`
	// Name of your project, should not contain dots.
	Name string `json:"name"`
	// Slug of your organization.
	OrganizationID string `json:"organization_id"`
	// Subscription plan is now set on organization level and is ignored in this request.
	//
	// Deprecated: schema marks this property as deprecated.
	Plan OptV1CreateProjectBodyPlan `json:"plan"`
	// Region you want your server to reside in.
	Region V1CreateProjectBodyRegion `json:"region"`
	// Deprecated: schema marks this property as deprecated.
	KpsEnabled          OptBool                `json:"kps_enabled"`
	DesiredInstanceSize OptDesiredInstanceSize `json:"desired_instance_size"`
	// Template URL used to create the project from the CLI.
	TemplateURL OptString `json:"template_url"`
}

// GetDbPass returns the value of DbPass.
func (s *V1CreateProjectBody) GetDbPass() string {
	return s.DbPass
}

// GetName returns the value of Name.
func (s *V1CreateProjectBody) GetName() string {
	return s.Name
}

// GetOrganizationID returns the value of OrganizationID.
func (s *V1CreateProjectBody) GetOrganizationID() string {
	return s.OrganizationID
}

// GetPlan returns the value of Plan.
func (s *V1CreateProjectBody) GetPlan() OptV1CreateProjectBodyPlan {
	return s.Plan
}

// GetRegion returns the value of Region.
func (s *V1CreateProjectBody) GetRegion() V1CreateProjectBodyRegion {
	return s.Region
}

// GetKpsEnabled returns the value of KpsEnabled.
func (s *V1CreateProjectBody) GetKpsEnabled() OptBool {
	return s.KpsEnabled
}

// GetDesiredInstanceSize returns the value of DesiredInstanceSize.
func (s *V1CreateProjectBody) GetDesiredInstanceSize() OptDesiredInstanceSize {
	return s.DesiredInstanceSize
}

// GetTemplateURL returns the value of TemplateURL.
func (s *V1CreateProjectBody) GetTemplateURL() OptString {
	return s.TemplateURL
}

// SetDbPass sets the value of DbPass.
func (s *V1CreateProjectBody) SetDbPass(val string) {
	s.DbPass = val
}

// SetName sets the value of Name.
func (s *V1CreateProjectBody) SetName(val string) {
	s.Name = val
}

// SetOrganizationID sets the value of OrganizationID.
func (s *V1CreateProjectBody) SetOrganizationID(val string) {
	s.OrganizationID = val
}

// SetPlan sets the value of Plan.
func (s *V1CreateProjectBody) SetPlan(val OptV1CreateProjectBodyPlan) {
	s.Plan = val
}

// SetRegion sets the value of Region.
func (s *V1CreateProjectBody) SetRegion(val V1CreateProjectBodyRegion) {
	s.Region = val
}

// SetKpsEnabled sets the value of KpsEnabled.
func (s *V1CreateProjectBody) SetKpsEnabled(val OptBool) {
	s.KpsEnabled = val
}

// SetDesiredInstanceSize sets the value of DesiredInstanceSize.
func (s *V1CreateProjectBody) SetDesiredInstanceSize(val OptDesiredInstanceSize) {
	s.DesiredInstanceSize = val
}

// SetTemplateURL sets the value of TemplateURL.
func (s *V1CreateProjectBody) SetTemplateURL(val OptString) {
	s.TemplateURL = val
}

// Subscription plan is now set on organization level and is ignored in this request.
//
// Deprecated: schema marks this type as deprecated.
type V1CreateProjectBodyPlan string

const (
	V1CreateProjectBodyPlanFree V1CreateProjectBodyPlan = "free"
	V1CreateProjectBodyPlanPro  V1CreateProjectBodyPlan = "pro"
)

// AllValues returns all V1CreateProjectBodyPlan values.
func (V1CreateProjectBodyPlan) AllValues() []V1CreateProjectBodyPlan {
	return []V1CreateProjectBodyPlan{
		V1CreateProjectBodyPlanFree,
		V1CreateProjectBodyPlanPro,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CreateProjectBodyPlan) MarshalText() ([]byte, error) {
	switch s {
	case V1CreateProjectBodyPlanFree:
		return []byte(s), nil
	case V1CreateProjectBodyPlanPro:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CreateProjectBodyPlan) UnmarshalText(data []byte) error {
	switch V1CreateProjectBodyPlan(data) {
	case V1CreateProjectBodyPlanFree:
		*s = V1CreateProjectBodyPlanFree
		return nil
	case V1CreateProjectBodyPlanPro:
		*s = V1CreateProjectBodyPlanPro
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Region you want your server to reside in.
type V1CreateProjectBodyRegion string

const (
	V1CreateProjectBodyRegionUsEast1      V1CreateProjectBodyRegion = "us-east-1"
	V1CreateProjectBodyRegionUsWest1      V1CreateProjectBodyRegion = "us-west-1"
	V1CreateProjectBodyRegionUsWest2      V1CreateProjectBodyRegion = "us-west-2"
	V1CreateProjectBodyRegionApEast1      V1CreateProjectBodyRegion = "ap-east-1"
	V1CreateProjectBodyRegionApSoutheast1 V1CreateProjectBodyRegion = "ap-southeast-1"
	V1CreateProjectBodyRegionApNortheast1 V1CreateProjectBodyRegion = "ap-northeast-1"
	V1CreateProjectBodyRegionApNortheast2 V1CreateProjectBodyRegion = "ap-northeast-2"
	V1CreateProjectBodyRegionApSoutheast2 V1CreateProjectBodyRegion = "ap-southeast-2"
	V1CreateProjectBodyRegionEuWest1      V1CreateProjectBodyRegion = "eu-west-1"
	V1CreateProjectBodyRegionEuWest2      V1CreateProjectBodyRegion = "eu-west-2"
	V1CreateProjectBodyRegionEuWest3      V1CreateProjectBodyRegion = "eu-west-3"
	V1CreateProjectBodyRegionEuCentral1   V1CreateProjectBodyRegion = "eu-central-1"
	V1CreateProjectBodyRegionCaCentral1   V1CreateProjectBodyRegion = "ca-central-1"
	V1CreateProjectBodyRegionApSouth1     V1CreateProjectBodyRegion = "ap-south-1"
	V1CreateProjectBodyRegionSaEast1      V1CreateProjectBodyRegion = "sa-east-1"
)

// AllValues returns all V1CreateProjectBodyRegion values.
func (V1CreateProjectBodyRegion) AllValues() []V1CreateProjectBodyRegion {
	return []V1CreateProjectBodyRegion{
		V1CreateProjectBodyRegionUsEast1,
		V1CreateProjectBodyRegionUsWest1,
		V1CreateProjectBodyRegionUsWest2,
		V1CreateProjectBodyRegionApEast1,
		V1CreateProjectBodyRegionApSoutheast1,
		V1CreateProjectBodyRegionApNortheast1,
		V1CreateProjectBodyRegionApNortheast2,
		V1CreateProjectBodyRegionApSoutheast2,
		V1CreateProjectBodyRegionEuWest1,
		V1CreateProjectBodyRegionEuWest2,
		V1CreateProjectBodyRegionEuWest3,
		V1CreateProjectBodyRegionEuCentral1,
		V1CreateProjectBodyRegionCaCentral1,
		V1CreateProjectBodyRegionApSouth1,
		V1CreateProjectBodyRegionSaEast1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CreateProjectBodyRegion) MarshalText() ([]byte, error) {
	switch s {
	case V1CreateProjectBodyRegionUsEast1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionUsWest1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionUsWest2:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApEast1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApSoutheast1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApNortheast1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApNortheast2:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApSoutheast2:
		return []byte(s), nil
	case V1CreateProjectBodyRegionEuWest1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionEuWest2:
		return []byte(s), nil
	case V1CreateProjectBodyRegionEuWest3:
		return []byte(s), nil
	case V1CreateProjectBodyRegionEuCentral1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionCaCentral1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionApSouth1:
		return []byte(s), nil
	case V1CreateProjectBodyRegionSaEast1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CreateProjectBodyRegion) UnmarshalText(data []byte) error {
	switch V1CreateProjectBodyRegion(data) {
	case V1CreateProjectBodyRegionUsEast1:
		*s = V1CreateProjectBodyRegionUsEast1
		return nil
	case V1CreateProjectBodyRegionUsWest1:
		*s = V1CreateProjectBodyRegionUsWest1
		return nil
	case V1CreateProjectBodyRegionUsWest2:
		*s = V1CreateProjectBodyRegionUsWest2
		return nil
	case V1CreateProjectBodyRegionApEast1:
		*s = V1CreateProjectBodyRegionApEast1
		return nil
	case V1CreateProjectBodyRegionApSoutheast1:
		*s = V1CreateProjectBodyRegionApSoutheast1
		return nil
	case V1CreateProjectBodyRegionApNortheast1:
		*s = V1CreateProjectBodyRegionApNortheast1
		return nil
	case V1CreateProjectBodyRegionApNortheast2:
		*s = V1CreateProjectBodyRegionApNortheast2
		return nil
	case V1CreateProjectBodyRegionApSoutheast2:
		*s = V1CreateProjectBodyRegionApSoutheast2
		return nil
	case V1CreateProjectBodyRegionEuWest1:
		*s = V1CreateProjectBodyRegionEuWest1
		return nil
	case V1CreateProjectBodyRegionEuWest2:
		*s = V1CreateProjectBodyRegionEuWest2
		return nil
	case V1CreateProjectBodyRegionEuWest3:
		*s = V1CreateProjectBodyRegionEuWest3
		return nil
	case V1CreateProjectBodyRegionEuCentral1:
		*s = V1CreateProjectBodyRegionEuCentral1
		return nil
	case V1CreateProjectBodyRegionCaCentral1:
		*s = V1CreateProjectBodyRegionCaCentral1
		return nil
	case V1CreateProjectBodyRegionApSouth1:
		*s = V1CreateProjectBodyRegionApSouth1
		return nil
	case V1CreateProjectBodyRegionSaEast1:
		*s = V1CreateProjectBodyRegionSaEast1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1DatabaseResponse
type V1DatabaseResponse struct {
	// Database host.
	Host string `json:"host"`
	// Database version.
	Version string `json:"version"`
}

// GetHost returns the value of Host.
func (s *V1DatabaseResponse) GetHost() string {
	return s.Host
}

// GetVersion returns the value of Version.
func (s *V1DatabaseResponse) GetVersion() string {
	return s.Version
}

// SetHost sets the value of Host.
func (s *V1DatabaseResponse) SetHost(val string) {
	s.Host = val
}

// SetVersion sets the value of Version.
func (s *V1DatabaseResponse) SetVersion(val string) {
	s.Version = val
}

// V1EnableDatabaseWebhooksCreated is response for V1EnableDatabaseWebhooks operation.
type V1EnableDatabaseWebhooksCreated struct{}

func (*V1EnableDatabaseWebhooksCreated) v1EnableDatabaseWebhooksRes() {}

// V1EnableDatabaseWebhooksForbidden is response for V1EnableDatabaseWebhooks operation.
type V1EnableDatabaseWebhooksForbidden struct{}

func (*V1EnableDatabaseWebhooksForbidden) v1EnableDatabaseWebhooksRes() {}

// V1EnableDatabaseWebhooksInternalServerError is response for V1EnableDatabaseWebhooks operation.
type V1EnableDatabaseWebhooksInternalServerError struct{}

func (*V1EnableDatabaseWebhooksInternalServerError) v1EnableDatabaseWebhooksRes() {}

// V1GetPgbouncerConfigInternalServerError is response for V1GetPgbouncerConfig operation.
type V1GetPgbouncerConfigInternalServerError struct{}

func (*V1GetPgbouncerConfigInternalServerError) v1GetPgbouncerConfigRes() {}

// Ref: #/components/schemas/V1OrganizationMemberResponse
type V1OrganizationMemberResponse struct {
	UserID     string    `json:"user_id"`
	UserName   string    `json:"user_name"`
	Email      OptString `json:"email"`
	RoleName   string    `json:"role_name"`
	MfaEnabled bool      `json:"mfa_enabled"`
}

// GetUserID returns the value of UserID.
func (s *V1OrganizationMemberResponse) GetUserID() string {
	return s.UserID
}

// GetUserName returns the value of UserName.
func (s *V1OrganizationMemberResponse) GetUserName() string {
	return s.UserName
}

// GetEmail returns the value of Email.
func (s *V1OrganizationMemberResponse) GetEmail() OptString {
	return s.Email
}

// GetRoleName returns the value of RoleName.
func (s *V1OrganizationMemberResponse) GetRoleName() string {
	return s.RoleName
}

// GetMfaEnabled returns the value of MfaEnabled.
func (s *V1OrganizationMemberResponse) GetMfaEnabled() bool {
	return s.MfaEnabled
}

// SetUserID sets the value of UserID.
func (s *V1OrganizationMemberResponse) SetUserID(val string) {
	s.UserID = val
}

// SetUserName sets the value of UserName.
func (s *V1OrganizationMemberResponse) SetUserName(val string) {
	s.UserName = val
}

// SetEmail sets the value of Email.
func (s *V1OrganizationMemberResponse) SetEmail(val OptString) {
	s.Email = val
}

// SetRoleName sets the value of RoleName.
func (s *V1OrganizationMemberResponse) SetRoleName(val string) {
	s.RoleName = val
}

// SetMfaEnabled sets the value of MfaEnabled.
func (s *V1OrganizationMemberResponse) SetMfaEnabled(val bool) {
	s.MfaEnabled = val
}

// Ref: #/components/schemas/V1OrganizationSlugResponse
type V1OrganizationSlugResponse struct {
	Plan      OptBillingPlanId                          `json:"plan"`
	OptInTags []V1OrganizationSlugResponseOptInTagsItem `json:"opt_in_tags"`
	ID        string                                    `json:"id"`
	Name      string                                    `json:"name"`
}

// GetPlan returns the value of Plan.
func (s *V1OrganizationSlugResponse) GetPlan() OptBillingPlanId {
	return s.Plan
}

// GetOptInTags returns the value of OptInTags.
func (s *V1OrganizationSlugResponse) GetOptInTags() []V1OrganizationSlugResponseOptInTagsItem {
	return s.OptInTags
}

// GetID returns the value of ID.
func (s *V1OrganizationSlugResponse) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *V1OrganizationSlugResponse) GetName() string {
	return s.Name
}

// SetPlan sets the value of Plan.
func (s *V1OrganizationSlugResponse) SetPlan(val OptBillingPlanId) {
	s.Plan = val
}

// SetOptInTags sets the value of OptInTags.
func (s *V1OrganizationSlugResponse) SetOptInTags(val []V1OrganizationSlugResponseOptInTagsItem) {
	s.OptInTags = val
}

// SetID sets the value of ID.
func (s *V1OrganizationSlugResponse) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *V1OrganizationSlugResponse) SetName(val string) {
	s.Name = val
}

type V1OrganizationSlugResponseOptInTagsItem string

const (
	V1OrganizationSlugResponseOptInTagsItemAISQLGENERATOROPTIN V1OrganizationSlugResponseOptInTagsItem = "AI_SQL_GENERATOR_OPT_IN"
)

// AllValues returns all V1OrganizationSlugResponseOptInTagsItem values.
func (V1OrganizationSlugResponseOptInTagsItem) AllValues() []V1OrganizationSlugResponseOptInTagsItem {
	return []V1OrganizationSlugResponseOptInTagsItem{
		V1OrganizationSlugResponseOptInTagsItemAISQLGENERATOROPTIN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1OrganizationSlugResponseOptInTagsItem) MarshalText() ([]byte, error) {
	switch s {
	case V1OrganizationSlugResponseOptInTagsItemAISQLGENERATOROPTIN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1OrganizationSlugResponseOptInTagsItem) UnmarshalText(data []byte) error {
	switch V1OrganizationSlugResponseOptInTagsItem(data) {
	case V1OrganizationSlugResponseOptInTagsItemAISQLGENERATOROPTIN:
		*s = V1OrganizationSlugResponseOptInTagsItemAISQLGENERATOROPTIN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1PgbouncerConfigResponse
type V1PgbouncerConfigResponse struct {
	PoolMode                OptV1PgbouncerConfigResponsePoolMode `json:"pool_mode"`
	DefaultPoolSize         OptFloat64                           `json:"default_pool_size"`
	IgnoreStartupParameters OptString                            `json:"ignore_startup_parameters"`
	MaxClientConn           OptFloat64                           `json:"max_client_conn"`
	ConnectionString        OptString                            `json:"connection_string"`
}

// GetPoolMode returns the value of PoolMode.
func (s *V1PgbouncerConfigResponse) GetPoolMode() OptV1PgbouncerConfigResponsePoolMode {
	return s.PoolMode
}

// GetDefaultPoolSize returns the value of DefaultPoolSize.
func (s *V1PgbouncerConfigResponse) GetDefaultPoolSize() OptFloat64 {
	return s.DefaultPoolSize
}

// GetIgnoreStartupParameters returns the value of IgnoreStartupParameters.
func (s *V1PgbouncerConfigResponse) GetIgnoreStartupParameters() OptString {
	return s.IgnoreStartupParameters
}

// GetMaxClientConn returns the value of MaxClientConn.
func (s *V1PgbouncerConfigResponse) GetMaxClientConn() OptFloat64 {
	return s.MaxClientConn
}

// GetConnectionString returns the value of ConnectionString.
func (s *V1PgbouncerConfigResponse) GetConnectionString() OptString {
	return s.ConnectionString
}

// SetPoolMode sets the value of PoolMode.
func (s *V1PgbouncerConfigResponse) SetPoolMode(val OptV1PgbouncerConfigResponsePoolMode) {
	s.PoolMode = val
}

// SetDefaultPoolSize sets the value of DefaultPoolSize.
func (s *V1PgbouncerConfigResponse) SetDefaultPoolSize(val OptFloat64) {
	s.DefaultPoolSize = val
}

// SetIgnoreStartupParameters sets the value of IgnoreStartupParameters.
func (s *V1PgbouncerConfigResponse) SetIgnoreStartupParameters(val OptString) {
	s.IgnoreStartupParameters = val
}

// SetMaxClientConn sets the value of MaxClientConn.
func (s *V1PgbouncerConfigResponse) SetMaxClientConn(val OptFloat64) {
	s.MaxClientConn = val
}

// SetConnectionString sets the value of ConnectionString.
func (s *V1PgbouncerConfigResponse) SetConnectionString(val OptString) {
	s.ConnectionString = val
}

func (*V1PgbouncerConfigResponse) v1GetPgbouncerConfigRes() {}

type V1PgbouncerConfigResponsePoolMode string

const (
	V1PgbouncerConfigResponsePoolModeTransaction V1PgbouncerConfigResponsePoolMode = "transaction"
	V1PgbouncerConfigResponsePoolModeSession     V1PgbouncerConfigResponsePoolMode = "session"
	V1PgbouncerConfigResponsePoolModeStatement   V1PgbouncerConfigResponsePoolMode = "statement"
)

// AllValues returns all V1PgbouncerConfigResponsePoolMode values.
func (V1PgbouncerConfigResponsePoolMode) AllValues() []V1PgbouncerConfigResponsePoolMode {
	return []V1PgbouncerConfigResponsePoolMode{
		V1PgbouncerConfigResponsePoolModeTransaction,
		V1PgbouncerConfigResponsePoolModeSession,
		V1PgbouncerConfigResponsePoolModeStatement,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1PgbouncerConfigResponsePoolMode) MarshalText() ([]byte, error) {
	switch s {
	case V1PgbouncerConfigResponsePoolModeTransaction:
		return []byte(s), nil
	case V1PgbouncerConfigResponsePoolModeSession:
		return []byte(s), nil
	case V1PgbouncerConfigResponsePoolModeStatement:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1PgbouncerConfigResponsePoolMode) UnmarshalText(data []byte) error {
	switch V1PgbouncerConfigResponsePoolMode(data) {
	case V1PgbouncerConfigResponsePoolModeTransaction:
		*s = V1PgbouncerConfigResponsePoolModeTransaction
		return nil
	case V1PgbouncerConfigResponsePoolModeSession:
		*s = V1PgbouncerConfigResponsePoolModeSession
		return nil
	case V1PgbouncerConfigResponsePoolModeStatement:
		*s = V1PgbouncerConfigResponsePoolModeStatement
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1PhysicalBackup
type V1PhysicalBackup struct {
	EarliestPhysicalBackupDateUnix OptFloat64 `json:"earliest_physical_backup_date_unix"`
	LatestPhysicalBackupDateUnix   OptFloat64 `json:"latest_physical_backup_date_unix"`
}

// GetEarliestPhysicalBackupDateUnix returns the value of EarliestPhysicalBackupDateUnix.
func (s *V1PhysicalBackup) GetEarliestPhysicalBackupDateUnix() OptFloat64 {
	return s.EarliestPhysicalBackupDateUnix
}

// GetLatestPhysicalBackupDateUnix returns the value of LatestPhysicalBackupDateUnix.
func (s *V1PhysicalBackup) GetLatestPhysicalBackupDateUnix() OptFloat64 {
	return s.LatestPhysicalBackupDateUnix
}

// SetEarliestPhysicalBackupDateUnix sets the value of EarliestPhysicalBackupDateUnix.
func (s *V1PhysicalBackup) SetEarliestPhysicalBackupDateUnix(val OptFloat64) {
	s.EarliestPhysicalBackupDateUnix = val
}

// SetLatestPhysicalBackupDateUnix sets the value of LatestPhysicalBackupDateUnix.
func (s *V1PhysicalBackup) SetLatestPhysicalBackupDateUnix(val OptFloat64) {
	s.LatestPhysicalBackupDateUnix = val
}

// Ref: #/components/schemas/V1PostgrestConfigResponse
type V1PostgrestConfigResponse struct {
	MaxRows int `json:"max_rows"`
	// If `null`, the value is automatically configured based on compute size.
	DbPool            NilInt `json:"db_pool"`
	DbSchema          string `json:"db_schema"`
	DbExtraSearchPath string `json:"db_extra_search_path"`
}

// GetMaxRows returns the value of MaxRows.
func (s *V1PostgrestConfigResponse) GetMaxRows() int {
	return s.MaxRows
}

// GetDbPool returns the value of DbPool.
func (s *V1PostgrestConfigResponse) GetDbPool() NilInt {
	return s.DbPool
}

// GetDbSchema returns the value of DbSchema.
func (s *V1PostgrestConfigResponse) GetDbSchema() string {
	return s.DbSchema
}

// GetDbExtraSearchPath returns the value of DbExtraSearchPath.
func (s *V1PostgrestConfigResponse) GetDbExtraSearchPath() string {
	return s.DbExtraSearchPath
}

// SetMaxRows sets the value of MaxRows.
func (s *V1PostgrestConfigResponse) SetMaxRows(val int) {
	s.MaxRows = val
}

// SetDbPool sets the value of DbPool.
func (s *V1PostgrestConfigResponse) SetDbPool(val NilInt) {
	s.DbPool = val
}

// SetDbSchema sets the value of DbSchema.
func (s *V1PostgrestConfigResponse) SetDbSchema(val string) {
	s.DbSchema = val
}

// SetDbExtraSearchPath sets the value of DbExtraSearchPath.
func (s *V1PostgrestConfigResponse) SetDbExtraSearchPath(val string) {
	s.DbExtraSearchPath = val
}

func (*V1PostgrestConfigResponse) updatePostgRESTConfigRes() {}

// Ref: #/components/schemas/V1ProjectRefResponse
type V1ProjectRefResponse struct {
	ID   float64 `json:"id"`
	Ref  string  `json:"ref"`
	Name string  `json:"name"`
}

// GetID returns the value of ID.
func (s *V1ProjectRefResponse) GetID() float64 {
	return s.ID
}

// GetRef returns the value of Ref.
func (s *V1ProjectRefResponse) GetRef() string {
	return s.Ref
}

// GetName returns the value of Name.
func (s *V1ProjectRefResponse) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *V1ProjectRefResponse) SetID(val float64) {
	s.ID = val
}

// SetRef sets the value of Ref.
func (s *V1ProjectRefResponse) SetRef(val string) {
	s.Ref = val
}

// SetName sets the value of Name.
func (s *V1ProjectRefResponse) SetName(val string) {
	s.Name = val
}

func (*V1ProjectRefResponse) deleteProjectRes() {}

// Ref: #/components/schemas/V1ProjectResponse
type V1ProjectResponse struct {
	// Id of your project.
	ID string `json:"id"`
	// Slug of your organization.
	OrganizationID string `json:"organization_id"`
	// Name of your project.
	Name string `json:"name"`
	// Region of your project.
	Region string `json:"region"`
	// Creation timestamp.
	CreatedAt string                  `json:"created_at"`
	Database  OptV1DatabaseResponse   `json:"database"`
	Status    V1ProjectResponseStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *V1ProjectResponse) GetID() string {
	return s.ID
}

// GetOrganizationID returns the value of OrganizationID.
func (s *V1ProjectResponse) GetOrganizationID() string {
	return s.OrganizationID
}

// GetName returns the value of Name.
func (s *V1ProjectResponse) GetName() string {
	return s.Name
}

// GetRegion returns the value of Region.
func (s *V1ProjectResponse) GetRegion() string {
	return s.Region
}

// GetCreatedAt returns the value of CreatedAt.
func (s *V1ProjectResponse) GetCreatedAt() string {
	return s.CreatedAt
}

// GetDatabase returns the value of Database.
func (s *V1ProjectResponse) GetDatabase() OptV1DatabaseResponse {
	return s.Database
}

// GetStatus returns the value of Status.
func (s *V1ProjectResponse) GetStatus() V1ProjectResponseStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *V1ProjectResponse) SetID(val string) {
	s.ID = val
}

// SetOrganizationID sets the value of OrganizationID.
func (s *V1ProjectResponse) SetOrganizationID(val string) {
	s.OrganizationID = val
}

// SetName sets the value of Name.
func (s *V1ProjectResponse) SetName(val string) {
	s.Name = val
}

// SetRegion sets the value of Region.
func (s *V1ProjectResponse) SetRegion(val string) {
	s.Region = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *V1ProjectResponse) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetDatabase sets the value of Database.
func (s *V1ProjectResponse) SetDatabase(val OptV1DatabaseResponse) {
	s.Database = val
}

// SetStatus sets the value of Status.
func (s *V1ProjectResponse) SetStatus(val V1ProjectResponseStatus) {
	s.Status = val
}

type V1ProjectResponseStatus string

const (
	V1ProjectResponseStatusACTIVEHEALTHY   V1ProjectResponseStatus = "ACTIVE_HEALTHY"
	V1ProjectResponseStatusACTIVEUNHEALTHY V1ProjectResponseStatus = "ACTIVE_UNHEALTHY"
	V1ProjectResponseStatusCOMINGUP        V1ProjectResponseStatus = "COMING_UP"
	V1ProjectResponseStatusGOINGDOWN       V1ProjectResponseStatus = "GOING_DOWN"
	V1ProjectResponseStatusINACTIVE        V1ProjectResponseStatus = "INACTIVE"
	V1ProjectResponseStatusINITFAILED      V1ProjectResponseStatus = "INIT_FAILED"
	V1ProjectResponseStatusREMOVED         V1ProjectResponseStatus = "REMOVED"
	V1ProjectResponseStatusRESTORING       V1ProjectResponseStatus = "RESTORING"
	V1ProjectResponseStatusUNKNOWN         V1ProjectResponseStatus = "UNKNOWN"
	V1ProjectResponseStatusUPGRADING       V1ProjectResponseStatus = "UPGRADING"
	V1ProjectResponseStatusPAUSING         V1ProjectResponseStatus = "PAUSING"
)

// AllValues returns all V1ProjectResponseStatus values.
func (V1ProjectResponseStatus) AllValues() []V1ProjectResponseStatus {
	return []V1ProjectResponseStatus{
		V1ProjectResponseStatusACTIVEHEALTHY,
		V1ProjectResponseStatusACTIVEUNHEALTHY,
		V1ProjectResponseStatusCOMINGUP,
		V1ProjectResponseStatusGOINGDOWN,
		V1ProjectResponseStatusINACTIVE,
		V1ProjectResponseStatusINITFAILED,
		V1ProjectResponseStatusREMOVED,
		V1ProjectResponseStatusRESTORING,
		V1ProjectResponseStatusUNKNOWN,
		V1ProjectResponseStatusUPGRADING,
		V1ProjectResponseStatusPAUSING,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1ProjectResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case V1ProjectResponseStatusACTIVEHEALTHY:
		return []byte(s), nil
	case V1ProjectResponseStatusACTIVEUNHEALTHY:
		return []byte(s), nil
	case V1ProjectResponseStatusCOMINGUP:
		return []byte(s), nil
	case V1ProjectResponseStatusGOINGDOWN:
		return []byte(s), nil
	case V1ProjectResponseStatusINACTIVE:
		return []byte(s), nil
	case V1ProjectResponseStatusINITFAILED:
		return []byte(s), nil
	case V1ProjectResponseStatusREMOVED:
		return []byte(s), nil
	case V1ProjectResponseStatusRESTORING:
		return []byte(s), nil
	case V1ProjectResponseStatusUNKNOWN:
		return []byte(s), nil
	case V1ProjectResponseStatusUPGRADING:
		return []byte(s), nil
	case V1ProjectResponseStatusPAUSING:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1ProjectResponseStatus) UnmarshalText(data []byte) error {
	switch V1ProjectResponseStatus(data) {
	case V1ProjectResponseStatusACTIVEHEALTHY:
		*s = V1ProjectResponseStatusACTIVEHEALTHY
		return nil
	case V1ProjectResponseStatusACTIVEUNHEALTHY:
		*s = V1ProjectResponseStatusACTIVEUNHEALTHY
		return nil
	case V1ProjectResponseStatusCOMINGUP:
		*s = V1ProjectResponseStatusCOMINGUP
		return nil
	case V1ProjectResponseStatusGOINGDOWN:
		*s = V1ProjectResponseStatusGOINGDOWN
		return nil
	case V1ProjectResponseStatusINACTIVE:
		*s = V1ProjectResponseStatusINACTIVE
		return nil
	case V1ProjectResponseStatusINITFAILED:
		*s = V1ProjectResponseStatusINITFAILED
		return nil
	case V1ProjectResponseStatusREMOVED:
		*s = V1ProjectResponseStatusREMOVED
		return nil
	case V1ProjectResponseStatusRESTORING:
		*s = V1ProjectResponseStatusRESTORING
		return nil
	case V1ProjectResponseStatusUNKNOWN:
		*s = V1ProjectResponseStatusUNKNOWN
		return nil
	case V1ProjectResponseStatusUPGRADING:
		*s = V1ProjectResponseStatusUPGRADING
		return nil
	case V1ProjectResponseStatusPAUSING:
		*s = V1ProjectResponseStatusPAUSING
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1RestorePitrBody
type V1RestorePitrBody struct {
	RecoveryTimeTargetUnix float64 `json:"recovery_time_target_unix"`
}

// GetRecoveryTimeTargetUnix returns the value of RecoveryTimeTargetUnix.
func (s *V1RestorePitrBody) GetRecoveryTimeTargetUnix() float64 {
	return s.RecoveryTimeTargetUnix
}

// SetRecoveryTimeTargetUnix sets the value of RecoveryTimeTargetUnix.
func (s *V1RestorePitrBody) SetRecoveryTimeTargetUnix(val float64) {
	s.RecoveryTimeTargetUnix = val
}

// V1RestorePitrCreated is response for V1RestorePitr operation.
type V1RestorePitrCreated struct{}

// Ref: #/components/schemas/V1RunQueryBody
type V1RunQueryBody struct {
	Query string `json:"query"`
}

// GetQuery returns the value of Query.
func (s *V1RunQueryBody) GetQuery() string {
	return s.Query
}

// SetQuery sets the value of Query.
func (s *V1RunQueryBody) SetQuery(val string) {
	s.Query = val
}

type V1RunQueryCreated struct{}

func (*V1RunQueryCreated) v1RunQueryRes() {}

// V1RunQueryForbidden is response for V1RunQuery operation.
type V1RunQueryForbidden struct{}

func (*V1RunQueryForbidden) v1RunQueryRes() {}

// V1RunQueryInternalServerError is response for V1RunQuery operation.
type V1RunQueryInternalServerError struct{}

func (*V1RunQueryInternalServerError) v1RunQueryRes() {}

// Ref: #/components/schemas/V1ServiceHealthResponse
type V1ServiceHealthResponse struct {
	Info    OptV1ServiceHealthResponseInfo `json:"info"`
	Name    V1ServiceHealthResponseName    `json:"name"`
	Healthy bool                           `json:"healthy"`
	Status  V1ServiceHealthResponseStatus  `json:"status"`
	Error   OptString                      `json:"error"`
}

// GetInfo returns the value of Info.
func (s *V1ServiceHealthResponse) GetInfo() OptV1ServiceHealthResponseInfo {
	return s.Info
}

// GetName returns the value of Name.
func (s *V1ServiceHealthResponse) GetName() V1ServiceHealthResponseName {
	return s.Name
}

// GetHealthy returns the value of Healthy.
func (s *V1ServiceHealthResponse) GetHealthy() bool {
	return s.Healthy
}

// GetStatus returns the value of Status.
func (s *V1ServiceHealthResponse) GetStatus() V1ServiceHealthResponseStatus {
	return s.Status
}

// GetError returns the value of Error.
func (s *V1ServiceHealthResponse) GetError() OptString {
	return s.Error
}

// SetInfo sets the value of Info.
func (s *V1ServiceHealthResponse) SetInfo(val OptV1ServiceHealthResponseInfo) {
	s.Info = val
}

// SetName sets the value of Name.
func (s *V1ServiceHealthResponse) SetName(val V1ServiceHealthResponseName) {
	s.Name = val
}

// SetHealthy sets the value of Healthy.
func (s *V1ServiceHealthResponse) SetHealthy(val bool) {
	s.Healthy = val
}

// SetStatus sets the value of Status.
func (s *V1ServiceHealthResponse) SetStatus(val V1ServiceHealthResponseStatus) {
	s.Status = val
}

// SetError sets the value of Error.
func (s *V1ServiceHealthResponse) SetError(val OptString) {
	s.Error = val
}

// V1ServiceHealthResponseInfo represents sum type.
type V1ServiceHealthResponseInfo struct {
	Type                   V1ServiceHealthResponseInfoType // switch on this field
	AuthHealthResponse     AuthHealthResponse
	RealtimeHealthResponse RealtimeHealthResponse
}

// V1ServiceHealthResponseInfoType is oneOf type of V1ServiceHealthResponseInfo.
type V1ServiceHealthResponseInfoType string

// Possible values for V1ServiceHealthResponseInfoType.
const (
	AuthHealthResponseV1ServiceHealthResponseInfo     V1ServiceHealthResponseInfoType = "AuthHealthResponse"
	RealtimeHealthResponseV1ServiceHealthResponseInfo V1ServiceHealthResponseInfoType = "RealtimeHealthResponse"
)

// IsAuthHealthResponse reports whether V1ServiceHealthResponseInfo is AuthHealthResponse.
func (s V1ServiceHealthResponseInfo) IsAuthHealthResponse() bool {
	return s.Type == AuthHealthResponseV1ServiceHealthResponseInfo
}

// IsRealtimeHealthResponse reports whether V1ServiceHealthResponseInfo is RealtimeHealthResponse.
func (s V1ServiceHealthResponseInfo) IsRealtimeHealthResponse() bool {
	return s.Type == RealtimeHealthResponseV1ServiceHealthResponseInfo
}

// SetAuthHealthResponse sets V1ServiceHealthResponseInfo to AuthHealthResponse.
func (s *V1ServiceHealthResponseInfo) SetAuthHealthResponse(v AuthHealthResponse) {
	s.Type = AuthHealthResponseV1ServiceHealthResponseInfo
	s.AuthHealthResponse = v
}

// GetAuthHealthResponse returns AuthHealthResponse and true boolean if V1ServiceHealthResponseInfo is AuthHealthResponse.
func (s V1ServiceHealthResponseInfo) GetAuthHealthResponse() (v AuthHealthResponse, ok bool) {
	if !s.IsAuthHealthResponse() {
		return v, false
	}
	return s.AuthHealthResponse, true
}

// NewAuthHealthResponseV1ServiceHealthResponseInfo returns new V1ServiceHealthResponseInfo from AuthHealthResponse.
func NewAuthHealthResponseV1ServiceHealthResponseInfo(v AuthHealthResponse) V1ServiceHealthResponseInfo {
	var s V1ServiceHealthResponseInfo
	s.SetAuthHealthResponse(v)
	return s
}

// SetRealtimeHealthResponse sets V1ServiceHealthResponseInfo to RealtimeHealthResponse.
func (s *V1ServiceHealthResponseInfo) SetRealtimeHealthResponse(v RealtimeHealthResponse) {
	s.Type = RealtimeHealthResponseV1ServiceHealthResponseInfo
	s.RealtimeHealthResponse = v
}

// GetRealtimeHealthResponse returns RealtimeHealthResponse and true boolean if V1ServiceHealthResponseInfo is RealtimeHealthResponse.
func (s V1ServiceHealthResponseInfo) GetRealtimeHealthResponse() (v RealtimeHealthResponse, ok bool) {
	if !s.IsRealtimeHealthResponse() {
		return v, false
	}
	return s.RealtimeHealthResponse, true
}

// NewRealtimeHealthResponseV1ServiceHealthResponseInfo returns new V1ServiceHealthResponseInfo from RealtimeHealthResponse.
func NewRealtimeHealthResponseV1ServiceHealthResponseInfo(v RealtimeHealthResponse) V1ServiceHealthResponseInfo {
	var s V1ServiceHealthResponseInfo
	s.SetRealtimeHealthResponse(v)
	return s
}

type V1ServiceHealthResponseName string

const (
	V1ServiceHealthResponseNameAuth     V1ServiceHealthResponseName = "auth"
	V1ServiceHealthResponseNameDb       V1ServiceHealthResponseName = "db"
	V1ServiceHealthResponseNamePooler   V1ServiceHealthResponseName = "pooler"
	V1ServiceHealthResponseNameRealtime V1ServiceHealthResponseName = "realtime"
	V1ServiceHealthResponseNameRest     V1ServiceHealthResponseName = "rest"
	V1ServiceHealthResponseNameStorage  V1ServiceHealthResponseName = "storage"
)

// AllValues returns all V1ServiceHealthResponseName values.
func (V1ServiceHealthResponseName) AllValues() []V1ServiceHealthResponseName {
	return []V1ServiceHealthResponseName{
		V1ServiceHealthResponseNameAuth,
		V1ServiceHealthResponseNameDb,
		V1ServiceHealthResponseNamePooler,
		V1ServiceHealthResponseNameRealtime,
		V1ServiceHealthResponseNameRest,
		V1ServiceHealthResponseNameStorage,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1ServiceHealthResponseName) MarshalText() ([]byte, error) {
	switch s {
	case V1ServiceHealthResponseNameAuth:
		return []byte(s), nil
	case V1ServiceHealthResponseNameDb:
		return []byte(s), nil
	case V1ServiceHealthResponseNamePooler:
		return []byte(s), nil
	case V1ServiceHealthResponseNameRealtime:
		return []byte(s), nil
	case V1ServiceHealthResponseNameRest:
		return []byte(s), nil
	case V1ServiceHealthResponseNameStorage:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1ServiceHealthResponseName) UnmarshalText(data []byte) error {
	switch V1ServiceHealthResponseName(data) {
	case V1ServiceHealthResponseNameAuth:
		*s = V1ServiceHealthResponseNameAuth
		return nil
	case V1ServiceHealthResponseNameDb:
		*s = V1ServiceHealthResponseNameDb
		return nil
	case V1ServiceHealthResponseNamePooler:
		*s = V1ServiceHealthResponseNamePooler
		return nil
	case V1ServiceHealthResponseNameRealtime:
		*s = V1ServiceHealthResponseNameRealtime
		return nil
	case V1ServiceHealthResponseNameRest:
		*s = V1ServiceHealthResponseNameRest
		return nil
	case V1ServiceHealthResponseNameStorage:
		*s = V1ServiceHealthResponseNameStorage
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1ServiceHealthResponseStatus string

const (
	V1ServiceHealthResponseStatusCOMINGUP      V1ServiceHealthResponseStatus = "COMING_UP"
	V1ServiceHealthResponseStatusACTIVEHEALTHY V1ServiceHealthResponseStatus = "ACTIVE_HEALTHY"
	V1ServiceHealthResponseStatusUNHEALTHY     V1ServiceHealthResponseStatus = "UNHEALTHY"
)

// AllValues returns all V1ServiceHealthResponseStatus values.
func (V1ServiceHealthResponseStatus) AllValues() []V1ServiceHealthResponseStatus {
	return []V1ServiceHealthResponseStatus{
		V1ServiceHealthResponseStatusCOMINGUP,
		V1ServiceHealthResponseStatusACTIVEHEALTHY,
		V1ServiceHealthResponseStatusUNHEALTHY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1ServiceHealthResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case V1ServiceHealthResponseStatusCOMINGUP:
		return []byte(s), nil
	case V1ServiceHealthResponseStatusACTIVEHEALTHY:
		return []byte(s), nil
	case V1ServiceHealthResponseStatusUNHEALTHY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1ServiceHealthResponseStatus) UnmarshalText(data []byte) error {
	switch V1ServiceHealthResponseStatus(data) {
	case V1ServiceHealthResponseStatusCOMINGUP:
		*s = V1ServiceHealthResponseStatusCOMINGUP
		return nil
	case V1ServiceHealthResponseStatusACTIVEHEALTHY:
		*s = V1ServiceHealthResponseStatusACTIVEHEALTHY
		return nil
	case V1ServiceHealthResponseStatusUNHEALTHY:
		*s = V1ServiceHealthResponseStatusUNHEALTHY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/V1StorageBucketResponse
type V1StorageBucketResponse struct {
	ID        string `json:"id"`
	Name      string `json:"name"`
	Owner     string `json:"owner"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	Public    bool   `json:"public"`
}

// GetID returns the value of ID.
func (s *V1StorageBucketResponse) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *V1StorageBucketResponse) GetName() string {
	return s.Name
}

// GetOwner returns the value of Owner.
func (s *V1StorageBucketResponse) GetOwner() string {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *V1StorageBucketResponse) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *V1StorageBucketResponse) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetPublic returns the value of Public.
func (s *V1StorageBucketResponse) GetPublic() bool {
	return s.Public
}

// SetID sets the value of ID.
func (s *V1StorageBucketResponse) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *V1StorageBucketResponse) SetName(val string) {
	s.Name = val
}

// SetOwner sets the value of Owner.
func (s *V1StorageBucketResponse) SetOwner(val string) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *V1StorageBucketResponse) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *V1StorageBucketResponse) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetPublic sets the value of Public.
func (s *V1StorageBucketResponse) SetPublic(val bool) {
	s.Public = val
}

// Ref: #/components/schemas/V1UpdateFunctionBody
type V1UpdateFunctionBody struct {
	Name      OptString `json:"name"`
	Body      OptString `json:"body"`
	VerifyJwt OptBool   `json:"verify_jwt"`
}

// GetName returns the value of Name.
func (s *V1UpdateFunctionBody) GetName() OptString {
	return s.Name
}

// GetBody returns the value of Body.
func (s *V1UpdateFunctionBody) GetBody() OptString {
	return s.Body
}

// GetVerifyJwt returns the value of VerifyJwt.
func (s *V1UpdateFunctionBody) GetVerifyJwt() OptBool {
	return s.VerifyJwt
}

// SetName sets the value of Name.
func (s *V1UpdateFunctionBody) SetName(val OptString) {
	s.Name = val
}

// SetBody sets the value of Body.
func (s *V1UpdateFunctionBody) SetBody(val OptString) {
	s.Body = val
}

// SetVerifyJwt sets the value of VerifyJwt.
func (s *V1UpdateFunctionBody) SetVerifyJwt(val OptBool) {
	s.VerifyJwt = val
}

// Ref: #/components/schemas/VanitySubdomainBody
type VanitySubdomainBody struct {
	VanitySubdomain string `json:"vanity_subdomain"`
}

// GetVanitySubdomain returns the value of VanitySubdomain.
func (s *VanitySubdomainBody) GetVanitySubdomain() string {
	return s.VanitySubdomain
}

// SetVanitySubdomain sets the value of VanitySubdomain.
func (s *VanitySubdomainBody) SetVanitySubdomain(val string) {
	s.VanitySubdomain = val
}

// Ref: #/components/schemas/VanitySubdomainConfigResponse
type VanitySubdomainConfigResponse struct {
	Status       VanitySubdomainConfigResponseStatus `json:"status"`
	CustomDomain OptString                           `json:"custom_domain"`
}

// GetStatus returns the value of Status.
func (s *VanitySubdomainConfigResponse) GetStatus() VanitySubdomainConfigResponseStatus {
	return s.Status
}

// GetCustomDomain returns the value of CustomDomain.
func (s *VanitySubdomainConfigResponse) GetCustomDomain() OptString {
	return s.CustomDomain
}

// SetStatus sets the value of Status.
func (s *VanitySubdomainConfigResponse) SetStatus(val VanitySubdomainConfigResponseStatus) {
	s.Status = val
}

// SetCustomDomain sets the value of CustomDomain.
func (s *VanitySubdomainConfigResponse) SetCustomDomain(val OptString) {
	s.CustomDomain = val
}

func (*VanitySubdomainConfigResponse) getVanitySubdomainConfigRes() {}

type VanitySubdomainConfigResponseStatus string

const (
	VanitySubdomainConfigResponseStatusNotUsed          VanitySubdomainConfigResponseStatus = "not-used"
	VanitySubdomainConfigResponseStatusCustomDomainUsed VanitySubdomainConfigResponseStatus = "custom-domain-used"
	VanitySubdomainConfigResponseStatusActive           VanitySubdomainConfigResponseStatus = "active"
)

// AllValues returns all VanitySubdomainConfigResponseStatus values.
func (VanitySubdomainConfigResponseStatus) AllValues() []VanitySubdomainConfigResponseStatus {
	return []VanitySubdomainConfigResponseStatus{
		VanitySubdomainConfigResponseStatusNotUsed,
		VanitySubdomainConfigResponseStatusCustomDomainUsed,
		VanitySubdomainConfigResponseStatusActive,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VanitySubdomainConfigResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case VanitySubdomainConfigResponseStatusNotUsed:
		return []byte(s), nil
	case VanitySubdomainConfigResponseStatusCustomDomainUsed:
		return []byte(s), nil
	case VanitySubdomainConfigResponseStatusActive:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VanitySubdomainConfigResponseStatus) UnmarshalText(data []byte) error {
	switch VanitySubdomainConfigResponseStatus(data) {
	case VanitySubdomainConfigResponseStatusNotUsed:
		*s = VanitySubdomainConfigResponseStatusNotUsed
		return nil
	case VanitySubdomainConfigResponseStatusCustomDomainUsed:
		*s = VanitySubdomainConfigResponseStatusCustomDomainUsed
		return nil
	case VanitySubdomainConfigResponseStatusActive:
		*s = VanitySubdomainConfigResponseStatusActive
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
